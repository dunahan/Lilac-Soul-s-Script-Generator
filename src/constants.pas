{
Copyright 2011 The Krit
Copyright 2006 Carsten Hjorth√∏j (Lilac Soul)

The Script Generator is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The Script Generator is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
}

{
The Krit created this unit to collect a bunch of string data from the Script
Generator into a central location -- sometimes to reduce redundancy, sometimes
for ease of editing. It also includes some string-handling routines, and a
function for loading string data into widgets (mostly for TComboBox, but could
be used for anything with a TStrings).
}


{$MODE Delphi}
{$LONGSTRINGS OFF}
{$WRITEABLECONST OFF}


unit constants;


interface

uses
  Classes, StdCtrls;

type
    // Used by the longer lists that have pairs (or triples) of strings.
    StringPair = array[0..1] of pchar;
    StringTriple = array[0..2] of pchar;

    // Enumerates used when convenient.
    // These currently cover only the playable classes and races, but could
    // be extended (without side-effects, I think) if the others are needed.
    // Just make sure they correspond to a contiguous block in the arrays
    // defining the NWScript constants.
    TClassEnum = ( E_Barbarian=0, E_Bard, E_Cleric, E_Druid, E_Fighter, E_Monk,
                   E_Paladin, E_Ranger, E_Rogue, E_Sorcerer, E_Wizard,
                   E_Archer, E_Assassin, E_Blackguard, E_Champion, E_Defender,
                   E_Harper, E_PaleMaster, E_PurpleDragon, E_DragonDisciple,
                   E_Shadowdancer, E_Shifter, E_WeaponMaster );
    TRaceEnum = ( E_Dwarf=0, E_Elf, E_Gnome, E_Halfling, E_HalfElf, E_HalfOrc, E_Human );

    // The standard options for selecting an object in the game.
    // Keep in sync with ObjectVar() and ObjectDesc() (both defined later).
    // (Comparing these will be more efficient than comparing strings.)
    TObjectEnum = ( E_CHOOSE_Owner,     E_CHOOSE_Self,      E_CHOOSE_PC,
                    E_CHOOSE_Activator, E_CHOOSE_ActTarget, E_CHOOSE_Tagged,
                    E_CHOOSE_Actor,     E_CHOOSE_Spawn,     E_CHOOSE_Other );
    TObjectList = array[TObjectEnum] of boolean;


// -----------------------------------------------------------------------------
// Some handy utilities.
procedure LoadConstants(Destination: TStrings; const Source: array of pchar);        overload;
procedure LoadConstants(Destination: TStrings; const Source: array of StringPair);   overload;
procedure LoadConstants(Destination: TStrings; const Source: array of StringTriple); overload;

function SymConst(const List: array of pchar;        Index: integer): shortstring; overload;
function SymConst(const List: array of StringPair;   Index: integer): shortstring; overload;
function SymConst(const List: array of StringTriple; Index: integer): shortstring; overload;
//function SymbolToIndex(const sSymbol: shortstring; const List: array of pchar): integer; // Not needed yet.
function SymbolToIndex(const sSymbol: shortstring; const List: array of StringPair): integer;
//function SymbolToIndex(const sSymbol: shortstring; const List: array of StringTriple): integer; // Not needed yet.

function ConstDisplay(const List: array of StringPair;   Index: integer): shortstring; overload; inline;
function ConstDisplay(const List: array of StringTriple; Index: integer): shortstring; overload; inline;
function ConstInfo(const List: array of StringTriple; Index: integer): pchar; inline;

function NameToConstant(const sPrefix: pchar; const sName: shortstring): shortstring;
function NameToCommand(const sPrefix: pchar; const sName: shortstring): shortstring;

function GetChosenObject(RadioOwner, RadioPC, RadioActivator, RadioTargeted,
                         RadioTagged, RadioActor, RadioSpawn: TRadioButton;
                         bAllowMacro: boolean=TRUE) : TObjectEnum;
function ObjectDesc(eWhich: TObjectEnum; const sTagText: shortstring;
                    bReflexive: boolean=false; const sAlt: shortstring='') : shortstring;
function ObjectVar(eWhich: TObjectEnum; const sAlt: shortstring=''; bLocation: boolean=FALSE) : shortstring;

// Some generic functions that I did not feel like creating a unit for.
function BoolToStr(B: boolean; const TrueS, FalseS: shortstring): shortstring; overload; inline;
function ChopBoth(const sString: shortstring; nLeft, nRight: integer): shortstring; inline;
//function ChopLeft(const sString: shortstring; nCount: integer): shortstring; inline;  // Not needed yet.
//function ChopRight(const sString: shortstring; nCount: integer): shortstring; inline; // Not needed yet.
function LastChar(const sString: shortstring): char; inline;
function QuoteSwap(const InString: shortstring): shortstring;
function Spaces(how_long: integer): shortstring;    // Returns a string of spaces.
function StartsWith(const sString, sPrefix: shortstring; nStart: integer=1): boolean; inline;


// -----------------------------------------------------------------------------
// Some commonly used strings, defined once here to (possibly) conserve space.
const
    // Misc.
    s_TRUE           = 'TRUE';
    s_FALSE          = 'FALSE';
    s_comma_TRUE     = ', TRUE';
    s_comma_FALSE    = ', FALSE';
    s_Return         = '    return;';
    s_ReturnFalse    = '    return FALSE;';

    // Variables
    s_bCurState      = 'bCurState';
    s_eDamage        = 'eDamage';
    s_eEffect        = 'eEffect';
    s_eVFX           = 'eVFX';
    s_fValue         = 'fValue';
    s_ipAdd          = 'ipAdd';
    s_lActTarget     = 'lActTarget';
    s_lTarget        = 'lTarget';
    s_nCount         = 'nCount';
    s_nHench         = 'nHench';
    s_nType          = 'nType';
    s_nValue         = 'nValue';
    s_OBJECT_INVALID = 'OBJECT_INVALID';
    s_OBJECT_SELF    = 'OBJECT_SELF';
    s_oActivator     = 'oActivator';
    s_oActor         = 'oActor';
    s_oActTarget     = 'oActTarget';
    s_oArea          = 'oArea';
    s_oDelay         = 'oDelayer';
    s_oEventItem     = 'oEventItem';
    s_oHench         = 'oHench';
    s_oItem          = 'oItem';
    s_oMaster        = 'oMaster';
    s_oParty         = 'oParty';
    s_oPC            = 'oPC';
    s_oSelf          = 'oSelf';
    s_oSpawn         = 'oSpawn';
    s_oTarget        = 'oTarget';
    s_oTrap          = 'oTrap';
    s_sValue         = 'sValue';

    // Functions
    s_AssignCommand  = 'AssignCommand(';//oActionSubject, aActionToAssign) // Sometimes just as convenient as Script.AssignCommand().
    s_EffectVisual   = 'EffectVisualEffect(';//nVFX)
    s_GetAreaPC      = 'GetArea('+s_oPC+')';
    s_GetLocation    = 'GetLocation(';//object)
    s_GetModule      = 'GetModule()';
    s_GetNearest     = 'GetNearestObjectByTag("';//tag"[, object, nth])
    s_GetObject      = 'GetObjectByTag("';//tag"[, nth])
    s_GetWaypoint    = 'GetWaypointByTag("';//tag")


    // Flags a value other than a variable name or symbolic constant.
    // Must be different from the beginning of all variable/constant names in use.
    TAG_FLAG = 'Tag: ';


// -----------------------------------------------------------------------------
// The NWScript constants
const
    // Note that most of these constants will be in alphabetical order by common
    // name, rather than strict alphabetical order or  numerical order of their
    // values in NWScript. This should allow for more intuitive widgets for the
    // end user.
    // The last entry in each array will be some information about how to
    // construct the symbolic constants. The symbol is usually the last entry
    // followed by the desired entry, converted via NameToConstant(). However,
    // if the last entry is nil, no conversion takes place.

    // For several lists, I will use an array of arrays, with the inner array
    // consisting of two or three entries -- the common name, the abbreviated
    // NWScript constant, and possibly some information about how these can be
    // used.
    // The last entries for these will not have nil for the symbol prefix.
    // The "handy utilities" above include ways to access these parts.

    // Sometimes I could abbreviate NWScript constants more than I did. Often
    // what I have is a consequence of how this data was generated, rather than
    // an attempt for optimality. (I did regernerate a good portion of this data
    // from nwscript.nss and various .2da files.) -- TK


    // The NWscript symbolic constants for AC types.
    // Not many of these, but the 'ENCHANTMENT_' in only some of them makes this
    // array convenient.
    AC_TYPE: array[0..5] of pchar =
      ( 'AC_ARMOUR_ENCHANTMENT_BONUS',
        'AC_DEFLECTION_BONUS',
        'AC_DODGE_BONUS',
        'AC_NATURAL_BONUS',
        'AC_SHIELD_ENCHANTMENT_BONUS',
        // The trailing info row:
        nil );

    // The names for alignments.
    ALIGNMENT_NAME: array[0..5] of pChar  =
      ( 'Good',
        'Evil',
        'Neutral',
        'Lawful',
        'Chaotic',
        // The trailing info row:
        'ALIGNMENT_' );

    // The NWScript symbolic constants for good-evil alignments.
    ALIGNMENT_GE: array[0..3] of pchar =
      ( 'ALIGNMENT_GOOD',
        'ALIGNMENT_NEUTRAL',
        'ALIGNMENT_EVIL',
        // The trailing info row:
        nil );
    // The NWScript symbolic constants for law-chaos alignments.
    ALIGNMENT_LC: array[0..3] of pchar =
      ( 'ALIGNMENT_LAWFUL',
        'ALIGNMENT_NEUTRAL',
        'ALIGNMENT_CHAOTIC',
        // The trailing info row:
        nil );

    // The NWScript symbolic constants for ambient sounds.
    AMBIENT_SOUND: array[0..113] of StringPair =
      ( ( '(No Ambient Sound)',          '_NONE' ),
        ( 'Blacksmith Shop',             '_BLACK_SMITH' ),
        ( 'Bordello Men and Women',      '_BORDELLO_MEN_AND_WOMEN' ),
        ( 'Bordello Women',              '_BORDELLO_WOMEN' ),
        ( 'Castle Interior Large',       '_CASTLE_INTERIOR_LARGE' ),
        ( 'Castle Interior Medium',      '_CASTLE_INTERIOR_MEDIUM' ),
        ( 'Castle Interior Small',       '_CASTLE_INTERIOR_SMALL' ),
        ( 'Cave Evil 1',                 '_CAVE_EVIL_1_XP2' ),
        ( 'Cave Evil 2',                 '_CAVE_EVIL_2_XP2' ),
        ( 'Cave Evil 3',                 '_CAVE_EVIL_3_XP2' ),
        ( 'Cave Insects 1',              '_CAVE_INSECTS_1' ),
        ( 'Cave Insects 2',              '_CAVE_INSECTS_2' ),
        ( 'Cave Large',                  '_CAVE_LARGE' ),
        ( 'Cave Medium',                 '_CAVE_MEDIUM' ),
        ( 'Cave Small',                  '_CAVE_SMALL' ),
        ( 'City Day Crowded',            '_CITY_DAY_CROWDED' ),
        ( 'City Day Sparse',             '_CITY_DAY_SPARSE' ),
        ( 'City Market',                 '_CITY_MARKET' ),
        ( 'City Night',                  '_CITY_NIGHT' ),
        ( 'City Slums Day Crowded',      '_CITY_SLUMS_DAY_CROWDED' ),
        ( 'City Slums Day Sparse',       '_CITY_SLUMS_DAY_SPARSE' ),
        ( 'City Slums Night',            '_CITY_SLUMS_NIGHT' ),
        ( 'City Temple District',        '_CITY_TEMPLE_DISTRICT' ),
        ( 'Combat Muffled 1',            '_COMBAT_MUFFLED_1' ),
        ( 'Combat Muffled 2',            '_COMBAT_MUFFLED_2' ),
        ( 'Combat Outside 1',            '_COMBAT_OUTSIDE_1' ),
        ( 'Combat Outside 2',            '_COMBAT_OUTSIDE_2' ),
        ( 'Commoner Tavern Talk',        '_COMMONER_TAVERN_TALK' ),
        ( 'Crow Caws 1',                 '110' ),
        ( 'Crow Caws 2',                 '111' ),
        ( 'Crypt Medium 1',              '_CRYPT_MEDIUM_1' ),
        ( 'Crypt Medium 2',              '_CRYPT_MEDIUM_2' ),
        ( 'Crypt Small',                 '_CRYPT_SMALL' ),
        ( 'Desert Day',                  '_DESERT_DAY_XP1' ),
        ( 'Desert Night',                '_DESERT_NIGHT_XP1' ),
        ( 'Dungeon Lava Lake',           '_DUNGEON_LAKE_LAVA' ),
        ( 'Evil Drone',                  '_EVIL_DRONE_XP2' ),
        ( 'Evil Dungeon Large',          '_EVIL_DUNGEON_LARGE' ),
        ( 'Evil Dungeon Medium',         '_EVIL_DUNGEON_MEDIUM' ),
        ( 'Evil Dungeon Small',          '_EVIL_DUNGEON_SMALL' ),
        ( 'Forest Day 1',                '_FOREST_DAY_1' ),
        ( 'Forest Day 2',                '_FOREST_DAY_2' ),
        ( 'Forest Day 3',                '_FOREST_DAY_3' ),
        ( 'Forest Day Scary',            '_FOREST_DAY_SCARY' ),
        ( 'Forest Magical',              '_FOREST_MAGICAL' ),
        ( 'Forest Night 1',              '_FOREST_NIGHT_1' ),
        ( 'Forest Night 2',              '_FOREST_NIGHT_2' ),
        ( 'Forest Night Scary',          '_FOREST_NIGHT_SCARY' ),
        ( 'Frozen Hell',                 '_FROZEN_HELL_XP2' ),
        ( 'Haunted Interior 1',          '_HAUNTED_INTERIOR_1' ),
        ( 'Haunted Interior 2',          '_HAUNTED_INTERIOR_2' ),
        ( 'Haunted Interior 3',          '_HAUNTED_INTERIOR_3' ),
        ( 'House Interior 1',            '_HOUSE_INTERIOR_1' ),
        ( 'House Interior 2',            '_HOUSE_INTERIOR_2' ),
        ( 'House Interior 3',            '_HOUSE_INTERIOR_3' ),
        ( 'Interior Insects 1',          '_INTERIOR_INSECTS_1' ),
        ( 'Interior Insects 2',          '_INTERIOR_INSECTS_2' ),
        ( 'Kitchen Interior Large',      '_KITCHEN_INTERIOR_LARGE' ),
        ( 'Kitchen Interior Small',      '_KITCHEN_INTERIOR_SMALL' ),
        ( 'Large Group Talks Inside',    '_LARGE_GROUP_TALKS_INSIDE' ),
        ( 'Lizardfolk Cave Crystals',    '_LIZARD_FOLK_CAVE_CRYSTALS' ),
        ( 'Magical Interior Airlab',     '_MAGICAL_INTERIOR_AIRLAB' ),
        ( 'Magical Interior Earthlab',   '_MAGICAL_INTERIOR_EARTHLAB' ),
        ( 'Magical Interior Evil',       '_MAGIC_INTERIOR_EVIL' ),
        ( 'Magical Interior Firelab',    '_MAGICAL_INTERIOR_FIRELAB' ),
        ( 'Magical Interior Large',      '_MAGIC_INTERIOR_LARGE' ),
        ( 'Magical Interior Medium',     '_MAGIC_INTERIOR_MEDIUM' ),
        ( 'Magical Interior Small',      '_MAGIC_INTERIOR_SMALL' ),
        ( 'Magical Interior Waterlab',   '_MAGICAL_INTERIOR_WATERLAB' ),
        ( 'Medium Group Talks Inside',   '_MEDIUM_GROUP_TALKS_INSIDE' ),
        ( 'Men Whisper Inside',          '_MEN_WHISPER_INSIDE' ),
        ( 'Mine Large',                  '_MINE_LARGE' ),
        ( 'Mine Medium',                 '_MINE_MEDIUM' ),
        ( 'Mine Small',                  '_MINE_SMALL' ),
        ( 'Monastery Interior',          '_MONASTERY_INTERIOR_XP1' ),
        ( 'Noble Tavern Talk',           '_NOBLE_TAVERN_TALK' ),
        ( 'Owl Hoots',                   '112' ),
        ( 'Owl Hoots Night',             '113' ),
        ( 'People Whisper Inside',       '_PEOPLE_WHISPER_INSIDE' ),
        ( 'Pit Cries',                   '_PIT_CRIES' ),
        ( 'Plane of Fire',               '_PLAIN_OF_FIRE_XP2' ),
        ( 'Rain Hard',                   '_RAIN_HARD' ),
        ( 'Rain Light',                  '_RAIN_LIGHT' ),
        ( 'Rainstorm Big',               '_RAIN_STORM_BIG' ),
        ( 'Rainstorm Small',             '_RAIN_STORM_SMALL' ),
        ( 'Riot Muffled',                '_RIOT_MUFFLED' ),
        ( 'Riot Outside',                '_RIOT_OUTSIDE' ),
        ( 'Ruins, Haunted',              '_RUIN_HAUNTED_XP1' ),
        ( 'Ruins, Rumbling',             '_RUIN_RUMBLING_XP1' ),
        ( 'Ruins, Wet',                  '_RUIN_WET_XP1' ),
        ( 'Sandstorm, Extreme',          '_SAND_STORM_EXTREME_XP1' ),
        ( 'Sandstorm, Light',            '_SAND_STORM_LIGHT_XP1' ),
        ( 'Sea Surf Large',              '109' ),
        ( 'Sea Surf Small',              '108' ),
        ( 'Sewer Sludge Lake',           '_SEWER_SLUDGE_LAKE' ),
        ( 'Sewers 1',                    '_SEWERS_1' ),
        ( 'Sewers 2',                    '_SEWERS_2' ),
        ( 'Small Group Talks Inside',    '_SMALL_GROUP_TALKS_INSIDE' ),
        ( 'Tavern, Rowdy',               '_TAVERN_ROWDY' ),
        ( 'Town Day Crowded',            '_TOWN_DAY_CROWDED' ),
        ( 'Town Day Sparse',             '_TOWN_DAY_SPARSE' ),
        ( 'Town Night',                  '_TOWN_NIGHT' ),
        ( 'Wind Cavern',                 '_GUST_CAVERN' ),
        ( 'Wind Chasm',                  '_GUST_CHASM' ),
        ( 'Wind Draft',                  '_GUST_DRAFT' ),
        ( 'Wind Forest',                 '_WIND_FOREST' ),
        ( 'Wind Grass',                  '_GUST_GRASS' ),
        ( 'Wind Medium',                 '_WIND_MEDIUM' ),
        ( 'Wind Soft',                   '_WIND_SOFT' ),
        ( 'Wind Strong',                 '_WIND_STRONG' ),
        ( 'Winter Day Wet',              '_WINTER_DAY_WET_XP1' ),
        ( 'Winter Day Windy',            '_WINTER_DAY_WINDY_XP1' ),
        ( 'Women Whisper Inside',        '_WOMEN_WHISPER_INSIDE' ),
        // The trailing info row:
        ( nil, 'AMBIENT_SOUND' )
      );

    // The NWScript symbolic constants for animations.
    ANIMATION: array[0..38] of pchar =
      ( 'ANIMATION_FIREFORGET_BOW',
        'ANIMATION_FIREFORGET_DODGE_SIDE',
        'ANIMATION_FIREFORGET_DODGE_DUCK',
        'ANIMATION_FIREFORGET_DRINK',
        'ANIMATION_FIREFORGET_GREETING',
        'ANIMATION_FIREFORGET_HEAD_TURN_LEFT',
        'ANIMATION_FIREFORGET_HEAD_TURN_RIGHT',
        'ANIMATION_FIREFORGET_PAUSE_BORED',
        'ANIMATION_FIREFORGET_PAUSE_SCRATCH_HEAD',
        'ANIMATION_FIREFORGET_READ',
        'ANIMATION_FIREFORGET_SALUTE',
        'ANIMATION_FIREFORGET_SPASM',
        'ANIMATION_FIREFORGET_STEAL',
        'ANIMATION_FIREFORGET_TAUNT',
        'ANIMATION_FIREFORGET_VICTORY1',
        'ANIMATION_FIREFORGET_VICTORY2',
        'ANIMATION_FIREFORGET_VICTORY3',
        'ANIMATION_LOOPING_CONJURE1',
        'ANIMATION_LOOPING_CONJURE2',
        'ANIMATION_LOOPING_DEAD_BACK',
        'ANIMATION_LOOPING_DEAD_FRONT',
        'ANIMATION_LOOPING_GET_LOW',
        'ANIMATION_LOOPING_GET_MID',
        'ANIMATION_LOOPING_LISTEN',
        'ANIMATION_LOOPING_LOOK_FAR',
        'ANIMATION_LOOPING_MEDITATE',
        'ANIMATION_LOOPING_PAUSE',
        'ANIMATION_LOOPING_PAUSE2',
        'ANIMATION_LOOPING_PAUSE_DRUNK',
        'ANIMATION_LOOPING_PAUSE_TIRED',
        'ANIMATION_LOOPING_SIT_CHAIR',
        'ANIMATION_LOOPING_SIT_CROSS',
        'ANIMATION_LOOPING_SPASM',
        'ANIMATION_LOOPING_TALK_FORCEFUL',
        'ANIMATION_LOOPING_TALK_LAUGHING',
        'ANIMATION_LOOPING_TALK_NORMAL',
        'ANIMATION_LOOPING_TALK_PLEADING',
        'ANIMATION_LOOPING_WORSHIP',
        // The trailing info row:
        nil );

    // The NWScript symbolic constants for creature appearances.
    // The third string indicates if this appearance supports wings and/or tails.
    APPEARANCE: array[0..518] of StringTriple = (
        ( 'Null human',                                     '_INVISIBLE_HUMAN_MALE',    'none' ),
        ( 'Allip',                                          '_ALLIP',                   'none' ),
        ( 'Aranea',                                         '_ARANEA',                  'none' ),
        ( 'Archery Target',                                 '_ARCH_TARGET',             'none' ),
        ( 'Asabi Chieftain',                                '_ASABI_CHIEFTAIN',         'none' ),
        ( 'Asabi Shaman',                                   '_ASABI_SHAMAN',            'none' ),
        ( 'Asabi Warrior',                                  '_ASABI_WARRIOR',           'none' ),
        ( 'Azer, Female',                                   '_AZER_FEMALE',             'none' ),
        ( 'Azer, Male',                                     '_AZER_MALE',               'none' ),
        ( 'Badger',                                         '_BADGER',                  'none' ),
        ( 'Badger, Dire',                                   '_BADGER_DIRE',             'none' ),
        ( 'Balor',                                          '_BALOR',                   'none' ),
        ( 'Bartender',                                      '_BARTENDER',               'none' ),
        ( 'Basilisk',                                       '_BASILISK',                'none' ),
        ( 'Bat',                                            '_BAT',                     'none' ),
        ( 'Battle Horror',                                  '_BAT_HORROR',              'none' ),
        ( 'Bear, Black',                                    '_BEAR_BLACK',              'none' ),
        ( 'Bear, Brown',                                    '_BEAR_BROWN',              'none' ),
        ( 'Bear, Dire',                                     '_BEAR_DIRE',               'none' ),
        ( 'Bear, Grizzly',                                  '_BEAR_KODIAK',             'none' ),
        ( 'Bear, Polar',                                    '_BEAR_POLAR',              'none' ),
        ( 'Beetle, Fire',                                   '_BEETLE_FIRE',             'none' ),
        ( 'Beetle, Slicer',                                 '_BEETLE_SLICER',           'none' ),
        ( 'Beetle, Stag',                                   '_BEETLE_STAG',             'none' ),
        ( 'Beetle, Stink',                                  '_BEETLE_STINK',            'none' ),
        ( 'Beggar',                                         '_BEGGER',                  'none' ),
        ( 'Beholder',                                       '_BEHOLDER',                'none' ),
        ( 'Beholder Tyrant',                                '_BEHOLDER_MOTHER',         'none' ),
        ( 'Beholder, Eyeball',                              '_BEHOLDER_EYEBALL',        'none' ),
        ( 'Beholder, G''Zhorb',                             '299',                      'none' ),
        ( 'Beholder, Mage',                                 '_BEHOLDER_MAGE',           'none' ),
        ( 'Bloodsailor',                                    '_BLOOD_SAILER',            'none' ),
        ( 'Boar',                                           '_BOAR',                    'none' ),
        ( 'Boar, Dire',                                     '_BOAR_DIRE',               'none' ),
        ( 'Bodak',                                          '_BODAK',                   'none' ),
        ( 'Bugbear A',                                      '_BUGBEAR_A',               'none' ),
        ( 'Bugbear B',                                      '_BUGBEAR_B',               'none' ),
        ( 'Bugbear, Chieftain A',                           '_BUGBEAR_CHIEFTAIN_A',     'none' ),
        ( 'Bugbear, Chieftain B',                           '_BUGBEAR_CHIEFTAIN_B',     'none' ),
        ( 'Bugbear, Shaman A',                              '_BUGBEAR_SHAMAN_A',        'none' ),
        ( 'Bugbear, Shaman B',                              '_BUGBEAR_SHAMAN_B',        'none' ),
        ( 'Bulette',                                        '_BULETTE',                 'none' ),
        ( 'Caladnei',                                       '450',                      'none' ),
        ( 'Candelabra',                                     '_OBJECT_CANDLE',           'none' ),
        ( 'Cat, Cougar',                                    '_CAT_COUGAR',              'none' ),
        ( 'Cat, Crag Cat',                                  '_CAT_CRAG_CAT',            'none' ),
        ( 'Cat, Dire Tiger',                                '_CAT_CAT_DIRE',            'none' ),
        ( 'Cat, Jaguar',                                    '_CAT_JAGUAR',              'none' ),
        ( 'Cat, Krenshar',                                  '_CAT_KRENSHAR',            'none' ),
        ( 'Cat, Leopard',                                   '_CAT_LEOPARD',             'none' ),
        ( 'Cat, Lion',                                      '_CAT_LION',                'none' ),
        ( 'Cat, Malar',                                     '_CAT_MPANTHER',            'none' ),
        ( 'Cat, Panther',                                   '_CAT_PANTHER',             'none' ),
        ( 'Celestial Avenger, Male',                        '_RAKSHASA_BEAR_MALE',      'none' ),
        ( 'Chair',                                          '_OBJECT_CHAIR',            'none' ),
        ( 'Chest',                                          '_OBJECT_CHEST',            'none' ),
        ( 'Chicken',                                        '_CHICKEN',                 'none' ),
        ( 'Child, Female',                                  '_KID_FEMALE',              'none' ),
        ( 'Child, Male',                                    '_KID_MALE',                'none' ),
        ( 'Cockatrice',                                     '_COCKATRICE',              'none' ),
        ( 'Combat Dummy',                                   '_COMBAT_DUMMY',            'none' ),
        ( 'Convict',                                        '_CONVICT',                 'none' ),
        ( 'Cow',                                            '_COW',                     'none' ),
        ( 'Cult Member',                                    '_CULT_MEMBER',             'none' ),
        ( 'Curst Swordsman',                                '16',                       'none' ),
        ( 'Deep Rothe',                                     '_DEEP_ROTHE',              'none' ),
        ( 'Deer',                                           '_DEER',                    'none' ),
        ( 'Deer, Stag',                                     '_DEER_STAG',               'none' ),
        ( 'Demilich',                                       '_DEMI_LICH',               'none' ),
        ( 'Demon, Bebilith',                                '_SPIDER_DEMON',            'none' ),
        ( 'Devil',                                          '_DEVIL',                   'none' ),
        ( 'Dog',                                            '_DOG',                     'none' ),
        ( 'Dog, Blink Dog',                                 '_DOG_BLINKDOG',            'none' ),
        ( 'Dog, Dire Wolf',                                 '_DOG_DIRE_WOLF',           'none' ),
        ( 'Dog, Fenhound',                                  '_DOG_FENHOUND',            'none' ),
        ( 'Dog, Hell Hound',                                '_DOG_HELL_HOUND',          'none' ),
        ( 'Dog, Shadow Mastiff',                            '_DOG_SHADOW_MASTIF',       'none' ),
        ( 'Dog, Winter Wolf',                               '_DOG_WINTER_WOLF',         'none' ),
        ( 'Dog, Wolf',                                      '_DOG_WOLF',                'none' ),
        ( 'Dog, Worg',                                      '_DOG_WORG',                'none' ),
        ( 'Doom Knight',                                    '_DOOM_KNIGHT',             'none' ),
        ( 'Dracolich',                                      '_DRACOLICH',               'none' ),
        ( 'Dragon, Black',                                  '_DRAGON_BLACK',            'none' ),
        ( 'Dragon, Blue',                                   '_DRAGON_BLUE',             'none' ),
        ( 'Dragon, Brass',                                  '_DRAGON_BRASS',            'none' ),
        ( 'Dragon, Bronze',                                 '_DRAGON_BRONZE',           'none' ),
        ( 'Dragon, Copper',                                 '_DRAGON_COPPER',           'none' ),
        ( 'Dragon, Gold',                                   '_DRAGON_GOLD',             'none' ),
        ( 'Dragon, Green',                                  '_DRAGON_GREEN',            'none' ),
        ( 'Dragon, Mist',                                   '118',                      'none' ),
        ( 'Dragon, Prismatic',                              '_DRAGON_PRIS',             'none' ),
        ( 'Dragon, Red',                                    '_DRAGON_RED',              'none' ),
        ( 'Dragon, Shadow',                                 '_DRAGON_SHADOW',           'none' ),
        ( 'Dragon, Silver',                                 '_DRAGON_SILVER',           'none' ),
        ( 'Dragon, White',                                  '_DRAGON_WHITE',            'none' ),
        ( 'Drider, female',                                 '_DRIDER_FEMALE',           'none' ),
        ( 'Drider, male',                                   '_DRIDER',                  'none' ),
        ( 'Drider, Chief',                                  '_DRIDER_CHIEF',            'none' ),
        ( 'Drow Boat',                                      '_OBJECT_BOAT',             'none' ),
        ( 'Drow Cleric',                                    '_DROW_CLERIC',             'none' ),
        ( 'Drow Fighter',                                   '_DROW_FIGHTER',            'none' ),
        ( 'Drow, Fighter 2',                                '_DROW_WARRIOR_1',          'none' ),
        ( 'Drow, Fighter 3',                                '_DROW_WARRIOR_2',          'none' ),
        ( 'Drow, Fighter 4',                                '_DROW_WARRIOR_3',          'none' ),
        ( 'Drow, Matron',                                   '_DROW_MATRON',             'none' ),
        ( 'Drow, Rebel',                                    '_DROW_SLAVE',              'none' ),
        ( 'Drow, Red Sister 1',                             '_DROW_FEMALE_1',           'none' ),
        ( 'Drow, Red Sister 2',                             '_DROW_FEMALE_2',           'none' ),
        ( 'Drow, Wizard',                                   '_DROW_WIZARD',             'none' ),
        ( 'Dryad',                                          '_DRYAD',                   'none' ),
        ( 'Duergar, Chief',                                 '_DUERGAR_CHIEF',           'none' ),
        ( 'Duergar Cleric',                                 '_DRUEGAR_CLERIC',          'none' ),
        ( 'Duergar Fighter',                                '_DRUEGAR_FIGHTER',         'none' ),
        ( 'Duergar, Slaver',                                '_DUERGAR_SLAVE',           'none' ),
        ( 'Dwarf',                                          '_DWARF',                   'both' ),
        ( 'Dwarf mounted, female',                          '482',                      'both' ),
        ( 'Dwarf mounted, male',                            '483',                      'both' ),
        ( 'Dwarf, female',                                  '_DWARF_NPC_FEMALE',        'none' ),
        ( 'Dwarf, male',                                    '_DWARF_NPC_MALE',          'none' ),
        ( 'Elemental, Air',                                 '_ELEMENTAL_AIR',           'none' ),
        ( 'Elemental, Air Elder',                           '_ELEMENTAL_AIR_ELDER',     'none' ),
        ( 'Elemental, Earth',                               '_ELEMENTAL_EARTH',         'none' ),
        ( 'Elemental, Earth Elder',                         '_ELEMENTAL_EARTH_ELDER',   'none' ),
        ( 'Elemental, Fire',                                '_ELEMENTAL_FIRE',          'none' ),
        ( 'Elemental, Fire Elder',                          '_ELEMENTAL_FIRE_ELDER',    'none' ),
        ( 'Elemental, Water',                               '_ELEMENTAL_WATER',         'none' ),
        ( 'Elemental, Water Elder',                         '_ELEMENTAL_WATER_ELDER',   'none' ),
        ( 'Elf',                                            '_ELF',                     'both' ),
        ( 'Elf mounted, female',                            '484',                      'both' ),
        ( 'Elf mounted, male',                              '485',                      'both' ),
        ( 'Elf, female',                                    '_ELF_NPC_FEMALE',          'none' ),
        ( 'Elf, male 1',                                    '_ELF_NPC_MALE_01',         'none' ),
        ( 'Elf, male 2',                                    '_ELF_NPC_MALE_02',         'none' ),
        ( 'Ettercap',                                       '_ETTERCAP',                'none' ),
        ( 'Ettin',                                          '_ETTIN',                   'none' ),
        ( 'Faerie Dragon',                                  '_FAERIE_DRAGON',           'none' ),
        ( 'Fairy',                                          '_FAIRY',                   'none' ),
        ( 'Falcon',                                         '_FALCON',                  'none' ),
        ( 'Female 1',                                       '_FEMALE_01',               'none' ),
        ( 'Female 2',                                       '_FEMALE_02',               'none' ),
        ( 'Female 3',                                       '_FEMALE_03',               'none' ),
        ( 'Female 4',                                       '_FEMALE_04',               'none' ),
        ( 'Flame, small',                                   '_OBJECT_FLAME_SMALL',      'none' ),
        ( 'Flame, medium',                                  '_OBJECT_FLAME_MEDIUM',     'none' ),
        ( 'Flame, large',                                   '_OBJECT_FLAME_LARGE',      'none' ),
        ( 'Formian Myrmarch',                               '_FORMIAN_MYRMARCH',        'none' ),
        ( 'Formian Queen',                                  '_FORMIAN_QUEEN',           'none' ),
        ( 'Formian Warrior',                                '_FORMIAN_WARRIOR',         'none' ),
        ( 'Formian Worker',                                 '_FORMIAN_WORKER',          'none' ),
        ( 'Gargoyle',                                       '_GARGOYLE',                'none' ),
        ( 'Gelatinous Cube',                                '_GELATINOUS_CUBE',         'none' ),
        ( 'Ghast',                                          '_GHAST',                   'none' ),
        ( 'Ghoul',                                          '_GHOUL',                   'none' ),
        ( 'Ghoul Lord',                                     '_GHOUL_LORD',              'none' ),
        ( 'Giant, Fire',                                    '_GIANT_FIRE',              'none' ),
        ( 'Giant, Fire (Female)',                           '_GIANT_FIRE_FEMALE',       'none' ),
        ( 'Giant, Frost',                                   '_GIANT_FROST',             'none' ),
        ( 'Giant, Frost (Female)',                          '_GIANT_FROST_FEMALE',      'none' ),
        ( 'Giant, Hill',                                    '_GIANT_HILL',              'none' ),
        ( 'Giant, Mountain',                                '_GIANT_MOUNTAIN',          'none' ),
        ( 'Gnoll',                                          '_GNOLL_WARRIOR',           'none' ),
        ( 'Gnoll, Shaman',                                  '_GNOLL_WIZ',               'none' ),
        ( 'Gnome',                                          '_GNOME',                   'both' ),
        ( 'Gnome mounted, female',                          '486',                      'both' ),
        ( 'Gnome mounted, male',                            '487',                      'both' ),
        ( 'Gnome, female',                                  '_GNOME_NPC_FEMALE',        'none' ),
        ( 'Gnome, male',                                    '_GNOME_NPC_MALE',          'none' ),
        ( 'Goblin A',                                       '_GOBLIN_A',                'none' ),
        ( 'Goblin B',                                       '_GOBLIN_B',                'none' ),
        ( 'Goblin, Chieftain A',                            '_GOBLIN_CHIEF_A',          'none' ),
        ( 'Goblin, Chieftain B',                            '_GOBLIN_CHIEF_B',          'none' ),
        ( 'Goblin, Shaman A',                               '_GOBLIN_SHAMAN_A',         'none' ),
        ( 'Goblin, Shaman B',                               '_GOBLIN_SHAMAN_B',         'none' ),
        ( 'Golem, Adamantium',                              '_GOLEM_ADAMANTIUM',        'none' ),
        ( 'Golem, Bone',                                    '_GOLEM_BONE',              'none' ),
        ( 'Golem, Clay',                                    '_GOLEM_CLAY',              'none' ),
        ( 'Golem, Demonflesh',                              '_GOLEM_DEMONFLESH',        'none' ),
        ( 'Golem, Diamond',                                 '149',                      'none' ),
        ( 'Golem, Dwarf',                                   '_DWARF_GOLEM',             'both' ),
        ( 'Golem, Emerald',                                 '169',                      'none' ),
        ( 'Golem, Flesh',                                   '_GOLEM_FLESH',             'none' ),
        ( 'Golem, Half-Orc',                                '_DWARF_HALFORC',           'both' ),
        ( 'Golem, Iron',                                    '_GOLEM_IRON',              'none' ),
        ( 'Golem, Mithril',                                 '_GOLEM_MITHRAL',           'none' ),
        ( 'Golem, Ruby',                                    '173',                      'none' ),
        ( 'Golem, Stone',                                   '_GOLEM_STONE',             'none' ),
        ( 'Gorgon',                                         '_GORGON',                  'none' ),
        ( 'Gray Ooze',                                      '_GRAY_OOZE',               'none' ),
        ( 'Grey Render',                                    '_GREY_RENDER',             'none' ),
        ( 'Gynosphinx',                                     '_GYNOSPHINX',              'none' ),
        ( 'Hagatha',                                        '459',                      'none' ),
        ( 'Halaster',                                       '460',                      'none' ),
        ( 'Half-elf',                                       '_HALF_ELF',                'both' ),
        ( 'Half-Elf mounted, female',                       '490',                      'both' ),
        ( 'Half-Elf mounted, male',                         '491',                      'both' ),
        ( 'Half-orc',                                       '_HALF_ORC',                'both' ),
        ( 'Half-orc mounted, female',                       '492',                      'both' ),
        ( 'Half-orc mounted, male',                         '493',                      'both' ),
        ( 'Half-orc, female',                               '_HALF_ORC_NPC_FEMALE',     'none' ),
        ( 'Half-orc, male 1',                               '_HALF_ORC_NPC_MALE_01',    'none' ),
        ( 'Half-orc, male 2',                               '_HALF_ORC_NPC_MALE_02',    'none' ),
        ( 'Halfling',                                       '_HALFLING',                'both' ),
        ( 'Halfling mounted, female',                       '488',                      'both' ),
        ( 'Halfling mounted, male',                         '489',                      'both' ),
        ( 'Halfling, female',                               '_HALFLING_NPC_FEMALE',     'none' ),
        ( 'Halfling, male',                                 '_HALFLING_NPC_MALE',       'none' ),
        ( 'Harat',                                          '461',                      'none' ),
        ( 'Harat, Small',                                   '462',                      'none' ),
        ( 'Harpy',                                          '_HARPY',                   'none' ),
        ( 'Helmed Horror',                                  '_HELMED_HORROR',           'none' ),
        ( 'Heurodis',                                       '_HEURODIS_LICH',           'none' ),
        ( 'Hobgoblin',                                      '_HOBGOBLIN_WARRIOR',       'none' ),
        ( 'Hobgoblin, Wizard',                              '_HOBGOBLIN_WIZARD',        'none' ),
        ( 'Hook Horror',                                    '_HOOK_HORROR',             'none' ),
        ( 'Horse, Black',                                   '535',                      'none' ),
        ( 'Horse, Black, chain barding',                    '540',                      'none' ),
        ( 'Horse, Black, chain barding, packs',             '545',                      'none' ),
        ( 'Horse, Black, leather barding',                  '538',                      'none' ),
        ( 'Horse, Black, leather barding, packs',           '543',                      'none' ),
        ( 'Horse, Black, purple barding',                   '541',                      'none' ),
        ( 'Horse, Black, purple barding, packs',            '546',                      'none' ),
        ( 'Horse, Black, red barding',                      '542',                      'none' ),
        ( 'Horse, Black, red barding, packs',               '547',                      'none' ),
        ( 'Horse, Black, saddle',                           '536',                      'none' ),
        ( 'Horse, Black, saddle, packs',                    '537',                      'none' ),
        ( 'Horse, Black, scale mail barding',               '539',                      'none' ),
        ( 'Horse, Black, scale mail barding, packs',        '544',                      'none' ),
        ( 'Horse, Gunpowder',                               '509',                      'none' ),
        ( 'Horse, Gunpowder, chain barding',                '514',                      'none' ),
        ( 'Horse, Gunpowder, chain barding, packs',         '519',                      'none' ),
        ( 'Horse, Gunpowder, leather barding',              '512',                      'none' ),
        ( 'Horse, Gunpowder, leather barding, packs',       '517',                      'none' ),
        ( 'Horse, Gunpowder, purple barding',               '515',                      'none' ),
        ( 'Horse, Gunpowder, purple barding, packs',        '520',                      'none' ),
        ( 'Horse, Gunpowder, red barding',                  '516',                      'none' ),
        ( 'Horse, Gunpowder, red barding, packs',           '521',                      'none' ),
        ( 'Horse, Gunpowder, saddle',                       '510',                      'none' ),
        ( 'Horse, Gunpowder, saddle, packs',                '511',                      'none' ),
        ( 'Horse, Gunpowder, scale mail barding',           '513',                      'none' ),
        ( 'Horse, Gunpowder, scale mail barding, packs',    '518',                      'none' ),
        ( 'Horse, Jousting, Black and white cloth',         '553',                      'none' ),
        ( 'Horse, Jousting, Black cloth',                   '559',                      'none' ),
        ( 'Horse, Jousting, Blue and gold cloth',           '552',                      'none' ),
        ( 'Horse, Jousting, Blue and pink cloth',           '557',                      'none' ),
        ( 'Horse, Jousting, Cyan and white cloth',          '560',                      'none' ),
        ( 'Horse, Jousting, Green cloth',                   '556',                      'none' ),
        ( 'Horse, Jousting, Purple cloth',                  '551',                      'none' ),
        ( 'Horse, Jousting, Red and black striped cloth',   '555',                      'none' ),
        ( 'Horse, Jousting, Red and gold brick cloth',      '558',                      'none' ),
        ( 'Horse, Jousting, Red and yellow cloth',          '554',                      'none' ),
        ( 'Horse, Jousting, White cloth',                   '561',                      'none' ),
        ( 'Horse, Spotted',                                 '522',                      'none' ),
        ( 'Horse, Spotted, chain barding',                  '527',                      'none' ),
        ( 'Horse, Spotted, chain barding, packs',           '532',                      'none' ),
        ( 'Horse, Spotted, leather barding',                '525',                      'none' ),
        ( 'Horse, Spotted, leather barding, packs',         '530',                      'none' ),
        ( 'Horse, Spotted, purple barding',                 '528',                      'none' ),
        ( 'Horse, Spotted, purple barding, packs',          '533',                      'none' ),
        ( 'Horse, Spotted, red barding',                    '529',                      'none' ),
        ( 'Horse, Spotted, red barding, packs',             '534',                      'none' ),
        ( 'Horse, Spotted, saddle',                         '523',                      'none' ),
        ( 'Horse, Spotted, saddle, packs',                  '524',                      'none' ),
        ( 'Horse, Spotted, scale mail barding',             '526',                      'none' ),
        ( 'Horse, Spotted, scale mail barding, packs',      '531',                      'none' ),
        ( 'Horse, Walnut',                                  '496',                      'none' ),
        ( 'Horse, Walnut, chain barding',                   '501',                      'none' ),
        ( 'Horse, Walnut, chain barding, packs',            '506',                      'none' ),
        ( 'Horse, Walnut, leather barding',                 '499',                      'none' ),
        ( 'Horse, Walnut, leather barding, packs',          '504',                      'none' ),
        ( 'Horse, Walnut, purple barding',                  '502',                      'none' ),
        ( 'Horse, Walnut, purple barding, packs',           '507',                      'none' ),
        ( 'Horse, Walnut, red barding',                     '503',                      'none' ),
        ( 'Horse, Walnut, red barding, packs',              '508',                      'none' ),
        ( 'Horse, Walnut, saddle',                          '497',                      'none' ),
        ( 'Horse, Walnut, saddle, packs',                   '498',                      'none' ),
        ( 'Horse, Walnut, scale mail barding',              '500',                      'none' ),
        ( 'Horse, Walnut, scale mail barding, packs',       '505',                      'none' ),
        ( 'Hound Archon, Male',                             '_RAKSHASA_WOLF_MALE',      'none' ),
        ( 'House Guard',                                    '_HOUSE_GUARD',             'none' ),
        ( 'Human',                                          '_HUMAN',                   'both' ),
        ( 'Human mounted, female',                          '494',                      'both' ),
        ( 'Human mounted, male',                            '495',                      'both' ),
        ( 'Human, Female 01',                               '_HUMAN_NPC_FEMALE_01',     'none' ),
        ( 'Human, Female 02',                               '_HUMAN_NPC_FEMALE_02',     'none' ),
        ( 'Human, Female 03',                               '_HUMAN_NPC_FEMALE_03',     'none' ),
        ( 'Human, Female 04',                               '_HUMAN_NPC_FEMALE_04',     'none' ),
        ( 'Human, Female 05',                               '_HUMAN_NPC_FEMALE_05',     'none' ),
        ( 'Human, Female 06',                               '_HUMAN_NPC_FEMALE_06',     'none' ),
        ( 'Human, Female 07',                               '_HUMAN_NPC_FEMALE_07',     'none' ),
        ( 'Human, Female 08',                               '_HUMAN_NPC_FEMALE_08',     'none' ),
        ( 'Human, Female 09',                               '_HUMAN_NPC_FEMALE_09',     'none' ),
        ( 'Human, Female 10',                               '_HUMAN_NPC_FEMALE_10',     'none' ),
        ( 'Human, Female 11',                               '_HUMAN_NPC_FEMALE_11',     'none' ),
        ( 'Human, Female 12',                               '_HUMAN_NPC_FEMALE_12',     'none' ),
        ( 'Human, Male 01 ',                                '_HUMAN_NPC_MALE_01',       'none' ),
        ( 'Human, Male 02',                                 '_HUMAN_NPC_MALE_02',       'none' ),
        ( 'Human, Male 03',                                 '_HUMAN_NPC_MALE_03',       'none' ),
        ( 'Human, Male 04',                                 '_HUMAN_NPC_MALE_04',       'none' ),
        ( 'Human, Male 05',                                 '_HUMAN_NPC_MALE_05',       'none' ),
        ( 'Human, Male 06',                                 '_HUMAN_NPC_MALE_06',       'none' ),
        ( 'Human, Male 07',                                 '_HUMAN_NPC_MALE_07',       'none' ),
        ( 'Human, Male 08',                                 '_HUMAN_NPC_MALE_08',       'none' ),
        ( 'Human, Male 09',                                 '_HUMAN_NPC_MALE_09',       'none' ),
        ( 'Human, Male 10',                                 '_HUMAN_NPC_MALE_10',       'none' ),
        ( 'Human, Male 11',                                 '_HUMAN_NPC_MALE_11',       'none' ),
        ( 'Human, Male 12',                                 '_HUMAN_NPC_MALE_12',       'none' ),
        ( 'Human, Male 13',                                 '_HUMAN_NPC_MALE_13',       'none' ),
        ( 'Human, Male 14',                                 '_HUMAN_NPC_MALE_14',       'none' ),
        ( 'Human, Male 15',                                 '_HUMAN_NPC_MALE_15',       'none' ),
        ( 'Human, Male 16',                                 '_HUMAN_NPC_MALE_16',       'none' ),
        ( 'Human, Male 17',                                 '_HUMAN_NPC_MALE_17',       'none' ),
        ( 'Human, Male 18',                                 '_HUMAN_NPC_MALE_18',       'none' ),
        ( 'Imp',                                            '_IMP',                     'none' ),
        ( 'Innkeeper',                                      '_INN_KEEPER',              'none' ),
        ( 'Intellect Devourer',                             '_INTELLECT_DEVOURER',      'none' ),
        ( 'Intellect Devourer, Skeletal',                   '_SKELETAL_DEVOURER',       'none' ),
        ( 'Intellect Devourer, War',                        '_WAR_DEVOURER',            'none' ),
        ( 'Invisible Stalker',                              '_INVISIBLE_STALKER',       'none' ),
        ( 'Kobold A',                                       '_KOBOLD_A',                'wing' ),
        ( 'Kobold B',                                       '_KOBOLD_B',                'wing' ),
        ( 'Kobold, Footpad',                                '_KOBOLD_CHIEF_B',          'wing' ),
        ( 'Kobold, Healer',                                 '_KOBOLD_SHAMAN_B',         'wing' ),
        ( 'Kobold, Shaman',                                 '_KOBOLD_SHAMAN_A',         'wing' ),
        ( 'Kobold, Thug',                                   '_KOBOLD_CHIEF_A',          'wing' ),
        ( 'Lantern Archon',                                 '_LANTERN_ARCHON',          'none' ),
        ( 'Lich',                                           '_LICH',                    'none' ),
        ( 'Lizardfolk A',                                   '_LIZARDFOLK_A',            'tail' ),
        ( 'Lizardfolk B',                                   '_LIZARDFOLK_B',            'tail' ),
        ( 'Lizardfolk, Shaman A',                           '_LIZARDFOLK_SHAMAN_A',     'tail' ),
        ( 'Lizardfolk, Shaman B',                           '_LIZARDFOLK_SHAMAN_B',     'tail' ),
        ( 'Lizardfolk, Warrior A',                          '_LIZARDFOLK_WARRIOR_A',    'tail' ),
        ( 'Lizardfolk, Warrior B',                          '_LIZARDFOLK_WARRIOR_B',    'tail' ),
        ( 'Lord Antoine',                                   '417',                      'none' ),
        ( 'Luskan Guard',                                   '_LUSKAN_GUARD',            'none' ),
        ( 'Maggris',                                        '463',                      'none' ),
        ( 'Magic sparks, blue',                             '_OBJECT_BLUE',             'none' ),
        ( 'Magic sparks, cyan',                             '_OBJECT_CYAN',             'none' ),
        ( 'Magic sparks, green',                            '_OBJECT_GREEN',            'none' ),
        ( 'Magic sparks, orange',                           '_OBJECT_ORANGE',           'none' ),
        ( 'Magic sparks, purple',                           '_OBJECT_PURPLE',           'none' ),
        ( 'Magic sparks, red',                              '_OBJECT_RED',              'none' ),
        ( 'Magic sparks, white',                            '_OBJECT_WHITE',            'none' ),
        ( 'Magic sparks, yellow',                           '_OBJECT_YELLOW',           'none' ),
        ( 'Male 1',                                         '_MALE_01',                 'none' ),
        ( 'Male 2',                                         '_MALE_02',                 'none' ),
        ( 'Male 3',                                         '_MALE_03',                 'none' ),
        ( 'Male 4',                                         '_MALE_04',                 'none' ),
        ( 'Male 5',                                         '_MALE_05',                 'none' ),
        ( 'Manticore',                                      '_MANTICORE',               'none' ),
        ( 'Masterius',                                      '464',                      'none' ),
        ( 'Masterius, Full Power',                          '465',                      'none' ),
        ( 'Medusa',                                         '_MEDUSA',                  'none' ),
        ( 'Mephistopheles',                                 '_MEPHISTO_NORM',           'none' ),
        ( 'Mephistopheles, Large',                          '_MEPHISTO_BIG',            'none' ),
        ( 'Mephit, Air',                                    '_MEPHIT_AIR',              'none' ),
        ( 'Mephit, Dust',                                   '_MEPHIT_DUST',             'none' ),
        ( 'Mephit, Earth',                                  '_MEPHIT_EARTH',            'none' ),
        ( 'Mephit, Fire',                                   '_MEPHIT_FIRE',             'none' ),
        ( 'Mephit, Ice',                                    '_MEPHIT_ICE',              'none' ),
        ( 'Mephit, Magma',                                  '_MEPHIT_MAGMA',            'none' ),
        ( 'Mephit, Ooze',                                   '_MEPHIT_OOZE',             'none' ),
        ( 'Mephit, Salt',                                   '_MEPHIT_SALT',             'none' ),
        ( 'Mephit, Steam',                                  '_MEPHIT_STEAM',            'none' ),
        ( 'Mephit, Water',                                  '_MEPHIT_WATER',            'none' ),
        ( 'Mimic',                                          '_ANIMATED_CHEST',          'none' ),
        ( 'Mindflayer',                                     '_MINDFLAYER',              'none' ),
        ( 'Mindflayer, Alhoon',                             '_MINDFLAYER_ALHOON',       'none' ),
        ( 'Mindflayer, Master',                             '_MINDFLAYER_2',            'none' ),
        ( 'Minogon',                                        '_MINOGON',                 'none' ),
        ( 'Minotaur',                                       '_MINOTAUR',                'none' ),
        ( 'Minotaur, Chieftain',                            '_MINOTAUR_CHIEFTAIN',      'none' ),
        ( 'Minotaur, Shaman',                               '_MINOTAUR_SHAMAN',         'none' ),
        ( 'Mohrg',                                          '_MOHRG',                   'none' ),
        ( 'Mummy, Common',                                  '_MUMMY_COMMON',            'none' ),
        ( 'Mummy, Greater',                                 '_MUMMY_GREATER',           'none' ),
        ( 'Mummy, Warrior 1',                               '_MUMMY_WARRIOR',           'none' ),
        ( 'Mummy, Warrior 2',                               '_MUMMY_FIGHTER_2',         'none' ),
        ( 'Neverwinter Militia Member',                     '_NW_MILITIA_MEMBER',       'none' ),
        ( 'Nightmare',                                      '550',                      'none' ),
        ( 'Nightmare, barding',                             '548',                      'none' ),
        ( 'Nightmare, saddle',                              '549',                      'none' ),
        ( 'NWN Nasher',                                     '_NWN_NASHER',              'none' ),
        ( 'NWN Sedos',                                      '_NWN_SEDOS',               'none' ),
        ( 'NWN, Aarin',                                     '_NWN_AARIN',               'none' ),
        ( 'NWN, Aribeth 1',                                 '_ARIBETH',                 'none' ),
        ( 'NWN, Aribeth 2',                                 '_NWN_ARIBETH_EVIL',        'none' ),
        ( 'NWN, Haedraline',                                '_NWN_HAEDRALINE',          'none' ),
        ( 'NWN, Maugrim',                                   '_NWN_MAUGRIM',             'none' ),
        ( 'NWN, Morag',                                     '_NWN_MORAG',               'none' ),
        ( 'Nymph',                                          '_NYMPH',                   'none' ),
        ( 'Ochre Jelly, Large',                             '_OCHRE_JELLY_LARGE',       'none' ),
        ( 'Ochre Jelly, Medium',                            '_OCHRE_JELLY_MEDIUM',      'none' ),
        ( 'Ochre Jelly, Small',                             '_OCHRE_JELLY_SMALL',       'none' ),
        ( 'Ogre A',                                         '_OGRE',                    'none' ),
        ( 'Ogre B',                                         '_OGREB',                   'none' ),
        ( 'Ogre, Chieftain A',                              '_OGRE_CHIEFTAIN',          'none' ),
        ( 'Ogre, Chieftain B',                              '_OGRE_CHIEFTAINB',         'none' ),
        ( 'Ogre, Elite',                                    '75',                       'none' ),
        ( 'Ogre, Mage A',                                   '_OGRE_MAGE',               'none' ),
        ( 'Ogre, Mage B',                                   '_OGRE_MAGEB',              'none' ),
        ( 'Old Man',                                        '_OLD_MAN',                 'none' ),
        ( 'Old Woman',                                      '_OLD_WOMAN',               'none' ),
        ( 'Orc A',                                          '_ORC_A',                   'none' ),
        ( 'Orc B',                                          '_ORC_B',                   'none' ),
        ( 'Orc, Chieftain A',                               '_ORC_CHIEFTAIN_A',         'none' ),
        ( 'Orc, Chieftain B',                               '_ORC_CHIEFTAIN_B',         'none' ),
        ( 'Orc, Shaman A',                                  '_ORC_SHAMAN_A',            'none' ),
        ( 'Orc, Shaman B',                                  '_ORC_SHAMAN_B',            'none' ),
        ( 'Ox',                                             '_OX',                      'none' ),
        ( 'Parrot',                                         '_PARROT',                  'none' ),
        ( 'Penguin',                                        '_PENGUIN',                 'none' ),
        ( 'Plague Victim',                                  '_PLAGUE_VICTIM',           'none' ),
        ( 'Prostitute 1',                                   '_PROSTITUTE_01',           'none' ),
        ( 'Prostitute 2',                                   '_PROSTITUTE_02',           'none' ),
        ( 'Pseudodragon',                                   '_PSEUDODRAGON',            'none' ),
        ( 'Purple Dragon Knight Archer, Female',            '395',                      'none' ),
        ( 'Purple Dragon Knight Archer, Male',              '397',                      'none' ),
        ( 'Purple Dragon Knight Blade, Female',             '399',                      'none' ),
        ( 'Purple Dragon Knight Blade, Male',               '400',                      'none' ),
        ( 'Quasit',                                         '_QUASIT',                  'none' ),
        ( 'Rakshasa, Female',                               '_RAKSHASA_TIGER_FEMALE',   'none' ),
        ( 'Rakshasa, Male',                                 '_RAKSHASA_TIGER_MALE',     'none' ),
        ( 'Rat',                                            '_RAT',                     'none' ),
        ( 'Rat, Dire',                                      '_RAT_DIRE',                'none' ),
        ( 'Raven',                                          '_RAVEN',                   'none' ),
        ( 'Sahuagin',                                       '_SAHUAGIN',                'none' ),
        ( 'Sahuagin Cleric',                                '_SAHUAGIN_CLERIC',         'none' ),
        ( 'Sahuagin Leader',                                '_SAHUAGIN_LEADER',         'none' ),
        ( 'Satyr',                                          '143',                      'none' ),
        ( 'Satyr, Archer',                                  '32',                       'none' ),
        ( 'Satyr, Warrior',                                 '33',                       'none' ),
        ( 'Sea Hag',                                        '_SEA_HAG',                 'none' ),
        ( 'Seagull, flying',                                '_SEAGULL_FLYING',          'none' ),
        ( 'Seagull, walking',                               '_SEAGULL_WALKING',         'none' ),
        ( 'Shadow',                                         '_SHADOW',                  'none' ),
        ( 'Shadow Fiend',                                   '_SHADOW_FIEND',            'none' ),
        ( 'Shark, Goblin',                                  '_SHARK_GOBLIN',            'none' ),
        ( 'Shark, Hammerhead',                              '_SHARK_HAMMERHEAD',        'none' ),
        ( 'Shark, Mako',                                    '_SHARK_MAKO',              'none' ),
        ( 'Shield Guardian',                                '_SHIELD_GUARDIAN',         'none' ),
        ( 'Shopkeeper',                                     '_SHOP_KEEPER',             'none' ),
        ( 'Skeleton, Chieftain',                            '_SKELETON_CHIEFTAIN',      'none' ),
        ( 'Skeleton, Common',                               '_SKELETON_COMMON',         'none' ),
        ( 'Skeleton, Mage',                                 '_SKELETON_MAGE',           'none' ),
        ( 'Skeleton, Priest',                               '_SKELETON_PRIEST',         'none' ),
        ( 'Skeleton, Warrior',                              '_SKELETON_WARRIOR',        'none' ),
        ( 'Skeleton, Warrior 1',                            '_SKELETON_WARRIOR_1',      'none' ),
        ( 'Skeleton, Warrior 2',                            '_SKELETON_WARRIOR_2',      'none' ),
        ( 'Slaad, Black',                                   '_SLAAD_BLACK',             'none' ),
        ( 'Slaad, Blue',                                    '_SLAAD_BLUE',              'none' ),
        ( 'Slaad, Death',                                   '_SLAAD_DEATH',             'none' ),
        ( 'Slaad, Gray',                                    '_SLAAD_GRAY',              'none' ),
        ( 'Slaad, Green',                                   '_SLAAD_GREEN',             'none' ),
        ( 'Slaad, Red',                                     '_SLAAD_RED',               'none' ),
        ( 'Slaad, White',                                   '_SLAAD_WHITE',             'none' ),
        ( 'Snake, Black Cobra',                             '178',                      'none' ),
        ( 'Snake, Cobra',                                   '183',                      'none' ),
        ( 'Snake, Gold Cobra',                              '194',                      'none' ),
        ( 'Spectre',                                        '_SPECTRE',                 'none' ),
        ( 'Sphinx',                                         '_SPHINX',                  'none' ),
        ( 'Spider, Dire',                                   '_SPIDER_DIRE',             'none' ),
        ( 'Spider, Giant',                                  '_SPIDER_GIANT',            'none' ),
        ( 'Spider, Phase',                                  '_SPIDER_PHASE',            'none' ),
        ( 'Spider, Sword',                                  '_SPIDER_SWORD',            'none' ),
        ( 'Spider, Wraith',                                 '_SPIDER_WRAITH',           'none' ),
        ( 'Stinger',                                        '_STINGER',                 'none' ),
        ( 'Stinger Chieftain',                              '_STINGER_CHIEFTAIN',       'none' ),
        ( 'Stinger Mage',                                   '_STINGER_MAGE',            'none' ),
        ( 'Stinger Warrior',                                '_STINGER_WARRIOR',         'none' ),
        ( 'Succubus',                                       '_SUCCUBUS',                'wing' ),
        ( 'Svirfneblin, Female',                            '_SVIRF_FEMALE',            'none' ),
        ( 'Svirfneblin, Male',                              '_SVIRF_MALE',              'none' ),
        ( 'Table',                                          '_OBJECT_TABLE',            'none' ),
        ( 'Troglodyte',                                     '_TROGLODYTE',              'none' ),
        ( 'Troglodyte (green)',                             '870',                      'none' ),
        ( 'Troglodyte (red)',                               '869',                      'none' ),
        ( 'Troglodyte Cleric',                              '_TROGLODYTE_CLERIC',       'none' ),
        ( 'Troglodyte Warrior',                             '_TROGLODYTE_WARRIOR',      'none' ),
        ( 'Troll',                                          '_TROLL',                   'none' ),
        ( 'Troll, Chieftain',                               '_TROLL_CHIEFTAIN',         'none' ),
        ( 'Troll, Shaman',                                  '_TROLL_SHAMAN',            'none' ),
        ( 'Umber Hulk',                                     '_UMBERHULK',               'none' ),
        ( 'Uthgard Elk Tribe',                              '_UTHGARD_ELK_TRIBE',       'none' ),
        ( 'Uthgard Tiger Tribe',                            '_UTHGARD_TIGER_TRIBE',     'none' ),
        ( 'Vampire, Female',                                '_VAMPIRE_FEMALE',          'none' ),
        ( 'Vampire, Male',                                  '_VAMPIRE_MALE',            'none' ),
        ( 'Vrock',                                          '_VROCK',                   'none' ),
        ( 'Waitress',                                       '_WAITRESS',                'none' ),
        ( 'Wereboar',                                       '467',                      'none' ),
        ( 'Werecat',                                        '_WERECAT',                 'none' ),
        ( 'Wererat',                                        '_WERERAT',                 'none' ),
        ( 'Werewolf',                                       '_WEREWOLF',                'none' ),
        ( 'Wight',                                          '_WIGHT',                   'none' ),
        ( 'Will-O-Wisp',                                    '_WILL_O_WISP',             'none' ),
        ( 'Witch King, Disguised',                          '466',                      'none' ),
        ( 'Wraith',                                         '_WRAITH',                  'none' ),
        ( 'Wyrmling, Black',                                '_WYRMLING_BLACK',          'none' ),
        ( 'Wyrmling, Blue',                                 '_WYRMLING_BLUE',           'none' ),
        ( 'Wyrmling, Brass',                                '_WYRMLING_BRASS',          'none' ),
        ( 'Wyrmling, Bronze',                               '_WYRMLING_BRONZE',         'none' ),
        ( 'Wyrmling, Copper',                               '_WYRMLING_COPPER',         'none' ),
        ( 'Wyrmling, Gold',                                 '_WYRMLING_GOLD',           'none' ),
        ( 'Wyrmling, Green',                                '_WYRMLING_GREEN',          'none' ),
        ( 'Wyrmling, Red',                                  '_WYRMLING_RED',            'none' ),
        ( 'Wyrmling, Silver',                               '_WYRMLING_SILVER',         'none' ),
        ( 'Wyrmling, White',                                '_WYRMLING_WHITE',          'none' ),
        ( 'Wyvern, Adult',                                  '455',                      'none' ),
        ( 'Wyvern, Great',                                  '456',                      'none' ),
        ( 'Wyvern, Juvenile',                               '457',                      'none' ),
        ( 'Wyvern, Young',                                  '458',                      'none' ),
        ( 'Yuan-Ti, Invoker',                               '_YUAN_TI_CHIEFTEN',        'none' ),
        ( 'Yuan-Ti, Necromancer',                           '_YUAN_TI_WIZARD',          'none' ),
        ( 'Yuan-Ti, Priest',                                '_YUAN_TI',                 'none' ),
        ( 'Zombie, Common',                                 '_ZOMBIE',                  'none' ),
        ( 'Zombie, Rotting',                                '_ZOMBIE_ROTTING',          'none' ),
        ( 'Zombie, Tyrant Fog',                             '_ZOMBIE_TYRANT_FOG',       'none' ),
        ( 'Zombie, Warrior 1',                              '_ZOMBIE_WARRIOR_1',        'none' ),
        ( 'Zombie, Warrior 2',                              '_ZOMBIE_WARRIOR_2',        'none' ),
        // The trailing info row:
        ( nil, 'APPEARANCE_TYPE', nil )
      );

    // The NWScript symbolic constants for associate types.
    ASSOCIATE_TYPE: array[0..6] of pchar =
      ( '_NONE',
        '_ANIMALCOMPANION',
        '_DOMINATED',
        '_FAMILIAR',
        '_SUMMONED',
        '_HENCHMAN',
        // The trailing info row:
        'ASSOCIATE_TYPE'
      );

    // The NWScript symbolic constants for classes.
    // *Important* Converting TClassEnum to an integer must result in a valid index.
    NWNCLASS: array[0..40] of StringPair =
      ( // Start of TClassEnum
        // Base classes:
        ( 'Barbarian',            nil ),
        ( 'Bard',                 nil ),
        ( 'Cleric',               nil ),
        ( 'Druid',                nil ),
        ( 'Fighter',              nil ),
        ( 'Monk',                 nil ),
        ( 'Paladin',              nil ),
        ( 'Ranger',               nil ),
        ( 'Rogue',                nil ),
        ( 'Sorcerer',             nil ),
        ( 'Wizard',               nil ),
        // Prestige classes:
        ( 'Arcane archer',        nil ),
        ( 'Assassin',             nil ),
        ( 'Blackguard',           nil ),
        ( 'Champion of Torm',     '_DIVINE_CHAMPION' ),
        ( 'Dwarven defender',     nil ),
        ( 'Harper scout',         '_HARPER' ),
        ( 'Pale master',          nil ),
        ( 'Purple dragon knight', nil ),
        ( 'Red dragon disciple',  '_DRAGON_DISCIPLE' ),
        ( 'Shadowdancer',         nil ),
        ( 'Shifter',              nil ),
        ( 'Weapon master',        nil ),
        // End of TClassEnum
        // Monster classes:
        ( 'Aberration',           nil ),
        ( 'Animal',               nil ),
        ( 'Beast',                nil ),
        ( 'Commoner',             nil ),
        ( 'Construct',            nil ),
        ( 'Dragon',               nil ),
        ( 'Elemental',            nil ),
        ( 'Fey',                  nil ),
        ( 'Giant',                nil ),
        ( 'Humanoid',             nil ),
        ( 'Magical beast',        nil ),
        ( 'Monstrous',            nil ),
        ( 'Ooze',                 nil ),
        ( 'Outsider',             nil ),
        ( 'Shapechanger',         nil ),
        ( 'Undead',               nil ),
        ( 'Vermin',               nil ),
        // The trailing info row:
        ( nil, 'CLASS_TYPE' )
      );

    // The names for diseases; symbolic constants are 'DISEASE_' + Uppercase(name),
    // with spaces converted to underscores.
    DISEASE_NAME: array[0..17] of pchar =
      ( 'Blinding sickness',
        'Cackle fever',
        'Demon fever',
        'Devil chills',
        'Filth fever',
        'Mindfire',
        'Mummy rot',
        'Red ache',
        'Shakes',
        'Slimy doom',
        'Red slaad eggs',
        'Ghoul rot',
        'Zombie creep',
        'Dread blisters',
        'Burrow maggots',
        'Soldier shakes',
        'Vermin madness',
        // The trailing info row:
        'DISEASE' );

    // The NWScript symbolic constants for effect types.
    EFFECT_TYPE: array[0..68] of StringPair =
      ( ( 'Ability decrease',          nil ),
        ( 'Ability increase',          nil ),
        ( 'AC decrease',               nil ),
        ( 'AC increase',               nil ),
        ( 'Arcane spell failure',      nil ),
        ( 'Attack decrease',           nil ),
        ( 'Attack increase',           nil ),
        ( 'Beam',                      nil ),
        ( 'Blindness',                 nil ),
        ( 'Charmed',                   nil ),
        ( 'Concealment',               nil ),
        ( 'Confused',                  nil ),
        ( 'Curse',                     nil ),
        ( 'Cutscene ghost',            '_CUTSCENEGHOST' ),
        ( 'Cutscene immobilize',       '_CUTSCENEIMMOBILIZE' ),
        ( 'Cutscene paralyze',         '_CUTSCENE_PARALYZE' ),
        ( 'Damage decrease',           nil ),
        ( 'Damage increase',           nil ),
        ( 'Damage immunity decrease',  nil ),
        ( 'Damage immunity increase',  nil ),
        ( 'Damage reduction',          nil ),
        ( 'Damage resistance',         nil ),
        ( 'Dazed',                     nil ),
        ( 'Deaf',                      nil ),
        ( 'Disease',                   nil ),
        ( 'Dominated',                 nil ),
        ( 'Elemental shield',          '_ELEMENTALSHIELD' ),
        ( 'Entangle',                  nil ),
        ( 'Ethereal',                  nil ),
        ( 'Frightened',                nil ),
        ( 'Haste',                     nil ),
        ( 'Immunity',                  nil ),
        ( 'Improved invisibility',     '_IMPROVEDINVISIBILITY' ),
        ( 'Invisibility',              nil ),
        ( 'Miss chance',               nil ),
        ( 'Movement speed decrease',   nil ),
        ( 'Movement speed increase',   nil ),
        ( 'Negative level',            '_NEGATIVELEVEL' ),
        ( 'Paralyze',                  nil ),
        ( 'Petrify',                   nil ),
        ( 'Poison',                    nil ),
        ( 'Polymorph',                 nil ),
        ( 'Regeneration',              '_REGENERATE' ),
        ( 'Sanctuary',                 nil ),
        ( 'Saving throw decrease',     nil ),
        ( 'Saving throw increase',     nil ),
        ( 'See invisible',             '_SEEINVISIBLE' ),
        ( 'Silence',                   nil ),
        ( 'Skill decrease',            nil ),
        ( 'Skill increase',            nil ),
        ( 'Sleep',                     nil ),
        ( 'Slow',                      nil ),
        ( 'Spell failure',             nil ),
        ( 'Spell immunity',            nil ),
        ( 'Spell level absorption',    '_SPELLLEVELABSORPTION' ),
        ( 'Spell resistance decrease', nil ),
        ( 'Spell resistance increase', nil ),
        ( 'Stunned',                   nil ),
        ( 'Swarm',                     nil ),
        ( 'Temporary hit points',      '_TEMPORARY_HITPOINTS' ),
        ( 'Timestop',                  nil ),
        ( 'Trueseeing',                nil ),
        ( 'Turn resistance decrease',  nil ),
        ( 'Turn resistance increase',  nil ),
        ( 'Turned',                    nil ),
        ( 'Ultravision',               nil ),
        ( 'Visual effect',             '_VISUALEFFECT' ),
        ( 'Unrecognizable effect',     '_INVALIDEFFECT' ),
        // The trailing info row:
        ( nil, 'EFFECT_TYPE' )
      );

    // The NWScript symbolic constants for "common" (general) feats.
    FEAT_COMMON: array[0..253] of StringPair =
      ( ( 'Alertness',                                     '_ALERTNESS' ),
        ( 'Ambidextrity',                                  '_AMBIDEXTERITY' ),
        ( 'Arcane defense (abjuration)',                   '_ARCANE_DEFENSE_ABJURATION' ),
        ( 'Arcane defense (conjuration)',                  '_ARCANE_DEFENSE_CONJURATION' ),
        ( 'Arcane defense (divination)',                   '_ARCANE_DEFENSE_DIVINATION' ),
        ( 'Arcane defense (enchantment)',                  '_ARCANE_DEFENSE_ENCHANTMENT' ),
        ( 'Arcane defense (evocation)',                    '_ARCANE_DEFENSE_EVOCATION' ),
        ( 'Arcane defense (illusion)',                     '_ARCANE_DEFENSE_ILLUSION' ),
        ( 'Arcane defense (necromancy)',                   '_ARCANE_DEFENSE_NECROMANCY' ),
        ( 'Arcane defense (transmutation)',                '_ARCANE_DEFENSE_TRANSMUTATION' ),
        ( 'Armor proficiency (heavy)',                     '_ARMOR_PROFICIENCY_HEAVY' ),
        ( 'Armor proficiency (light)',                     '_ARMOR_PROFICIENCY_LIGHT' ),
        ( 'Armor proficiency (medium)',                    '_ARMOR_PROFICIENCY_MEDIUM' ),
        ( 'Artist',                                        '_ARTIST' ),
        ( 'Blind-fight',                                   '_BLIND_FIGHT' ),
        ( 'Blooded',                                       '_BLOODED' ),
        ( 'Brew potion',                                   '_BREW_POTION' ),
        ( 'Bullheaded',                                    '_BULLHEADED' ),
        ( 'Called shot',                                   '_CALLED_SHOT' ),
        ( 'Circle kick',                                   '_CIRCLE_KICK' ),
        ( 'Cleave',                                        '_CLEAVE' ),
        ( 'Combat casting',                                '_COMBAT_CASTING' ),
        ( 'Courteous magocracy',                           '_COURTLY_MAGOCRACY' ),
        ( 'Craft wand',                                    '_CRAFT_WAND' ),
        ( 'Curse song',                                    '_CURSE_SONG' ),
        ( 'Deflect arrows',                                '_DEFLECT_ARROWS' ),
        ( 'Dirty fighting',                                '_DIRTY_FIGHTING' ),
        ( 'Disarm',                                        '_DISARM' ),
        ( 'Divine might',                                  '_DIVINE_MIGHT' ),
        ( 'Divine shield',                                 '_DIVINE_SHIELD' ),
        ( 'Dodge',                                         '_DODGE' ),
        ( 'Empower spell',                                 '_EMPOWER_SPELL' ),
        ( 'Expertise',                                     '_EXPERTISE' ),
        ( 'Extend spell',                                  '_EXTEND_SPELL' ),
        ( 'Extra music',                                   '_EXTRA_MUSIC' ),
        ( 'Extra smiting',                                 '_EXTRA_SMITING' ),
        ( 'Extra stunning attacks',                        '_EXTRA_STUNNING_ATTACK' ),
        ( 'Extra turning',                                 '_EXTRA_TURNING' ),
        ( 'Great cleave',                                  '_GREAT_CLEAVE' ),
        ( 'Great fortitude',                               '_GREAT_FORTITUDE' ),
        ( 'Greater spell focus (abjuration)',              '_GREATER_SPELL_FOCUS_ABJURATION' ),
        ( 'Greater spell focus (conjuration)',             '_GREATER_SPELL_FOCUS_CONJURATION' ),
        ( 'Greater spell focus (divination)',              '_GREATER_SPELL_FOCUS_DIVINATION' ),
        ( 'Greater spell focus (enchantment)',             '_GREATER_SPELL_FOCUS_ENCHANTMENT' ),
        ( 'Greater spell focus (evocation)',               '_GREATER_SPELL_FOCUS_EVOCATION' ),
        ( 'Greater spell focus (illusion)',                '_GREATER_SPELL_FOCUS_ILLUSION' ),
        ( 'Greater spell focus (necromancy)',              '_GREATER_SPELL_FOCUS_NECROMANCY' ),
        ( 'Greater spell focus (transmutation)',           '_GREATER_SPELL_FOCUS_TRANSMUTATION' ),
        ( 'Greater spell penetration',                     '_GREATER_SPELL_PENETRATION' ),
        ( 'Improved critical (bastard sword)',             '_IMPROVED_CRITICAL_BASTARD_SWORD' ),
        ( 'Improved critical (battle axe)',                '_IMPROVED_CRITICAL_BATTLE_AXE' ),
        ( 'Improved critical (club)',                      '_IMPROVED_CRITICAL_CLUB' ),
        ( 'Improved critical (dagger)',                    '_IMPROVED_CRITICAL_DAGGER' ),
        ( 'Improved critical (dart)',                      '_IMPROVED_CRITICAL_DART' ),
        ( 'Improved critical (dire mace)',                 '_IMPROVED_CRITICAL_DIRE_MACE' ),
        ( 'Improved critical (double axe)',                '_IMPROVED_CRITICAL_DOUBLE_AXE' ),
        ( 'Improved critical (dwarven waraxe)',            '_IMPROVED_CRITICAL_DWAXE' ),
        ( 'Improved critical (greataxe)',                  '_IMPROVED_CRITICAL_GREAT_AXE' ),
        ( 'Improved critical (greatsword)',                '_IMPROVED_CRITICAL_GREAT_SWORD' ),
        ( 'Improved critical (halberd)',                   '_IMPROVED_CRITICAL_HALBERD' ),
        ( 'Improved critical (hand axe)',                  '_IMPROVED_CRITICAL_HAND_AXE' ),
        ( 'Improved critical (heavy crossbow)',            '_IMPROVED_CRITICAL_HEAVY_CROSSBOW' ),
        ( 'Improved critical (heavy flail)',               '_IMPROVED_CRITICAL_HEAVY_FLAIL' ),
        ( 'Improved critical (kama)',                      '_IMPROVED_CRITICAL_KAMA' ),
        ( 'Improved critical (katana)',                    '_IMPROVED_CRITICAL_KATANA' ),
        ( 'Improved critical (kukri)',                     '_IMPROVED_CRITICAL_KUKRI' ),
        ( 'Improved critical (light crossbow)',            '_IMPROVED_CRITICAL_LIGHT_CROSSBOW' ),
        ( 'Improved critical (light flail)',               '_IMPROVED_CRITICAL_LIGHT_FLAIL' ),
        ( 'Improved critical (light hammer)',              '_IMPROVED_CRITICAL_LIGHT_HAMMER' ),
        ( 'Improved critical (longbow)',                   '_IMPROVED_CRITICAL_LONGBOW' ),
        ( 'Improved critical (long sword)',                '_IMPROVED_CRITICAL_LONG_SWORD' ),
        ( 'Improved critical (mace)',                      '_IMPROVED_CRITICAL_LIGHT_MACE' ),
        ( 'Improved critical (morningstar)',               '_IMPROVED_CRITICAL_MORNING_STAR' ),
        ( 'Improved critical (quarterstaff)',              '_IMPROVED_CRITICAL_STAFF' ),
        ( 'Improved critical (rapier)',                    '_IMPROVED_CRITICAL_RAPIER' ),
        ( 'Improved critical (scimitar)',                  '_IMPROVED_CRITICAL_SCIMITAR' ),
        ( 'Improved critical (scythe)',                    '_IMPROVED_CRITICAL_SCYTHE' ),
        ( 'Improved critical (short sword)',               '_IMPROVED_CRITICAL_SHORT_SWORD' ),
        ( 'Improved critical (shortbow)',                  '_IMPROVED_CRITICAL_SHORTBOW' ),
        ( 'Improved critical (shuriken)',                  '_IMPROVED_CRITICAL_SHURIKEN' ),
        ( 'Improved critical (sickle)',                    '_IMPROVED_CRITICAL_SICKLE' ),
        ( 'Improved critical (sling)',                     '_IMPROVED_CRITICAL_SLING' ),
        ( 'Improved critical (spear)',                     '_IMPROVED_CRITICAL_SPEAR' ),
        ( 'Improved critical (throwing axe)',              '_IMPROVED_CRITICAL_THROWING_AXE' ),
        ( 'Improved critical (trident)',                   '_IMPROVED_CRITICAL_TRIDENT' ),
        ( 'Improved critical (two-bladed sword)',          '_IMPROVED_CRITICAL_TWO_BLADED_SWORD' ),
        ( 'Improved critical (unarmed)',                   '_IMPROVED_CRITICAL_UNARMED_STRIKE' ),
        ( 'Improved critical (war hammer)',                '_IMPROVED_CRITICAL_WAR_HAMMER' ),
        ( 'Improved critical (whip)',                      '_IMPROVED_CRITICAL_WHIP' ),
        ( 'Improved disarm',                               '_IMPROVED_DISARM' ),
        ( 'Improved expertise',                            '_IMPROVED_EXPERTISE' ),
        ( 'Improved initiative',                           '_IMPROVED_INITIATIVE' ),
        ( 'Improved knockdown',                            '_IMPROVED_KNOCKDOWN' ),
        ( 'Improved parry',                                '_IMPROVED_PARRY' ),
        ( 'Improved power attack',                         '_IMPROVED_POWER_ATTACK' ),
        ( 'Improved two weapon fighting',                  '_IMPROVED_TWO_WEAPON_FIGHTING' ),
        ( 'Improved unarmed strike',                       '_IMPROVED_UNARMED_STRIKE' ),
        ( 'Iron will',                                     '_IRON_WILL' ),
        ( 'Knockdown',                                     '_KNOCKDOWN' ),
        ( 'Lightning reflexes',                            '_LIGHTNING_REFLEXES' ),
        ( 'Lingering song',                                '_LINGERING_SONG' ),
        ( 'Luck of heroes',                                '_LUCK_OF_HEROES' ),
        ( 'Maximize spell',                                '_MAXIMIZE_SPELL' ),
        ( 'Mobility',                                      '_MOBILITY' ),
        ( 'Mounted archery',                               '_MOUNTED_ARCHERY' ),
        ( 'Mounted combat',                                '_MOUNTED_COMBAT' ),
        ( 'Point blank shot',                              '_POINT_BLANK_SHOT' ),
        ( 'Power attack',                                  '_POWER_ATTACK' ),
        ( 'Quicken spell',                                 '_QUICKEN_SPELL' ),
        ( 'Rapid reload',                                  '_RAPID_RELOAD' ),
        ( 'Rapid shot',                                    '_RAPID_SHOT' ),
        ( 'Resist disease',                                '_RESIST_DISEASE' ),
        ( 'Resist energy (acid)',                          '_RESIST_ENERGY_ACID' ),
        ( 'Resist energy (cold)',                          '_RESIST_ENERGY_COLD' ),
        ( 'Resist energy (electrical)',                    '_RESIST_ENERGY_ELECTRICAL' ),
        ( 'Resist energy (fire)',                          '_RESIST_ENERGY_FIRE' ),
        ( 'Resist energy (sonic)',                         '_RESIST_ENERGY_SONIC' ),
        ( 'Resist poison',                                 '_RESIST_POISON' ),
        ( 'Scribe scroll',                                 '_SCRIBE_SCROLL' ),
        ( 'Shield proficiency',                            '_SHIELD_PROFICIENCY' ),
        ( 'Silent spell',                                  '_SILENCE_SPELL' ),
        ( 'Silver palm',                                   '_SILVER_PALM' ),
        ( 'Skill focus (animal empathy)',                  '_SKILL_FOCUS_ANIMAL_EMPATHY' ),
        ( 'Skill focus (appraise)',                        '_SKILLFOCUS_APPRAISE' ),
        ( 'Skill focus (bluff)',                           '_SKILL_FOCUS_BLUFF' ),
        ( 'Skill focus (concentration)',                   '_SKILL_FOCUS_CONCENTRATION' ),
        ( 'Skill focus (craft armor)',                     '_SKILL_FOCUS_CRAFT_ARMOR' ),
        ( 'Skill focus (craft trap)',                      '_SKILL_FOCUS_CRAFT_TRAP' ),
        ( 'Skill focus (craft weapon)',                    '_SKILL_FOCUS_CRAFT_WEAPON' ),
        ( 'Skill focus (disable trap)',                    '_SKILL_FOCUS_DISABLE_TRAP' ),
        ( 'Skill focus (discipline)',                      '_SKILL_FOCUS_DISCIPLINE' ),
        ( 'Skill focus (heal)',                            '_SKILL_FOCUS_HEAL' ),
        ( 'Skill focus (hide)',                            '_SKILL_FOCUS_HIDE' ),
        ( 'Skill focus (intimidate)',                      '_SKILL_FOCUS_INTIMIDATE' ),
        ( 'Skill focus (listen)',                          '_SKILL_FOCUS_LISTEN' ),
        ( 'Skill focus (lore)',                            '_SKILL_FOCUS_LORE' ),
        ( 'Skill focus (move silently)',                   '_SKILL_FOCUS_MOVE_SILENTLY' ),
        ( 'Skill focus (open lock)',                       '_SKILL_FOCUS_OPEN_LOCK' ),
        ( 'Skill focus (parry)',                           '_SKILL_FOCUS_PARRY' ),
        ( 'Skill focus (perform)',                         '_SKILL_FOCUS_PERFORM' ),
        ( 'Skill focus (persuade)',                        '_SKILL_FOCUS_PERSUADE' ),
        ( 'Skill focus (pick pocket)',                     '_SKILL_FOCUS_PICK_POCKET' ),
        ( 'Skill focus (search)',                          '_SKILL_FOCUS_SEARCH' ),
        ( 'Skill focus (set trap)',                        '_SKILL_FOCUS_SET_TRAP' ),
        ( 'Skill focus (spellcraft)',                      '_SKILL_FOCUS_SPELLCRAFT' ),
        ( 'Skill focus (spot)',                            '_SKILL_FOCUS_SPOT' ),
        ( 'Skill focus (taunt)',                           '_SKILL_FOCUS_TAUNT' ),
        ( 'Skill focus (tumble)',                          '_SKILL_FOCUS_TUMBLE' ),
        ( 'Skill focus (use magic device)',                '_SKILL_FOCUS_USE_MAGIC_DEVICE' ),
        ( 'Snake blood',                                   '_SNAKEBLOOD' ),
        ( 'Spell focus (abjuration)',                      '_SPELL_FOCUS_ABJURATION' ),
        ( 'Spell focus (conjuration)',                     '_SPELL_FOCUS_CONJURATION' ),
        ( 'Spell focus (divination)',                      '_SPELL_FOCUS_DIVINATION' ),
        ( 'Spell focus (enchantment)',                     '_SPELL_FOCUS_ENCHANTMENT' ),
        ( 'Spell focus (evocation)',                       '_SPELL_FOCUS_EVOCATION' ),
        ( 'Spell focus (illusion)',                        '_SPELL_FOCUS_ILLUSION' ),
        ( 'Spell focus (necromancy)',                      '_SPELL_FOCUS_NECROMANCY' ),
        ( 'Spell focus (transmutation)',                   '_SPELL_FOCUS_TRANSMUTATION' ),
        ( 'Spell penetration',                             '_SPELL_PENETRATION' ),
        ( 'Spring attack',                                 '_SPRING_ATTACK' ),
        ( 'Stealthy',                                      '_STEALTHY' ),
        ( 'Still spell',                                   '_STILL_SPELL' ),
        ( 'Strong soul',                                   '_STRONGSOUL' ),
        ( 'Stunning fist',                                 '_STUNNING_FIST' ),
        ( 'Thug',                                          '_THUG' ),
        ( 'Toughness',                                     '_TOUGHNESS' ),
        ( 'Two weapon fighting',                           '_TWO_WEAPON_FIGHTING' ),
        ( 'Weapon finesse',                                '_WEAPON_FINESSE' ),
        ( 'Weapon focus (bastard sword)',                  '_WEAPON_FOCUS_BASTARD_SWORD' ),
        ( 'Weapon focus (battle axe)',                     '_WEAPON_FOCUS_BATTLE_AXE' ),
        ( 'Weapon focus (club)',                           '_WEAPON_FOCUS_CLUB' ),
        ( 'Weapon focus (dagger)',                         '_WEAPON_FOCUS_DAGGER' ),
        ( 'Weapon focus (dart)',                           '_WEAPON_FOCUS_DART' ),
        ( 'Weapon focus (dire mace)',                      '_WEAPON_FOCUS_DIRE_MACE' ),
        ( 'Weapon focus (double axe)',                     '_WEAPON_FOCUS_DOUBLE_AXE' ),
        ( 'Weapon focus (dwarven waraxe)',                 '_WEAPON_FOCUS_DWAXE' ),
        ( 'Weapon focus (greataxe)',                       '_WEAPON_FOCUS_GREAT_AXE' ),
        ( 'Weapon focus (greatsword)',                     '_WEAPON_FOCUS_GREAT_SWORD' ),
        ( 'Weapon focus (halberd)',                        '_WEAPON_FOCUS_HALBERD' ),
        ( 'Weapon focus (hand axe)',                       '_WEAPON_FOCUS_HAND_AXE' ),
        ( 'Weapon focus (heavy crossbow)',                 '_WEAPON_FOCUS_HEAVY_CROSSBOW' ),
        ( 'Weapon focus (heavy flail)',                    '_WEAPON_FOCUS_HEAVY_FLAIL' ),
        ( 'Weapon focus (kama)',                           '_WEAPON_FOCUS_KAMA' ),
        ( 'Weapon focus (katana)',                         '_WEAPON_FOCUS_KATANA' ),
        ( 'Weapon focus (kukri)',                          '_WEAPON_FOCUS_KUKRI' ),
        ( 'Weapon focus (light crossbow)',                 '_WEAPON_FOCUS_LIGHT_CROSSBOW' ),
        ( 'Weapon focus (light flail)',                    '_WEAPON_FOCUS_LIGHT_FLAIL' ),
        ( 'Weapon focus (light hammer)',                   '_WEAPON_FOCUS_LIGHT_HAMMER' ),
        ( 'Weapon focus (longbow)',                        '_WEAPON_FOCUS_LONGBOW' ),
        ( 'Weapon focus (long sword)',                     '_WEAPON_FOCUS_LONG_SWORD' ),
        ( 'Weapon focus (mace)',                           '_WEAPON_FOCUS_LIGHT_MACE' ),
        ( 'Weapon focus (morning star)',                   '_WEAPON_FOCUS_MORNING_STAR' ),
        ( 'Weapon focus (quarterstaff)',                   '_WEAPON_FOCUS_STAFF' ),
        ( 'Weapon focus (rapier)',                         '_WEAPON_FOCUS_RAPIER' ),
        ( 'Weapon focus (scimitar)',                       '_WEAPON_FOCUS_SCIMITAR' ),
        ( 'Weapon focus (scythe)',                         '_WEAPON_FOCUS_SCYTHE' ),
        ( 'Weapon focus (short sword)',                    '_WEAPON_FOCUS_SHORT_SWORD' ),
        ( 'Weapon focus (shortbow)',                       '_WEAPON_FOCUS_SHORTBOW' ),
        ( 'Weapon focus (shuriken)',                       '_WEAPON_FOCUS_SHURIKEN' ),
        ( 'Weapon focus (sickle)',                         '_WEAPON_FOCUS_SICKLE' ),
        ( 'Weapon focus (sling)',                          '_WEAPON_FOCUS_SLING' ),
        ( 'Weapon focus (spear)',                          '_WEAPON_FOCUS_SPEAR' ),
        ( 'Weapon focus (throwing axe)',                   '_WEAPON_FOCUS_THROWING_AXE' ),
        ( 'Weapon focus (trident)',                        '_WEAPON_FOCUS_TRIDENT' ),
        ( 'Weapon focus (two-bladed sword)',               '_WEAPON_FOCUS_TWO_BLADED_SWORD' ),
        ( 'Weapon focus (unarmed)',                        '_WEAPON_FOCUS_UNARMED_STRIKE' ),
        ( 'Weapon focus (war hammer)',                     '_WEAPON_FOCUS_WAR_HAMMER' ),
        ( 'Weapon focus (whip)',                           '_WEAPON_FOCUS_WHIP' ),
        ( 'Weapon proficiency (exotic)',                   '_WEAPON_PROFICIENCY_EXOTIC' ),
        ( 'Weapon proficiency (martail)',                  '_WEAPON_PROFICIENCY_MARTIAL' ),
        ( 'Weapon proficiency (simple)',                   '_WEAPON_PROFICIENCY_SIMPLE' ),
        ( 'Weapon specialization (bastard sword)',         '_WEAPON_SPECIALIZATION_BASTARD_SWORD' ),
        ( 'Weapon specialization (battle axe)',            '_WEAPON_SPECIALIZATION_BATTLE_AXE' ),
        ( 'Weapon specialization (club)',                  '_WEAPON_SPECIALIZATION_CLUB' ),
        ( 'Weapon specialization (dagger)',                '_WEAPON_SPECIALIZATION_DAGGER' ),
        ( 'Weapon specialization (dart)',                  '_WEAPON_SPECIALIZATION_DART' ),
        ( 'Weapon specialization (dire mace)',             '_WEAPON_SPECIALIZATION_DIRE_MACE' ),
        ( 'Weapon specialization (double axe)',            '_WEAPON_SPECIALIZATION_DOUBLE_AXE' ),
        ( 'Weapon specialization (dwarven waraxe)',        '_WEAPON_SPECIALIZATION_DWAXE' ),
        ( 'Weapon specialization (greataxe)',              '_WEAPON_SPECIALIZATION_GREAT_AXE' ),
        ( 'Weapon specialization (greatsword)',            '_WEAPON_SPECIALIZATION_GREAT_SWORD' ),
        ( 'Weapon specialization (halberd)',               '_WEAPON_SPECIALIZATION_HALBERD' ),
        ( 'Weapon specialization (hand axe)',              '_WEAPON_SPECIALIZATION_HAND_AXE' ),
        ( 'Weapon specialization (heavy crossbow)',        '_WEAPON_SPECIALIZATION_HEAVY_CROSSBOW' ),
        ( 'Weapon specialization (heavy flail)',           '_WEAPON_SPECIALIZATION_HEAVY_FLAIL' ),
        ( 'Weapon specialization (kama)',                  '_WEAPON_SPECIALIZATION_KAMA' ),
        ( 'Weapon specialization (katana)',                '_WEAPON_SPECIALIZATION_KATANA' ),
        ( 'Weapon specialization (kukri)',                 '_WEAPON_SPECIALIZATION_KUKRI' ),
        ( 'Weapon specialization (light crossbow)',        '_WEAPON_SPECIALIZATION_LIGHT_CROSSBOW' ),
        ( 'Weapon specialization (light flail)',           '_WEAPON_SPECIALIZATION_LIGHT_FLAIL' ),
        ( 'Weapon specialization (light hammer)',          '_WEAPON_SPECIALIZATION_LIGHT_HAMMER' ),
        ( 'Weapon specialization (longbow)',               '_WEAPON_SPECIALIZATION_LONGBOW' ),
        ( 'Weapon specialization (long sword)',            '_WEAPON_SPECIALIZATION_LONG_SWORD' ),
        ( 'Weapon specialization (mace)',                  '_WEAPON_SPECIALIZATION_LIGHT_MACE' ),
        ( 'Weapon specialization (morning star)',          '_WEAPON_SPECIALIZATION_MORNING_STAR' ),
        ( 'Weapon specialization (quarterstaff)',          '_WEAPON_SPECIALIZATION_STAFF' ),
        ( 'Weapon specialization (rapier)',                '_WEAPON_SPECIALIZATION_RAPIER' ),
        ( 'Weapon specialization (scimitar)',              '_WEAPON_SPECIALIZATION_SCIMITAR' ),
        ( 'Weapon specialization (scythe)',                '_WEAPON_SPECIALIZATION_SCYTHE' ),
        ( 'Weapon specialization (short sword)',           '_WEAPON_SPECIALIZATION_SHORT_SWORD' ),
        ( 'Weapon specialization (shortbow)',              '_WEAPON_SPECIALIZATION_SHORTBOW' ),
        ( 'Weapon specialization (shuriken)',              '_WEAPON_SPECIALIZATION_SHURIKEN' ),
        ( 'Weapon specialization (sickle)',                '_WEAPON_SPECIALIZATION_SICKLE' ),
        ( 'Weapon specialization (sling)',                 '_WEAPON_SPECIALIZATION_SLING' ),
        ( 'Weapon specialization (spear)',                 '_WEAPON_SPECIALIZATION_SPEAR' ),
        ( 'Weapon specialization (throwing axe)',          '_WEAPON_SPECIALIZATION_THROWING_AXE' ),
        ( 'Weapon specialization (trident)',               '_WEAPON_SPECIALIZATION_TRIDENT' ),
        ( 'Weapon specialization (two-bladed sword)',      '_WEAPON_SPECIALIZATION_TWO_BLADED_SWORD' ),
        ( 'Weapon specialization (unarmed)',               '_WEAPON_SPECIALIZATION_UNARMED_STRIKE' ),
        ( 'Weapon specialization (war hammer)',            '_WEAPON_SPECIALIZATION_WAR_HAMMER' ),
        ( 'Weapon specialization (whip)',                  '_WEAPON_SPECIALIZATION_WHIP' ),
        ( 'Whirlwind attack',                              '_WHIRLWIND_ATTACK' ),
        ( 'Zen archery',                                   '_ZEN_ARCHERY' ),
        // The trailing info row:
        ( nil, 'FEAT' )
      );
    // The NWScript symbolic constants for "special" (class/racial/monster) feats.
    FEAT_SPECIAL: array[0..386] of StringPair =
      ( ( 'Animal companion',                              '_ANIMAL_COMPANION' ),
        ( 'Animate dead (pale master)',                    '_ANIMATE_DEAD' ),
        ( 'Arrow of death',                                '_PRESTIGE_ARROW_OF_DEATH' ),
        ( 'Aura of courage',                               '_AURA_OF_COURAGE' ),
        ( 'Barbarian fast movement',                       '_BARBARIAN_ENDURANCE' ),
        ( 'Barbarian rage (1x per day)',                   '_BARBARIAN_RAGE' ),
        ( 'Barbarian rage (2x per day)',                   '326' ),
        ( 'Barbarian rage (3x per day)',                   '327' ),
        ( 'Barbarian rage (4x per day)',                   '328' ),
        ( 'Bard song 1',                                   '_BARD_SONGS' ),
        ( 'Bard song 2',                                   '355' ),
        ( 'Bard song 3',                                   '356' ),
        ( 'Bard song 4',                                   '357' ),
        ( 'Bard song 5',                                   '358' ),
        ( 'Bard song 6',                                   '359' ),
        ( 'Bard song 7',                                   '360' ),
        ( 'Bard song 8',                                   '361' ),
        ( 'Bard song 9',                                   '362' ),
        ( 'Bard song 10',                                  '363' ),
        ( 'Bard song 11',                                  '364' ),
        ( 'Bard song 12',                                  '365' ),
        ( 'Bard song 13',                                  '366' ),
        ( 'Bard song 14',                                  '367' ),
        ( 'Bard song 15',                                  '368' ),
        ( 'Bard song 16',                                  '369' ),
        ( 'Bard song 17',                                  '370' ),
        ( 'Bard song 18',                                  '371' ),
        ( 'Bard song 19',                                  '372' ),
        ( 'Bard song 20',                                  '373' ),
        ( 'Bardic knowledge',                              '_BARDIC_KNOWLEDGE' ),
        ( 'Battle training versus giants',                 '_BATTLE_TRAINING_VERSUS_GIANTS' ),
        ( 'Battle training versus goblins',                '_BATTLE_TRAINING_VERSUS_GOBLINS' ),
        ( 'Battle training versus orcs',                   '_BATTLE_TRAINING_VERSUS_ORCS' ),
        ( 'Battle training versus reptilians',             '_BATTLE_TRAINING_VERSUS_REPTILIANS' ),
        ( 'Blindsight 60 feet (monsters)',                 '_BLINDSIGHT_60_FEET' ),
        ( 'Bone skin',                                     '_BONE_SKIN_2' ),
        ( 'Bull''s srength (blackguard)',                  '_BULLS_STRENGTH' ),
        ( 'Cat''s grace (Harper scout)',                   '_HARPER_CATS_GRACE' ),
        ( 'Contagion (blackguard)',                        '_CONTAGION' ),
        ( 'Craft Harper item',                             '_CRAFT_HARPER_ITEM' ),
        ( 'Create undead (blackguard)',                    '474' ),
        ( 'Crippling strike',                              '_CRIPPLING_STRIKE' ),
        ( 'Damage reduction 1 (barbarian)',                '_DAMAGE_REDUCTION' ),
        ( 'Damage reduction 2 (barbarian)',                '332' ),
        ( 'Damage reduction 3 (barbarian)',                '333' ),
        ( 'Damage reduction 4 (barbarian)',                '334' ),
        ( 'Dark blessing',                                 '_PRESTIGE_DARK_BLESSING' ),
        ( 'Darkness (assassin)',                           '_PRESTIGE_DARKNESS' ),
        ( 'Darkvision',                                    '_DARKVISION' ),
        ( 'Death attack (+1d6)',                           '_PRESTIGE_DEATH_ATTACK_1' ),
        ( 'Death attack (+2d6)',                           '_PRESTIGE_DEATH_ATTACK_2' ),
        ( 'Death attack (+3d6)',                           '_PRESTIGE_DEATH_ATTACK_3' ),
        ( 'Death attack (+4d6)',                           '_PRESTIGE_DEATH_ATTACK_4' ),
        ( 'Death attack (+5d6)',                           '_PRESTIGE_DEATH_ATTACK_5' ),
        ( 'Death attack (+6d6)',                           '_PRESTIGE_DEATH_ATTACK_6' ),
        ( 'Death attack (+7d6)',                           '_PRESTIGE_DEATH_ATTACK_7' ),
        ( 'Death attack (+8d6)',                           '_PRESTIGE_DEATH_ATTACK_8' ),
        ( 'Death attack (+9d6)',                           '_PRESTIGE_DEATH_ATTACK_9' ),
        ( 'Death attack (+10d6)',                          '_PRESTIGE_DEATH_ATTACK_10' ),
        ( 'Death attack (+11d6)',                          '_PRESTIGE_DEATH_ATTACK_11' ),
        ( 'Death attack (+12d6)',                          '_PRESTIGE_DEATH_ATTACK_12' ),
        ( 'Death attack (+13d6)',                          '_PRESTIGE_DEATH_ATTACK_13' ),
        ( 'Death attack (+14d6)',                          '_PRESTIGE_DEATH_ATTACK_14' ),
        ( 'Death attack (+15d6)',                          '_PRESTIGE_DEATH_ATTACK_15' ),
        ( 'Death attack (+16d6)',                          '_PRESTIGE_DEATH_ATTACK_16' ),
        ( 'Death attack (+17d6)',                          '_PRESTIGE_DEATH_ATTACK_17' ),
        ( 'Death attack (+18d6)',                          '_PRESTIGE_DEATH_ATTACK_18' ),
        ( 'Death attack (+19d6)',                          '_PRESTIGE_DEATH_ATTACK_19' ),
        ( 'Death attack (+20d6)',                          '_PRESTIGE_DEATH_ATTACK_20' ),
        ( 'Deathless master touch',                        '_DEATHLESS_MASTER_TOUCH' ),
        ( 'Deathless mastery',                             '_DEATHLESS_MASTERY' ),
        ( 'Deathless vigor',                               '_DEATHLESS_VIGOR' ),
        ( 'Defensive awareness 1',                         '_PRESTIGE_DEFENSIVE_AWARENESS_1' ),
        ( 'Defensive awareness 2',                         '_PRESTIGE_DEFENSIVE_AWARENESS_2' ),
        ( 'Defensive awareness 3',                         '_PRESTIGE_DEFENSIVE_AWARENESS_3' ),
        ( 'Defensive roll',                                '_DEFENSIVE_ROLL' ),
        ( 'Defensive stand',                               '_DWARVEN_DEFENDER_DEFENSIVE_STANCE' ),
        ( 'Deneir''s eye',                                 '_DENEIRS_EYE' ),
        ( 'Diamond body',                                  '_DIAMOND_BODY' ),
        ( 'Diamond soul',                                  '_DIAMOND_SOUL' ),
        ( 'Divine grace',                                  '_DIVINE_GRACE' ),
        ( 'Divine health',                                 '_DIVINE_HEALTH' ),
        ( 'Divine wrath',                                  '_DIVINE_WRATH' ),
        ( 'DM tool 1',                                     '1096' ),
        ( 'DM tool 2',                                     '1097' ),
        ( 'DM tool 3',                                     '1098' ),
        ( 'DM tool 4',                                     '1099' ),
        ( 'DM tool 5',                                     '1100' ),
        ( 'DM tool 6',                                     '1101' ),
        ( 'DM tool 7',                                     '1102' ),
        ( 'DM tool 8',                                     '1103' ),
        ( 'DM tool 9',                                     '1104' ),
        ( 'DM tool 10',                                    '1105' ),
        ( 'Domain power (air)',                            '_AIR_DOMAIN_POWER' ),
        ( 'Domain power (animal)',                         '_ANIMAL_DOMAIN_POWER' ),
        ( 'Domain power (death)',                          '_DEATH_DOMAIN_POWER' ),
        ( 'Domain power (destruction)',                    '_DESTRUCTION_DOMAIN_POWER' ),
        ( 'Domain power (earth)',                          '_EARTH_DOMAIN_POWER' ),
        ( 'Domain power (evil)',                           '_EVIL_DOMAIN_POWER' ),
        ( 'Domain power (fire)',                           '_FIRE_DOMAIN_POWER' ),
        ( 'Domain power (good)',                           '_GOOD_DOMAIN_POWER' ),
        ( 'Domain power (healing)',                        '_HEALING_DOMAIN_POWER' ),
        ( 'Domain power (knowledge)',                      '_KNOWLEDGE_DOMAIN_POWER' ),
        ( 'Domain power (magic)',                          '_MAGIC_DOMAIN_POWER' ),
        ( 'Domain power (plant)',                          '_PLANT_DOMAIN_POWER' ),
        ( 'Domain power (protection)',                     '_PROTECTION_DOMAIN_POWER' ),
        ( 'Domain power (strength)',                       '_STRENGTH_DOMAIN_POWER' ),
        ( 'Domain power (sun)',                            '_SUN_DOMAIN_POWER' ),
        ( 'Domain power (travel)',                         '_TRAVEL_DOMAIN_POWER' ),
        ( 'Domain power (trickery)',                       '_TRICKERY_DOMAIN_POWER' ),
        ( 'Domain power (war)',                            '_WAR_DOMAIN_POWER' ),
        ( 'Domain power (water)',                          '_WATER_DOMAIN_POWER' ),
        ( 'Draconic armor',                                '_DRAGON_ARMOR' ),
        ( 'Dragon abilities',                              '_DRAGON_ABILITIES' ),
        ( 'Dragon breath',                                 '_DRAGON_DIS_BREATH' ),
        ( 'Dual-wield (ranger)',                           '374' ),
        ( 'Dwarven defender damage reduction',             '_DAMAGE_REDUCTION_6' ),
        ( 'Eagle''s splendor (Harper scout)',              '_HARPER_EAGLES_SPLENDOR' ),
        ( 'Elemental shape (1x per day)',                  '_ELEMENTAL_SHAPE' ),
        ( 'Elemental shape (2x per day)',                  '340' ),
        ( 'Elemental shape (3x per day)',                  '341' ),
        ( 'Empty body',                                    '_EMPTY_BODY' ),
        ( 'Enchant arrow +1',                              '_PRESTIGE_ENCHANT_ARROW_1' ),
        ( 'Enchant arrow +2',                              '_PRESTIGE_ENCHANT_ARROW_2' ),
        ( 'Enchant arrow +3',                              '_PRESTIGE_ENCHANT_ARROW_3' ),
        ( 'Enchant arrow +4',                              '_PRESTIGE_ENCHANT_ARROW_4' ),
        ( 'Enchant arrow +5',                              '_PRESTIGE_ENCHANT_ARROW_5' ),
        ( 'Enchant arrow +6',                              '_PRESTIGE_ENCHANT_ARROW_6' ),
        ( 'Enchant arrow +7',                              '_PRESTIGE_ENCHANT_ARROW_7' ),
        ( 'Enchant arrow +8',                              '_PRESTIGE_ENCHANT_ARROW_8' ),
        ( 'Enchant arrow +9',                              '_PRESTIGE_ENCHANT_ARROW_9' ),
        ( 'Enchant arrow +10',                             '_PRESTIGE_ENCHANT_ARROW_10' ),
        ( 'Enchant arrow +11',                             '_PRESTIGE_ENCHANT_ARROW_11' ),
        ( 'Enchant arrow +12',                             '_PRESTIGE_ENCHANT_ARROW_12' ),
        ( 'Enchant arrow +13',                             '_PRESTIGE_ENCHANT_ARROW_13' ),
        ( 'Enchant arrow +14',                             '_PRESTIGE_ENCHANT_ARROW_14' ),
        ( 'Enchant arrow +15',                             '_PRESTIGE_ENCHANT_ARROW_15' ),
        ( 'Enchant arrow +16',                             '_PRESTIGE_ENCHANT_ARROW_16' ),
        ( 'Enchant arrow +17',                             '_PRESTIGE_ENCHANT_ARROW_17' ),
        ( 'Enchant arrow +18',                             '_PRESTIGE_ENCHANT_ARROW_18' ),
        ( 'Enchant arrow +19',                             '_PRESTIGE_ENCHANT_ARROW_19' ),
        ( 'Enchant arrow +20',                             '_PRESTIGE_ENCHANT_ARROW_20' ),
        ( 'Epic barbarian damage reduction',               '_EPIC_BARBARIAN_DAMAGE_REDUCTION' ),
        ( 'Epic superior weapon focus',                    '_EPIC_SUPERIOR_WEAPON_FOCUS' ),
        ( 'Evasion',                                       '_EVASION' ),
        ( 'Favored enemy: aberrations',                    '_FAVORED_ENEMY_ABERRATION' ),
        ( 'Favored enemy: animals',                        '_FAVORED_ENEMY_ANIMAL' ),
        ( 'Favored enemy: beasts',                         '_FAVORED_ENEMY_BEAST' ),
        ( 'Favored enemy: constructs',                     '_FAVORED_ENEMY_CONSTRUCT' ),
        ( 'Favored enemy: dragons',                        '_FAVORED_ENEMY_DRAGON' ),
        ( 'Favored enemy: dwarves',                        '_FAVORED_ENEMY_DWARF' ),
        ( 'Favored enemy: elementals',                     '_FAVORED_ENEMY_ELEMENTAL' ),
        ( 'Favored enemy: elves',                          '_FAVORED_ENEMY_ELF' ),
        ( 'Favored enemy: fey',                            '_FAVORED_ENEMY_FEY' ),
        ( 'Favored enemy: giants',                         '_FAVORED_ENEMY_GIANT' ),
        ( 'Favored enemy: gnomes',                         '_FAVORED_ENEMY_GNOME' ),
        ( 'Favored enemy: goblinoids',                     '_FAVORED_ENEMY_GOBLINOID' ),
        ( 'Favored enemy: half-elves',                     '_FAVORED_ENEMY_HALFELF' ),
        ( 'Favored enemy: half-orcs',                      '_FAVORED_ENEMY_HALFORC' ),
        ( 'Favored enemy: halflings',                      '_FAVORED_ENEMY_HALFLING' ),
        ( 'Favored enemy: humans',                         '_FAVORED_ENEMY_HUMAN' ),
        ( 'Favored enemy: magical beasts',                 '_FAVORED_ENEMY_MAGICAL_BEAST' ),
        ( 'Favored enemy: monstrous humanoids',            '_FAVORED_ENEMY_MONSTROUS' ),
        ( 'Favored enemy: orcs',                           '_FAVORED_ENEMY_ORC' ),
        ( 'Favored enemy: outsiders',                      '_FAVORED_ENEMY_OUTSIDER' ),
        ( 'Favored enemy: reptilian humanoids',            '_FAVORED_ENEMY_REPTILIAN' ),
        ( 'Favored enemy: shapechangers',                  '_FAVORED_ENEMY_SHAPECHANGER' ),
        ( 'Favored enemy: undead',                         '_FAVORED_ENEMY_UNDEAD' ),
        ( 'Favored enemy: vermin',                         '_FAVORED_ENEMY_VERMIN' ),
        ( 'Fear (purple dragon knight)',                   '_PDK_FEAR' ),
        ( 'Fearless',                                      '_FEARLESS' ),
        ( 'Fiendish servant',                              '475' ),
        ( 'Final stand',                                   '_PDK_STAND' ),
        ( 'Flurry of blows',                               '_FLURRY_OF_BLOWS' ),
        ( 'Ghostly visage (assassin)',                     '_PRESTIGE_SPELL_GHOSTLY_VISAGE' ),
        ( 'Good aim',                                      '_GOOD_AIM' ),
        ( 'Greater rage (4x per day)',                     '329' ),
        ( 'Greater rage (5x per day)',                     '330' ),
        ( 'Greater rage (6+x per day)',                    '331' ),
        ( 'Greater wildshape I (wyrmling shape)',          '_GREATER_WILDSHAPE_1' ),
        ( 'Greater wildshape II',                          '_GREATER_WILDSHAPE_2' ),
        ( 'Greater wildshape III',                         '_GREATER_WILDSHAPE_3' ),
        ( 'Greater wildshape IV',                          '_GREATER_WILDSHAPE_4' ),
        ( 'Hail of arrows',                                '_PRESTIGE_HAIL_OF_ARROWS' ),
        ( 'Hardiness versus enchantments',                 '_HARDINESS_VERSUS_ENCHANTMENTS' ),
        ( 'Hardiness versus illusions',                    '_HARDINESS_VERSUS_ILLUSIONS' ),
        ( 'Hardiness versus poisons',                      '_HARDINESS_VERSUS_POISONS' ),
        ( 'Hardiness versus spells',                       '_HARDINESS_VERSUS_SPELLS' ),
        ( 'Heroic shield',                                 '_PDK_SHIELD' ),
        ( 'Hide in plain sight',                           '_HIDE_IN_PLAIN_SIGHT' ),
        ( 'Hit die increase (d6)',                         '_DRAGON_HDINCREASE_D6' ),
        ( 'Hit die increase (d8)',                         '_DRAGON_HDINCREASE_D8' ),
        ( 'Hit die increase (d10)',                        '_DRAGON_HDINCREASE_D10' ),
        ( 'Humanoid shape',                                '_HUMANOID_SHAPE' ),
        ( 'Imbue arrow',                                   '_PRESTIGE_IMBUE_ARROW' ),
        ( 'Immunity to fire',                              '_DRAGON_IMMUNE_FIRE' ),
        ( 'Immunity to paralysis',                         '_DRAGON_IMMUNE_PARALYSIS' ),
        ( 'Immunity to sleep',                             '_IMMUNITY_TO_SLEEP' ),
        ( 'Improved critical (creature)',                  '_IMPROVED_CRITICAL_CREATURE' ),
        ( 'Improved elemental shape',                      '342' ),
        ( 'Improved evasion',                              '_IMPROVED_EVASION' ),
        ( 'Improved invisibility (assassin)',              '_PRESTIGE_INVISIBILITY_2' ),
        ( 'Increased multiplier',                          '_INCREASE_MULTIPLIER' ),
        ( 'Infinite elemental shape',                      '_EPIC_DRUID_INFINITE_ELEMENTAL_SHAPE' ),
        ( 'Infinite greater wildshape I',                  '_EPIC_SHIFTER_INFINITE_WILDSHAPE_1' ),
        ( 'Infinite greater wildshape II',                 '_EPIC_SHIFTER_INFINITE_WILDSHAPE_2' ),
        ( 'Infinite greater wildshape III',                '_EPIC_SHIFTER_INFINITE_WILDSHAPE_3' ),
        ( 'Infinite greater wildshape IV',                 '_EPIC_SHIFTER_INFINITE_WILDSHAPE_4' ),
        ( 'Infinite humanoid shape',                       '_EPIC_SHIFTER_INFINITE_HUMANOID_SHAPE' ),
        ( 'Infinite wildshape',                            '_EPIC_DRUID_INFINITE_WILDSHAPE' ),
        ( 'Inflict serious wounds (blackguard)',           '_INFLICT_SERIOUS_WOUNDS' ),
        ( 'Inflict critical wounds (blackguard)',          '_INFLICT_CRITICAL_WOUNDS' ),
        ( 'Inspire courage 1',                             '_PDK_INSPIRE_1' ),
        ( 'Inspire courage 2',                             '_PDK_INSPIRE_2' ),
        ( 'Invisibility (assassin)',                       '_PRESTIGE_INVISIBILITY_1' ),
        ( 'Invisibility (Harper scout)',                   '_HARPER_INVISIBILITY' ),
        ( 'Keen senses',                                   '_KEEN_SENSE' ),
        ( 'Ki critical',                                   '_KI_CRITICAL' ),
        ( 'Ki damage',                                     '_KI_DAMAGE' ),
        ( 'Ki strike +1',                                  '_KI_STRIKE' ),
        ( 'Ki strike +2',                                  '343' ),
        ( 'Ki strike +3',                                  '344' ),
        ( 'Lay on hands',                                  '_LAY_ON_HANDS' ),
        ( 'Llira''s heart',                                '_LLIIRAS_HEART' ),
        ( 'Low-light vision',                              '_LOWLIGHTVISION' ),
        ( 'Lucky',                                         '_LUCKY' ),
        ( 'Monk AC bonus',                                 '_MONK_AC_BONUS' ),
        ( 'Monk speed',                                    '_MONK_ENDURANCE' ),
        ( 'Monster uncanny reflex',                        '_UNCANNY_REFLEX' ),
        ( 'Mount actions (horse menu)',                    '_HORSE_MENU' ),
        ( 'Mount actions: assign mount',                   '_HORSE_ASSIGN_MOUNT' ),
        ( 'Mount actions: individual dismount',            '_HORSE_DISMOUNT' ),
        ( 'Mount actions: individual mount',               '_HORSE_MOUNT' ),
        ( 'Mount actions: party dismount',                 '_HORSE_PARTY_DISMOUNT' ),
        ( 'Mount actions: party mount',                    '_HORSE_PARTY_MOUNT' ),
        ( 'Nature sense',                                  '_NATURE_SENSE' ),
        ( 'Oath of wrath',                                 '_PDK_WRATH' ),
        ( 'Opportunist',                                   '_OPPORTUNIST' ),
        ( 'Partial skill affinity (listen)',               '_PARTIAL_SKILL_AFFINITY_LISTEN' ),
        ( 'Partial skill affinity (search)',               '_PARTIAL_SKILL_AFFINITY_SEARCH' ),
        ( 'Partial skill affinity (spot)',                 '_PARTIAL_SKILL_AFFINITY_SPOT' ),
        ( 'Perfect self',                                  '_PERFECT_SELF' ),
        ( 'Player tool 1',                                 '_PLAYER_TOOL_01' ),
        ( 'Player tool 2',                                 '_PLAYER_TOOL_02' ),
        ( 'Player tool 3',                                 '_PLAYER_TOOL_03' ),
        ( 'Player tool 4',                                 '_PLAYER_TOOL_04' ),
        ( 'Player tool 5',                                 '_PLAYER_TOOL_05' ),
        ( 'Player tool 6',                                 '_PLAYER_TOOL_06' ),
        ( 'Player tool 7',                                 '_PLAYER_TOOL_07' ),
        ( 'Player tool 8',                                 '_PLAYER_TOOL_08' ),
        ( 'Player tool 9',                                 '_PLAYER_TOOL_09' ),
        ( 'Player tool 10',                                '_PLAYER_TOOL_10' ),
        ( 'Poison save I',                                 '_PRESTIGE_POISON_SAVE_1' ),
        ( 'Poison save II',                                '_PRESTIGE_POISON_SAVE_2' ),
        ( 'Poison save III',                               '_PRESTIGE_POISON_SAVE_3' ),
        ( 'Poison save IV',                                '_PRESTIGE_POISON_SAVE_4' ),
        ( 'Poison save V',                                 '_PRESTIGE_POISON_SAVE_5' ),
        ( 'Poison save VI+',                               '_PRESTIGE_POISON_SAVE_EPIC' ),
        ( 'Purity of body',                                '_PURITY_OF_BODY' ),
        ( 'Quick to master',                               '_QUICK_TO_MASTER' ),
        ( 'Quivering palm',                                '_QUIVERING_PALM' ),
        ( 'Rallying cry',                                  '_PDK_RALLY' ),
        ( 'Remove disease',                                '_REMOVE_DISEASE' ),
        ( 'Resist nature''s lure',                         '_RESIST_NATURES_LURE' ),
        ( 'Sacred defense',                                '_SACRED_DEFENSE_1' ),
        ( 'Sap',                                           '_SAP' ),
        ( 'Seeker arrow 1',                                '_PRESTIGE_SEEKER_ARROW_1' ),
        ( 'Seeker arrow 2',                                '_PRESTIGE_SEEKER_ARROW_2' ),
        ( 'Shadow daze',                                   '_SHADOW_DAZE' ),
        ( 'Shadow evade',                                  '_SHADOW_EVADE' ),
        ( 'Skill affinity (concentration)',                '_SKILL_AFFINITY_CONCENTRATION' ),
        ( 'Skill affinity (listen)',                       '_SKILL_AFFINITY_LISTEN' ),
        ( 'Skill affinity (lore)',                         '_SKILL_AFFINITY_LORE' ),
        ( 'Skill affinity (move silently)',                '_SKILL_AFFINITY_MOVE_SILENTLY' ),
        ( 'Skill affinity (search)',                       '_SKILL_AFFINITY_SEARCH' ),
        ( 'Skill affinity (spot)',                         '_SKILL_AFFINITY_SPOT' ),
        ( 'Skill mastery',                                 '_SKILL_MASTERY' ),
        ( 'Sleep (Harper scout)',                          '_HARPER_SLEEP' ),
        ( 'Slippery mind',                                 '_SLIPPERY_MIND' ),
        ( 'Small stature',                                 '375' ),
        ( 'Smite evil',                                    '_SMITE_EVIL' ),
        ( 'Smite good',                                    '_SMITE_GOOD' ),
        ( 'Sneak attack (+1d6)',                           '_SNEAK_ATTACK' ),
        ( 'Sneak attack (+2d6)',                           '345' ),
        ( 'Sneak attack (+3d6)',                           '346' ),
        ( 'Sneak attack (+4d6)',                           '347' ),
        ( 'Sneak attack (+5d6)',                           '348' ),
        ( 'Sneak attack (+6d6)',                           '349' ),
        ( 'Sneak attack (+7d6)',                           '350' ),
        ( 'Sneak attack (+8d6)',                           '351' ),
        ( 'Sneak attack (+9d6)',                           '352' ),
        ( 'Sneak attack (+10d6)',                          '353' ),
        ( 'Sneak attack (+11d6)',                          '1032' ),
        ( 'Sneak attack (+12d6)',                          '1033' ),
        ( 'Sneak attack (+13d6)',                          '1034' ),
        ( 'Sneak attack (+14d6)',                          '1035' ),
        ( 'Sneak attack (+15d6)',                          '1036' ),
        ( 'Sneak attack (+16d6)',                          '1037' ),
        ( 'Sneak attack (+17d6)',                          '1038' ),
        ( 'Sneak attack (+18d6)',                          '1039' ),
        ( 'Sneak attack (+19d6)',                          '1040' ),
        ( 'Sneak attack (+20d6)',                          '1041' ),
        ( 'Sneak attack, blackguard (+1d6)',               '_BLACKGUARD_SNEAK_ATTACK_1D6' ),
        ( 'Sneak attack, blackguard (+2d6)',               '_BLACKGUARD_SNEAK_ATTACK_2D6' ),
        ( 'Sneak attack, blackguard (+3d6)',               '_BLACKGUARD_SNEAK_ATTACK_3D6' ),
        ( 'Sneak attack, blackguard (+4d6)',               '_BLACKGUARD_SNEAK_ATTACK_4D6' ),
        ( 'Sneak attack, blackguard (+5d6)',               '_BLACKGUARD_SNEAK_ATTACK_5D6' ),
        ( 'Sneak attack, blackguard (+6d6)',               '_BLACKGUARD_SNEAK_ATTACK_6D6' ),
        ( 'Sneak attack, blackguard (+7d6)',               '_BLACKGUARD_SNEAK_ATTACK_7D6' ),
        ( 'Sneak attack, blackguard (+8d6)',               '_BLACKGUARD_SNEAK_ATTACK_8D6' ),
        ( 'Sneak attack, blackguard (+9d6)',               '_BLACKGUARD_SNEAK_ATTACK_9D6' ),
        ( 'Sneak attack, blackguard (+10d6)',              '_BLACKGUARD_SNEAK_ATTACK_10D6' ),
        ( 'Sneak attack, blackguard (+11d6)',              '_BLACKGUARD_SNEAK_ATTACK_11D6' ),
        ( 'Sneak attack, blackguard (+12d6)',              '_BLACKGUARD_SNEAK_ATTACK_12D6' ),
        ( 'Sneak attack, blackguard (+13d6)',              '_BLACKGUARD_SNEAK_ATTACK_13D6' ),
        ( 'Sneak attack, blackguard (+14d6)',              '_BLACKGUARD_SNEAK_ATTACK_14D6' ),
        ( 'Sneak attack, blackguard (+15d6)',              '_BLACKGUARD_SNEAK_ATTACK_15D6' ),
        ( 'Still mind',                                    '_STILL_MIND' ),
        ( 'Stonecunning',                                  '_STONECUNNING' ),
        ( 'Summon familiar',                               '_SUMMON_FAMILIAR' ),
        ( 'Summon greater undead (pale master)',           '_SUMMON_GREATER_UNDEAD' ),
        ( 'Summon mount',                                  '_PALADIN_SUMMON_MOUNT' ),
        ( 'Summon shadow (shadowdancer)',                  '_SUMMON_SHADOW' ),
        ( 'Summon undead (pale master)',                   '_SUMMON_UNDEAD' ),
        ( 'Superior weapon focus',                         '_SUPERIOR_WEAPON_FOCUS' ),
        ( 'Tough as bone',                                 '_TOUGH_AS_BONE' ),
        ( 'Trackless step',                                '_TRACKLESS_STEP' ),
        ( 'Turn undead',                                   '_TURN_UNDEAD' ),
        ( 'Tymora''s smile',                               '_TYMORAS_SMILE' ),
        ( 'Uncanny dodge 1',                               '_UNCANNY_DODGE_1' ),
        ( 'Uncanny dodge 2',                               '_UNCANNY_DODGE_2' ),
        ( 'Uncanny dodge 3',                               '_UNCANNY_DODGE_3' ),
        ( 'Uncanny dodge 4',                               '_UNCANNY_DODGE_4' ),
        ( 'Uncanny dodge 5',                               '_UNCANNY_DODGE_5' ),
        ( 'Uncanny dodge 6',                               '_UNCANNY_DODGE_6' ),
        ( 'Undead graft 1',                                '_UNDEAD_GRAFT_1' ),
        ( 'Undead graft 2',                                '_UNDEAD_GRAFT_2' ),
        ( 'Use poison',                                    '_USE_POISON' ),
        ( 'Venom immunity',                                '_VENOM_IMMUNITY' ),
        ( 'Weapon focus (creature)',                       '_WEAPON_FOCUS_CREATURE' ),
        ( 'Weapon of choice (bastard sword)',              '_WEAPON_OF_CHOICE_BASTARDSWORD' ),
        ( 'Weapon of choice (battle axe)',                 '_WEAPON_OF_CHOICE_BATTLEAXE' ),
        ( 'Weapon of choice (club)',                       '_WEAPON_OF_CHOICE_CLUB' ),
        ( 'Weapon of choice (dagger)',                     '_WEAPON_OF_CHOICE_DAGGER' ),
        ( 'Weapon of choice (dire mace)',                  '_WEAPON_OF_CHOICE_DIREMACE' ),
        ( 'Weapon of choice (double axe)',                 '_WEAPON_OF_CHOICE_DOUBLEAXE' ),
        ( 'Weapon of choice (dwarven waraxe)',             '_WEAPON_OF_CHOICE_DWAXE' ),
        ( 'Weapon of choice (greataxe)',                   '_WEAPON_OF_CHOICE_GREATAXE' ),
        ( 'Weapon of choice (greatsword)',                 '_WEAPON_OF_CHOICE_GREATSWORD' ),
        ( 'Weapon of choice (halberd)',                    '_WEAPON_OF_CHOICE_HALBERD' ),
        ( 'Weapon of choice (hand axe)',                   '_WEAPON_OF_CHOICE_HANDAXE' ),
        ( 'Weapon of choice (heavy flail)',                '_WEAPON_OF_CHOICE_HEAVYFLAIL' ),
        ( 'Weapon of choice (kama)',                       '_WEAPON_OF_CHOICE_KAMA' ),
        ( 'Weapon of choice (katana)',                     '_WEAPON_OF_CHOICE_KATANA' ),
        ( 'Weapon of choice (kukri)',                      '_WEAPON_OF_CHOICE_KUKRI' ),
        ( 'Weapon of choice (light flail)',                '_WEAPON_OF_CHOICE_LIGHTFLAIL' ),
        ( 'Weapon of choice (light hammer)',               '_WEAPON_OF_CHOICE_LIGHTHAMMER' ),
        ( 'Weapon of choice (long sword)',                 '_WEAPON_OF_CHOICE_LONGSWORD' ),
        ( 'Weapon of choice (mace)',                       '_WEAPON_OF_CHOICE_LIGHTMACE' ),
        ( 'Weapon of choice (morningstar)',                '_WEAPON_OF_CHOICE_MORNINGSTAR' ),
        ( 'Weapon of choice (quarterstaff)',               '_WEAPON_OF_CHOICE_QUARTERSTAFF' ),
        ( 'Weapon of choice (rapier)',                     '_WEAPON_OF_CHOICE_RAPIER' ),
        ( 'Weapon of choice (scimitar)',                   '_WEAPON_OF_CHOICE_SCIMITAR' ),
        ( 'Weapon of choice (scythe)',                     '_WEAPON_OF_CHOICE_SCYTHE' ),
        ( 'Weapon of choice (short sword)',                '_WEAPON_OF_CHOICE_SHORTSWORD' ),
        ( 'Weapon of choice (sickle)',                     '_WEAPON_OF_CHOICE_SICKLE' ),
        ( 'Weapon of choice (spear)',                      '_WEAPON_OF_CHOICE_SHORTSPEAR' ),
        ( 'Weapon of choice (trident)',                    '_WEAPON_OF_CHOICE_TRIDENT' ),
        ( 'Weapon of choice (two-bladed sword)',           '_WEAPON_OF_CHOICE_TWOBLADEDSWORD' ),
        ( 'Weapon of choice (war hammer)',                 '_WEAPON_OF_CHOICE_WARHAMMER' ),
        ( 'Weapon of choice (whip)',                       '_WEAPON_OF_CHOICE_WHIP' ),
        ( 'Weapon proficiency (creature)',                 '_WEAPON_PROFICIENCY_CREATURE' ),
        ( 'Weapon proficiency (druid)',                    '_WEAPON_PROFICIENCY_DRUID' ),
        ( 'Weapon proficiency (elf)',                      '_WEAPON_PROFICIENCY_ELF' ),
        ( 'Weapon proficiency (monk)',                     '_WEAPON_PROFICIENCY_MONK' ),
        ( 'Weapon proficiency (rogue)',                    '_WEAPON_PROFICIENCY_ROGUE' ),
        ( 'Weapon proficiency (wizard)',                   '_WEAPON_PROFICIENCY_WIZARD' ),
        ( 'Weapon specialization (creature)',              '_WEAPON_SPECIALIZATION_CREATURE' ),
        ( 'Wholeness of body',                             '_WHOLENESS_OF_BODY' ),
        ( 'Wild shape (1x per day)',                       '_WILD_SHAPE' ),
        ( 'Wild shape (2x per day)',                       '335' ),
        ( 'Wild shape (3x per day)',                       '336' ),
        ( 'Wild shape (4x per day)',                       '337' ),
        ( 'Wild shape (5x per day)',                       '338' ),
        ( 'Wild shape (6+x per day)',                      '339' ),
        ( 'Woodland stride',                               '_WOODLAND_STRIDE' ),
        // The trailing info row:
        ( nil, 'FEAT' )
      );
    // The NWScript symbolic constants for "special" (class/racial/monster) feats.
    FEAT_EPIC: array[0..431] of StringPair =
      ( ( 'Armor skin',                                    '_ARMOR_SKIN' ),
        ( 'Automatice quicken spell I',                    '_AUTOMATIC_QUICKEN_1' ),
        ( 'Automatice quicken spell II',                   '_AUTOMATIC_QUICKEN_2' ),
        ( 'Automatice quicken spell III',                  '_AUTOMATIC_QUICKEN_3' ),
        ( 'Automatice silent spell I',                     '_AUTOMATIC_SILENT_SPELL_1' ),
        ( 'Automatice silent spell II',                    '_AUTOMATIC_SILENT_SPELL_2' ),
        ( 'Automatice silent spell III',                   '_AUTOMATIC_SILENT_SPELL_3' ),
        ( 'Automatice still spell I',                      '_AUTOMATIC_STILL_SPELL_1' ),
        ( 'Automatice still spell II',                     '_AUTOMATIC_STILL_SPELL_2' ),
        ( 'Automatice still spell III',                    '_AUTOMATIC_STILL_SPELL_3' ),
        ( 'Bane of enemies',                               '_BANE_OF_ENEMIES' ),
        ( 'Blinding speed',                                '_BLINDING_SPEED' ),
        ( 'Construct shape',                               '_CONSTRUCT_SHAPE' ),
        ( 'Devastating critical (bastard sword)',          '_DEVASTATING_CRITICAL_BASTARDSWORD' ),
        ( 'Devastating critical (battle axe)',             '_DEVASTATING_CRITICAL_BATTLEAXE' ),
        ( 'Devastating critical (club)',                   '_DEVASTATING_CRITICAL_CLUB' ),
        ( 'Devastating critical (creature)',               '_DEVASTATING_CRITICAL_CREATURE' ),
        ( 'Devastating critical (dagger)',                 '_DEVASTATING_CRITICAL_DAGGER' ),
        ( 'Devastating critical (dart)',                   '_DEVASTATING_CRITICAL_DART' ),
        ( 'Devastating critical (dire mace)',              '_DEVASTATING_CRITICAL_DIREMACE' ),
        ( 'Devastating critical (double axe)',             '_DEVASTATING_CRITICAL_DOUBLEAXE' ),
        ( 'Devastating critical (dwarven waraxe)',         '_DEVASTATING_CRITICAL_DWAXE' ),
        ( 'Devastating critical (greataxe)',               '_DEVASTATING_CRITICAL_GREATAXE' ),
        ( 'Devastating critical (greatsword)',             '_DEVASTATING_CRITICAL_GREATSWORD' ),
        ( 'Devastating critical (halberd)',                '_DEVASTATING_CRITICAL_HALBERD' ),
        ( 'Devastating critical (handaxe)',                '_DEVASTATING_CRITICAL_HANDAXE' ),
        ( 'Devastating critical (heavy crossbow)',         '_DEVASTATING_CRITICAL_HEAVYCROSSBOW' ),
        ( 'Devastating critical (heavy flail)',            '_DEVASTATING_CRITICAL_HEAVYFLAIL' ),
        ( 'Devastating critical (kama)',                   '_DEVASTATING_CRITICAL_KAMA' ),
        ( 'Devastating critical (katana)',                 '_DEVASTATING_CRITICAL_KATANA' ),
        ( 'Devastating critical (kukri)',                  '_DEVASTATING_CRITICAL_KUKRI' ),
        ( 'Devastating critical (light crossbow)',         '_DEVASTATING_CRITICAL_LIGHTCROSSBOW' ),
        ( 'Devastating critical (light flail)',            '_DEVASTATING_CRITICAL_LIGHTFLAIL' ),
        ( 'Devastating critical (light hammer)',           '_DEVASTATING_CRITICAL_LIGHTHAMMER' ),
        ( 'Devastating critical (longbow)',                '_DEVASTATING_CRITICAL_LONGBOW' ),
        ( 'Devastating critical (long sword)',             '_DEVASTATING_CRITICAL_LONGSWORD' ),
        ( 'Devastating critical (mace)',                   '_DEVASTATING_CRITICAL_LIGHTMACE' ),
        ( 'Devastating critical (morningstar)',            '_DEVASTATING_CRITICAL_MORNINGSTAR' ),
        ( 'Devastating critical (quarterstaff)',           '_DEVASTATING_CRITICAL_QUARTERSTAFF' ),
        ( 'Devastating critical (rapier)',                 '_DEVASTATING_CRITICAL_RAPIER' ),
        ( 'Devastating critical (scimitar)',               '_DEVASTATING_CRITICAL_SCIMITAR' ),
        ( 'Devastating critical (scythe)',                 '_DEVASTATING_CRITICAL_SCYTHE' ),
        ( 'Devastating critical (short sword)',            '_DEVASTATING_CRITICAL_SHORTSWORD' ),
        ( 'Devastating critical (shortbow)',               '_DEVASTATING_CRITICAL_SHORTBOW' ),
        ( 'Devastating critical (shuriken)',               '_DEVASTATING_CRITICAL_SHURIKEN' ),
        ( 'Devastating critical (sickle)',                 '_DEVASTATING_CRITICAL_SICKLE' ),
        ( 'Devastating critical (sling)',                  '_DEVASTATING_CRITICAL_SLING' ),
        ( 'Devastating critical (spear)',                  '_DEVASTATING_CRITICAL_SHORTSPEAR' ),
        ( 'Devastating critical (throwing axe)',           '_DEVASTATING_CRITICAL_THROWINGAXE' ),
        ( 'Devastating critical (trident)',                '_DEVASTATING_CRITICAL_TRIDENT' ),
        ( 'Devastating critical (two-bladed sword)',       '_DEVASTATING_CRITICAL_TWOBLADEDSWORD' ),
        ( 'Devastating critical (unarmed)',                '_DEVASTATING_CRITICAL_UNARMED' ),
        ( 'Devastating critical (war hammer)',             '_DEVASTATING_CRITICAL_WARHAMMER' ),
        ( 'Devastating critical (whip)',                   '_DEVASTATING_CRITICAL_WHIP' ),
        ( 'Dragon shape',                                  '_WILD_SHAPE_DRAGON' ),
        ( 'Energy resistance, acid 1',                     '_ENERGY_RESISTANCE_ACID_1' ),
        ( 'Energy resistance, acid 2',                     '_ENERGY_RESISTANCE_ACID_2' ),
        ( 'Energy resistance, acid 3',                     '_ENERGY_RESISTANCE_ACID_3' ),
        ( 'Energy resistance, acid 4',                     '_ENERGY_RESISTANCE_ACID_4' ),
        ( 'Energy resistance, acid 5',                     '_ENERGY_RESISTANCE_ACID_5' ),
        ( 'Energy resistance, acid 6',                     '_ENERGY_RESISTANCE_ACID_6' ),
        ( 'Energy resistance, acid 7',                     '_ENERGY_RESISTANCE_ACID_7' ),
        ( 'Energy resistance, acid 8',                     '_ENERGY_RESISTANCE_ACID_8' ),
        ( 'Energy resistance, acid 9',                     '_ENERGY_RESISTANCE_ACID_9' ),
        ( 'Energy resistance, acid 10',                    '_ENERGY_RESISTANCE_ACID_10' ),
        ( 'Energy resistance, cold 1',                     '_ENERGY_RESISTANCE_COLD_1' ),
        ( 'Energy resistance, cold 2',                     '_ENERGY_RESISTANCE_COLD_2' ),
        ( 'Energy resistance, cold 3',                     '_ENERGY_RESISTANCE_COLD_3' ),
        ( 'Energy resistance, cold 4',                     '_ENERGY_RESISTANCE_COLD_4' ),
        ( 'Energy resistance, cold 5',                     '_ENERGY_RESISTANCE_COLD_5' ),
        ( 'Energy resistance, cold 6',                     '_ENERGY_RESISTANCE_COLD_6' ),
        ( 'Energy resistance, cold 7',                     '_ENERGY_RESISTANCE_COLD_7' ),
        ( 'Energy resistance, cold 8',                     '_ENERGY_RESISTANCE_COLD_8' ),
        ( 'Energy resistance, cold 9',                     '_ENERGY_RESISTANCE_COLD_9' ),
        ( 'Energy resistance, cold 10',                    '_ENERGY_RESISTANCE_COLD_10' ),
        ( 'Energy resistance, electrical 1',               '_ENERGY_RESISTANCE_ELECTRICAL_1' ),
        ( 'Energy resistance, electrical 2',               '_ENERGY_RESISTANCE_ELECTRICAL_2' ),
        ( 'Energy resistance, electrical 3',               '_ENERGY_RESISTANCE_ELECTRICAL_3' ),
        ( 'Energy resistance, electrical 4',               '_ENERGY_RESISTANCE_ELECTRICAL_4' ),
        ( 'Energy resistance, electrical 5',               '_ENERGY_RESISTANCE_ELECTRICAL_5' ),
        ( 'Energy resistance, electrical 6',               '_ENERGY_RESISTANCE_ELECTRICAL_6' ),
        ( 'Energy resistance, electrical 7',               '_ENERGY_RESISTANCE_ELECTRICAL_7' ),
        ( 'Energy resistance, electrical 8',               '_ENERGY_RESISTANCE_ELECTRICAL_8' ),
        ( 'Energy resistance, electrical 9',               '_ENERGY_RESISTANCE_ELECTRICAL_9' ),
        ( 'Energy resistance, electrical 10',              '_ENERGY_RESISTANCE_ELECTRICAL_10' ),
        ( 'Energy resistance, fire 1',                     '_ENERGY_RESISTANCE_FIRE_1' ),
        ( 'Energy resistance, fire 2',                     '_ENERGY_RESISTANCE_FIRE_2' ),
        ( 'Energy resistance, fire 3',                     '_ENERGY_RESISTANCE_FIRE_3' ),
        ( 'Energy resistance, fire 4',                     '_ENERGY_RESISTANCE_FIRE_4' ),
        ( 'Energy resistance, fire 5',                     '_ENERGY_RESISTANCE_FIRE_5' ),
        ( 'Energy resistance, fire 6',                     '_ENERGY_RESISTANCE_FIRE_6' ),
        ( 'Energy resistance, fire 7',                     '_ENERGY_RESISTANCE_FIRE_7' ),
        ( 'Energy resistance, fire 8',                     '_ENERGY_RESISTANCE_FIRE_8' ),
        ( 'Energy resistance, fire 9',                     '_ENERGY_RESISTANCE_FIRE_9' ),
        ( 'Energy resistance, fire 10',                    '_ENERGY_RESISTANCE_FIRE_10' ),
        ( 'Energy resistance, sonic 1',                    '_ENERGY_RESISTANCE_SONIC_1' ),
        ( 'Energy resistance, sonic 2',                    '_ENERGY_RESISTANCE_SONIC_2' ),
        ( 'Energy resistance, sonic 3',                    '_ENERGY_RESISTANCE_SONIC_3' ),
        ( 'Energy resistance, sonic 4',                    '_ENERGY_RESISTANCE_SONIC_4' ),
        ( 'Energy resistance, sonic 5',                    '_ENERGY_RESISTANCE_SONIC_5' ),
        ( 'Energy resistance, sonic 6',                    '_ENERGY_RESISTANCE_SONIC_6' ),
        ( 'Energy resistance, sonic 7',                    '_ENERGY_RESISTANCE_SONIC_7' ),
        ( 'Energy resistance, sonic 8',                    '_ENERGY_RESISTANCE_SONIC_8' ),
        ( 'Energy resistance, sonic 9',                    '_ENERGY_RESISTANCE_SONIC_9' ),
        ( 'Energy resistance, sonic 10',                   '_ENERGY_RESISTANCE_SONIC_10' ),
        ( 'Epic arcane archer',                            '_ARCANE_ARCHER' ),
        ( 'Epic assassin',                                 '_ASSASSIN' ),
        ( 'Epic barbarian',                                '_BARBARIAN' ),
        ( 'Epic bard',                                     '_BARD' ),
        ( 'Epic blackguard',                               '_BLACKGUARD' ),
        ( 'Epic champion of Torm',                         '_DIVINE_CHAMPION' ),
        ( 'Epic character',                                '_CHARACTER' ),
        ( 'Epic cleric',                                   '_CLERIC' ),
        ( 'Epic damage reduction I (3/-)',                 '_DAMAGE_REDUCTION_3' ),
        ( 'Epic damage reduction II (6/-)',                '_DAMAGE_REDUCTION_6' ),
        ( 'Epic damage reduction III (9/-)',               '_DAMAGE_REDUCTION_9' ),
        ( 'Epic dodge',                                    '_DODGE' ),
        ( 'Epic druid',                                    '_DRUID' ),
        ( 'Epic dwarven defender',                         '_DWARVEN_DEFENDER' ),
        ( 'Epic fiendish servant',                         '_EPIC_FIEND' ),
        ( 'Epic fighter',                                  '_FIGHTER' ),
        ( 'Epic fortitude',                                '_FORTITUDE' ),
        ( 'Epic monk',                                     '_MONK' ),
        ( 'Epic paladin',                                  '_PALADIN' ),
        ( 'Epic pale master',                              '_PALE_MASTER' ),
        ( 'Epic prowess',                                  '_PROWESS' ),
        ( 'Epic ranger',                                   '_RANGER' ),
        ( 'Epic red dragon disciple',                      '_RED_DRAGON_DISC' ),
        ( 'Epic reflexes',                                 '_REFLEXES' ),
        ( 'Epic reputation',                               '_REPUTATION' ),
        ( 'Epic rogue',                                    '_ROGUE' ),
        ( 'Epic shadowdancer',                             '_SHADOWDANCER' ),
        ( 'Epic shadowlord',                               '_EPIC_SHADOWLORD' ),
        ( 'Epic shifter',                                  '_SHIFTER' ),
        ( 'Epic skill focus (animal empathy)',             '_SKILL_FOCUS_ANIMAL_EMPATHY' ),
        ( 'Epic skill focus (appraise)',                   '_SKILL_FOCUS_APPRAISE' ),
        ( 'Epic skill focus (bluff)',                      '_SKILL_FOCUS_BLUFF' ),
        ( 'Epic skill focus (concentration)',              '_SKILL_FOCUS_CONCENTRATION' ),
        ( 'Epic skill focus (craft armor)',                '_SKILL_FOCUS_CRAFT_ARMOR' ),
        ( 'Epic skill focus (craft trap)',                 '_SKILL_FOCUS_CRAFT_TRAP' ),
        ( 'Epic skill focus (craft weapon)',               '_SKILL_FOCUS_CRAFT_WEAPON' ),
        ( 'Epic skill focus (disable trap)',               '_SKILL_FOCUS_DISABLETRAP' ),
        ( 'Epic skill focus (discipline)',                 '_SKILL_FOCUS_DISCIPLINE' ),
        ( 'Epic skill focus (heal)',                       '_SKILL_FOCUS_HEAL' ),
        ( 'Epic skill focus (hide)',                       '_SKILL_FOCUS_HIDE' ),
        ( 'Epic skill focus (intimidate)',                 '_SKILL_FOCUS_INTIMIDATE' ),
        ( 'Epic skill focus (listen)',                     '_SKILL_FOCUS_LISTEN' ),
        ( 'Epic skill focus (lore)',                       '_SKILL_FOCUS_LORE' ),
        ( 'Epic skill focus (move silently)',              '_SKILL_FOCUS_MOVESILENTLY' ),
        ( 'Epic skill focus (open lock)',                  '_SKILL_FOCUS_OPENLOCK' ),
        ( 'Epic skill focus (parry)',                      '_SKILL_FOCUS_PARRY' ),
        ( 'Epic skill focus (perform)',                    '_SKILL_FOCUS_PERFORM' ),
        ( 'Epic skill focus (persuade)',                   '_SKILL_FOCUS_PERSUADE' ),
        ( 'Epic skill focus (pick pocket)',                '_SKILL_FOCUS_PICKPOCKET' ),
        ( 'Epic skill focus (search)',                     '_SKILL_FOCUS_SEARCH' ),
        ( 'Epic skill focus (set trap)',                   '_SKILL_FOCUS_SETTRAP' ),
        ( 'Epic skill focus (spellcraft)',                 '_SKILL_FOCUS_SPELLCRAFT' ),
        ( 'Epic skill focus (spot)',                       '_SKILL_FOCUS_SPOT' ),
        ( 'Epic skill focus (taunt)',                      '_SKILL_FOCUS_TAUNT' ),
        ( 'Epic skill focus (tumble)',                     '_SKILL_FOCUS_TUMBLE' ),
        ( 'Epic skill focus (use magic device)',           '_SKILL_FOCUS_USEMAGICDEVICE' ),
        ( 'Epic sorcerer',                                 '_SORCERER' ),
        ( 'Epic spell: dragon knight',                     '_SPELL_DRAGON_KNIGHT' ),
        ( 'Epic spell: epic mage armor',                   '_SPELL_MAGE_ARMOUR' ),
        ( 'Epic spell: epic warding',                      '_SPELL_EPIC_WARDING' ),
        ( 'Epic spell: greater ruin',                      '_SPELL_RUIN' ),
        ( 'Epic spell: hellball',                          '_SPELL_HELLBALL' ),
        ( 'Epic spell: mummy dust',                        '_SPELL_MUMMY_DUST' ),
        ( 'Epic spell focus (abjuration)',                 '_SPELL_FOCUS_ABJURATION' ),
        ( 'Epic spell focus (conjuration)',                '_SPELL_FOCUS_CONJURATION' ),
        ( 'Epic spell focus (divination)',                 '_SPELL_FOCUS_DIVINATION' ),
        ( 'Epic spell focus (enchantment)',                '_SPELL_FOCUS_ENCHANTMENT' ),
        ( 'Epic spell focus (evocation)',                  '_SPELL_FOCUS_EVOCATION' ),
        ( 'Epic spell focus (illusion)',                   '_SPELL_FOCUS_ILLUSION' ),
        ( 'Epic spell focus (necromancy)',                 '_SPELL_FOCUS_NECROMANCY' ),
        ( 'Epic spell focus (transmutation)',              '_SPELL_FOCUS_TRANSMUTATION' ),
        ( 'Epic spell penetration',                        '_SPELL_PENETRATION' ),
        ( 'Epic toughness 1',                              '_TOUGHNESS_1' ),
        ( 'Epic toughness 2',                              '_TOUGHNESS_2' ),
        ( 'Epic toughness 3',                              '_TOUGHNESS_3' ),
        ( 'Epic toughness 4',                              '_TOUGHNESS_4' ),
        ( 'Epic toughness 5',                              '_TOUGHNESS_5' ),
        ( 'Epic toughness 6',                              '_TOUGHNESS_6' ),
        ( 'Epic toughness 7',                              '_TOUGHNESS_7' ),
        ( 'Epic toughness 8',                              '_TOUGHNESS_8' ),
        ( 'Epic toughness 9',                              '_TOUGHNESS_9' ),
        ( 'Epic toughness 10',                             '_TOUGHNESS_10' ),
        ( 'Epic weapon focus (bastard sword)',             '_WEAPON_FOCUS_BASTARDSWORD' ),
        ( 'Epic weapon focus (battle axe)',                '_WEAPON_FOCUS_BATTLEAXE' ),
        ( 'Epic weapon focus (club)',                      '_WEAPON_FOCUS_CLUB' ),
        ( 'Epic weapon focus (creature)',                  '_WEAPON_FOCUS_CREATURE' ),
        ( 'Epic weapon focus (dagger)',                    '_WEAPON_FOCUS_DAGGER' ),
        ( 'Epic weapon focus (dart)',                      '_WEAPON_FOCUS_DART' ),
        ( 'Epic weapon focus (dire mace)',                 '_WEAPON_FOCUS_DIREMACE' ),
        ( 'Epic weapon focus (double axe)',                '_WEAPON_FOCUS_DOUBLEAXE' ),
        ( 'Epic weapon focus (dwarven waraxe)',            '_WEAPON_FOCUS_DWAXE' ),
        ( 'Epic weapon focus (greataxe)',                  '_WEAPON_FOCUS_GREATAXE' ),
        ( 'Epic weapon focus (greatsword)',                '_WEAPON_FOCUS_GREATSWORD' ),
        ( 'Epic weapon focus (halberd)',                   '_WEAPON_FOCUS_HALBERD' ),
        ( 'Epic weapon focus (hand axe)',                  '_WEAPON_FOCUS_HANDAXE' ),
        ( 'Epic weapon focus (heavy crossbow)',            '_WEAPON_FOCUS_HEAVYCROSSBOW' ),
        ( 'Epic weapon focus (heavy flail)',               '_WEAPON_FOCUS_HEAVYFLAIL' ),
        ( 'Epic weapon focus (kama)',                      '_WEAPON_FOCUS_KAMA' ),
        ( 'Epic weapon focus (katana)',                    '_WEAPON_FOCUS_KATANA' ),
        ( 'Epic weapon focus (kukri)',                     '_WEAPON_FOCUS_KUKRI' ),
        ( 'Epic weapon focus (light crossbow)',            '_WEAPON_FOCUS_LIGHTCROSSBOW' ),
        ( 'Epic weapon focus (light flail)',               '_WEAPON_FOCUS_LIGHTFLAIL' ),
        ( 'Epic weapon focus (light hammer)',              '_WEAPON_FOCUS_LIGHTHAMMER' ),
        ( 'Epic weapon focus (longbow)',                   '_WEAPON_FOCUS_LONGBOW' ),
        ( 'Epic weapon focus (long sword)',                '_WEAPON_FOCUS_LONGSWORD' ),
        ( 'Epic weapon focus (mace)',                      '_WEAPON_FOCUS_LIGHTMACE' ),
        ( 'Epic weapon focus (morningstar)',               '_WEAPON_FOCUS_MORNINGSTAR' ),
        ( 'Epic weapon focus (quarterstaff)',              '_WEAPON_FOCUS_QUARTERSTAFF' ),
        ( 'Epic weapon focus (rapier)',                    '_WEAPON_FOCUS_RAPIER' ),
        ( 'Epic weapon focus (scimitar)',                  '_WEAPON_FOCUS_SCIMITAR' ),
        ( 'Epic weapon focus (scythe)',                    '_WEAPON_FOCUS_SCYTHE' ),
        ( 'Epic weapon focus (short sword)',               '_WEAPON_FOCUS_SHORTSWORD' ),
        ( 'Epic weapon focus (shortbow)',                  '_WEAPON_FOCUS_SHORTBOW' ),
        ( 'Epic weapon focus (shuriken)',                  '_WEAPON_FOCUS_SHURIKEN' ),
        ( 'Epic weapon focus (sickle)',                    '_WEAPON_FOCUS_SICKLE' ),
        ( 'Epic weapon focus (sling)',                     '_WEAPON_FOCUS_SLING' ),
        ( 'Epic weapon focus (spear)',                     '_WEAPON_FOCUS_SHORTSPEAR' ),
        ( 'Epic weapon focus (throwing axe)',              '_WEAPON_FOCUS_THROWINGAXE' ),
        ( 'Epic weapon focus (trident)',                   '_WEAPON_FOCUS_TRIDENT' ),
        ( 'Epic weapon focus (two-bladed sword)',          '_WEAPON_FOCUS_TWOBLADEDSWORD' ),
        ( 'Epic weapon focus (unarmed)',                   '_WEAPON_FOCUS_UNARMED' ),
        ( 'Epic weapon focus (war hammer)',                '_WEAPON_FOCUS_WARHAMMER' ),
        ( 'Epic weapon focus (whip)',                      '_WEAPON_FOCUS_WHIP' ),
        ( 'Epic weapon master',                            '_WEAPON_MASTER' ),
        ( 'Epic weapon specialization (bastard sword)',    '_WEAPON_SPECIALIZATION_BASTARDSWORD' ),
        ( 'Epic weapon specialization (battle axe)',       '_WEAPON_SPECIALIZATION_BATTLEAXE' ),
        ( 'Epic weapon specialization (club)',             '_WEAPON_SPECIALIZATION_CLUB' ),
        ( 'Epic weapon specialization (creature)',         '_WEAPON_SPECIALIZATION_CREATURE' ),
        ( 'Epic weapon specialization (dagger)',           '_WEAPON_SPECIALIZATION_DAGGER' ),
        ( 'Epic weapon specialization (dart)',             '_WEAPON_SPECIALIZATION_DART' ),
        ( 'Epic weapon specialization (dire mace)',        '_WEAPON_SPECIALIZATION_DIREMACE' ),
        ( 'Epic weapon specialization (double axe)',       '_WEAPON_SPECIALIZATION_DOUBLEAXE' ),
        ( 'Epic weapon specialization (dwarven waraxe)',   '_WEAPON_SPECIALIZATION_DWAXE' ),
        ( 'Epic weapon specialization (greataxe)',         '_WEAPON_SPECIALIZATION_GREATAXE' ),
        ( 'Epic weapon specialization (greatsword)',       '_WEAPON_SPECIALIZATION_GREATSWORD' ),
        ( 'Epic weapon specialization (halberd)',          '_WEAPON_SPECIALIZATION_HALBERD' ),
        ( 'Epic weapon specialization (hand axe)',         '_WEAPON_SPECIALIZATION_HANDAXE' ),
        ( 'Epic weapon specialization (heavy crossbow)',   '_WEAPON_SPECIALIZATION_HEAVYCROSSBOW' ),
        ( 'Epic weapon specialization (heavy flail)',      '_WEAPON_SPECIALIZATION_HEAVYFLAIL' ),
        ( 'Epic weapon specialization (kama)',             '_WEAPON_SPECIALIZATION_KAMA' ),
        ( 'Epic weapon specialization (katana)',           '_WEAPON_SPECIALIZATION_KATANA' ),
        ( 'Epic weapon specialization (kukri)',            '_WEAPON_SPECIALIZATION_KUKRI' ),
        ( 'Epic weapon specialization (light crossbow)',   '_WEAPON_SPECIALIZATION_LIGHTCROSSBOW' ),
        ( 'Epic weapon specialization (light flail)',      '_WEAPON_SPECIALIZATION_LIGHTFLAIL' ),
        ( 'Epic weapon specialization (light hammer)',     '_WEAPON_SPECIALIZATION_LIGHTHAMMER' ),
        ( 'Epic weapon specialization (longbow)',          '_WEAPON_SPECIALIZATION_LONGBOW' ),
        ( 'Epic weapon specialization (long sword)',       '_WEAPON_SPECIALIZATION_LONGSWORD' ),
        ( 'Epic weapon specialization (mace)',             '_WEAPON_SPECIALIZATION_LIGHTMACE' ),
        ( 'Epic weapon specialization (morningstar)',      '_WEAPON_SPECIALIZATION_MORNINGSTAR' ),
        ( 'Epic weapon specialization (quarterstaff)',     '_WEAPON_SPECIALIZATION_QUARTERSTAFF' ),
        ( 'Epic weapon specialization (rapier)',           '_WEAPON_SPECIALIZATION_RAPIER' ),
        ( 'Epic weapon specialization (scimitar)',         '_WEAPON_SPECIALIZATION_SCIMITAR' ),
        ( 'Epic weapon specialization (scythe)',           '_WEAPON_SPECIALIZATION_SCYTHE' ),
        ( 'Epic weapon specialization (short sword)',      '_WEAPON_SPECIALIZATION_SHORTSWORD' ),
        ( 'Epic weapon specialization (shortbow)',         '_WEAPON_SPECIALIZATION_SHORTBOW' ),
        ( 'Epic weapon specialization (shuriken)',         '_WEAPON_SPECIALIZATION_SHURIKEN' ),
        ( 'Epic weapon specialization (sickle)',           '_WEAPON_SPECIALIZATION_SICKLE' ),
        ( 'Epic weapon specialization (sling)',            '_WEAPON_SPECIALIZATION_SLING' ),
        ( 'Epic weapon specialization (spear)',            '_WEAPON_SPECIALIZATION_SHORTSPEAR' ),
        ( 'Epic weapon specialization (throwing axe)',     '_WEAPON_SPECIALIZATION_THROWINGAXE' ),
        ( 'Epic weapon specialization (trident)',          '_WEAPON_SPECIALIZATION_TRIDENT' ),
        ( 'Epic weapon specialization (two-bladed sword)', '_WEAPON_SPECIALIZATION_TWOBLADEDSWORD' ),
        ( 'Epic weapon specialization (unarmed)',          '_WEAPON_SPECIALIZATION_UNARMED' ),
        ( 'Epic weapon specialization (war hammer)',       '_WEAPON_SPECIALIZATION_WARHAMMER' ),
        ( 'Epic weapon specialization (whip)',             '_WEAPON_SPECIALIZATION_WHIP' ),
        ( 'Epic will',                                     '_WILL' ),
        ( 'Epic wizard',                                   '_WIZARD' ),
        ( 'Great charisma 1',                              '_GREAT_CHARISMA_1' ),
        ( 'Great charisma 2',                              '_GREAT_CHARISMA_2' ),
        ( 'Great charisma 3',                              '_GREAT_CHARISMA_3' ),
        ( 'Great charisma 4',                              '_GREAT_CHARISMA_4' ),
        ( 'Great charisma 5',                              '_GREAT_CHARISMA_5' ),
        ( 'Great charisma 6',                              '_GREAT_CHARISMA_6' ),
        ( 'Great charisma 7',                              '_GREAT_CHARISMA_7' ),
        ( 'Great charisma 8',                              '_GREAT_CHARISMA_8' ),
        ( 'Great charisma 9',                              '_GREAT_CHARISMA_9' ),
        ( 'Great charisma 10',                             '_GREAT_CHARISMA_10' ),
        ( 'Great constitution 1',                          '_GREAT_CONSTITUTION_1' ),
        ( 'Great constitution 2',                          '_GREAT_CONSTITUTION_2' ),
        ( 'Great constitution 3',                          '_GREAT_CONSTITUTION_3' ),
        ( 'Great constitution 4',                          '_GREAT_CONSTITUTION_4' ),
        ( 'Great constitution 5',                          '_GREAT_CONSTITUTION_5' ),
        ( 'Great constitution 6',                          '_GREAT_CONSTITUTION_6' ),
        ( 'Great constitution 7',                          '_GREAT_CONSTITUTION_7' ),
        ( 'Great constitution 8',                          '_GREAT_CONSTITUTION_8' ),
        ( 'Great constitution 9',                          '_GREAT_CONSTITUTION_9' ),
        ( 'Great constitution 10',                         '_GREAT_CONSTITUTION_10' ),
        ( 'Great dexterity 1',                             '_GREAT_DEXTERITY_1' ),
        ( 'Great dexterity 2',                             '_GREAT_DEXTERITY_2' ),
        ( 'Great dexterity 3',                             '_GREAT_DEXTERITY_3' ),
        ( 'Great dexterity 4',                             '_GREAT_DEXTERITY_4' ),
        ( 'Great dexterity 5',                             '_GREAT_DEXTERITY_5' ),
        ( 'Great dexterity 6',                             '_GREAT_DEXTERITY_6' ),
        ( 'Great dexterity 7',                             '_GREAT_DEXTERITY_7' ),
        ( 'Great dexterity 8',                             '_GREAT_DEXTERITY_8' ),
        ( 'Great dexterity 9',                             '_GREAT_DEXTERITY_9' ),
        ( 'Great dexterity 10',                            '_GREAT_DEXTERITY_10' ),
        ( 'Great intelligence 1',                          '_GREAT_INTELLIGENCE_1' ),
        ( 'Great intelligence 2',                          '_GREAT_INTELLIGENCE_2' ),
        ( 'Great intelligence 3',                          '_GREAT_INTELLIGENCE_3' ),
        ( 'Great intelligence 4',                          '_GREAT_INTELLIGENCE_4' ),
        ( 'Great intelligence 5',                          '_GREAT_INTELLIGENCE_5' ),
        ( 'Great intelligence 6',                          '_GREAT_INTELLIGENCE_6' ),
        ( 'Great intelligence 7',                          '_GREAT_INTELLIGENCE_7' ),
        ( 'Great intelligence 8',                          '_GREAT_INTELLIGENCE_8' ),
        ( 'Great intelligence 9',                          '_GREAT_INTELLIGENCE_9' ),
        ( 'Great intelligence 10',                         '_GREAT_INTELLIGENCE_10' ),
        ( 'Great smiting 1',                               '_GREAT_SMITING_1' ),
        ( 'Great smiting 2',                               '_GREAT_SMITING_2' ),
        ( 'Great smiting 3',                               '_GREAT_SMITING_3' ),
        ( 'Great smiting 4',                               '_GREAT_SMITING_4' ),
        ( 'Great smiting 5',                               '_GREAT_SMITING_5' ),
        ( 'Great smiting 6',                               '_GREAT_SMITING_6' ),
        ( 'Great smiting 7',                               '_GREAT_SMITING_7' ),
        ( 'Great smiting 8',                               '_GREAT_SMITING_8' ),
        ( 'Great smiting 9',                               '_GREAT_SMITING_9' ),
        ( 'Great smiting 10',                              '_GREAT_SMITING_10' ),
        ( 'Great strength 1',                              '_GREAT_STRENGTH_1' ),
        ( 'Great strength 2',                              '_GREAT_STRENGTH_2' ),
        ( 'Great strength 3',                              '_GREAT_STRENGTH_3' ),
        ( 'Great strength 4',                              '_GREAT_STRENGTH_4' ),
        ( 'Great strength 5',                              '_GREAT_STRENGTH_5' ),
        ( 'Great strength 6',                              '_GREAT_STRENGTH_6' ),
        ( 'Great strength 7',                              '_GREAT_STRENGTH_7' ),
        ( 'Great strength 8',                              '_GREAT_STRENGTH_8' ),
        ( 'Great strength 9',                              '_GREAT_STRENGTH_9' ),
        ( 'Great strength 10',                             '_GREAT_STRENGTH_10' ),
        ( 'Great wisdom 1',                                '_GREAT_WISDOM_1' ),
        ( 'Great wisdom 2',                                '_GREAT_WISDOM_2' ),
        ( 'Great wisdom 3',                                '_GREAT_WISDOM_3' ),
        ( 'Great wisdom 4',                                '_GREAT_WISDOM_4' ),
        ( 'Great wisdom 5',                                '_GREAT_WISDOM_5' ),
        ( 'Great wisdom 6',                                '_GREAT_WISDOM_6' ),
        ( 'Great wisdom 7',                                '_GREAT_WISDOM_7' ),
        ( 'Great wisdom 8',                                '_GREAT_WISDOM_8' ),
        ( 'Great wisdom 9',                                '_GREAT_WISDOM_9' ),
        ( 'Great wisdom 10',                               '_GREAT_WISDOM_10' ),
        ( 'Improved combat casting',                       '_IMPROVED_COMBAT_CASTING' ),
        ( 'Improved ki strike +4',                         '_IMPROVED_KI_STRIKE_4' ),
        ( 'Improved ki strike +5',                         '_IMPROVED_KI_STRIKE_5' ),
        ( 'Improved sneak attack 1',                       '_IMPROVED_SNEAK_ATTACK_1' ),
        ( 'Improved sneak attack 2',                       '_IMPROVED_SNEAK_ATTACK_2' ),
        ( 'Improved sneak attack 3',                       '_IMPROVED_SNEAK_ATTACK_3' ),
        ( 'Improved sneak attack 4',                       '_IMPROVED_SNEAK_ATTACK_4' ),
        ( 'Improved sneak attack 5',                       '_IMPROVED_SNEAK_ATTACK_5' ),
        ( 'Improved sneak attack 6',                       '_IMPROVED_SNEAK_ATTACK_6' ),
        ( 'Improved sneak attack 7',                       '_IMPROVED_SNEAK_ATTACK_7' ),
        ( 'Improved sneak attack 8',                       '_IMPROVED_SNEAK_ATTACK_8' ),
        ( 'Improved sneak attack 9',                       '_IMPROVED_SNEAK_ATTACK_9' ),
        ( 'Improved sneak attack 10',                      '_IMPROVED_SNEAK_ATTACK_10' ),
        ( 'Improved spell resistance 1',                   '_IMPROVED_SPELL_RESISTANCE_1' ),
        ( 'Improved spell resistance 2',                   '_IMPROVED_SPELL_RESISTANCE_2' ),
        ( 'Improved spell resistance 3',                   '_IMPROVED_SPELL_RESISTANCE_3' ),
        ( 'Improved spell resistance 4',                   '_IMPROVED_SPELL_RESISTANCE_4' ),
        ( 'Improved spell resistance 5',                   '_IMPROVED_SPELL_RESISTANCE_5' ),
        ( 'Improved spell resistance 6',                   '_IMPROVED_SPELL_RESISTANCE_6' ),
        ( 'Improved spell resistance 7',                   '_IMPROVED_SPELL_RESISTANCE_7' ),
        ( 'Improved spell resistance 8',                   '_IMPROVED_SPELL_RESISTANCE_8' ),
        ( 'Improved spell resistance 9',                   '_IMPROVED_SPELL_RESISTANCE_9' ),
        ( 'Improved spell resistance 10',                  '_IMPROVED_SPELL_RESISTANCE_10' ),
        ( 'Improved stunning fist 1',                      '_IMPROVED_STUNNING_FIST_1' ),
        ( 'Improved stunning fist 2',                      '_IMPROVED_STUNNING_FIST_2' ),
        ( 'Improved stunning fist 3',                      '_IMPROVED_STUNNING_FIST_3' ),
        ( 'Improved stunning fist 4',                      '_IMPROVED_STUNNING_FIST_4' ),
        ( 'Improved stunning fist 5',                      '_IMPROVED_STUNNING_FIST_5' ),
        ( 'Improved stunning fist 6',                      '_IMPROVED_STUNNING_FIST_6' ),
        ( 'Improved stunning fist 7',                      '_IMPROVED_STUNNING_FIST_7' ),
        ( 'Improved stunning fist 8',                      '_IMPROVED_STUNNING_FIST_8' ),
        ( 'Improved stunning fist 9',                      '_IMPROVED_STUNNING_FIST_9' ),
        ( 'Improved stunning fist 10',                     '_IMPROVED_STUNNING_FIST_10' ),
        ( 'Improved whirlwind attack',                     'FEAT_IMPROVED_WHIRLWIND' ),
        ( 'Lasting inspiration',                           '_LASTING_INSPIRATION' ),
        ( 'Mighty rage',                                   'FEAT_MIGHTY_RAGE' ),
        ( 'Outsider shape',                                '_OUTSIDER_SHAPE' ),
        ( 'Overwhelming critical (bastard sword)',         '_OVERWHELMING_CRITICAL_BASTARDSWORD' ),
        ( 'Overwhelming critical (battle axe)',            '_OVERWHELMING_CRITICAL_BATTLEAXE' ),
        ( 'Overwhelming critical (club)',                  '_OVERWHELMING_CRITICAL_CLUB' ),
        ( 'Overwhelming critical (creature)',              '_OVERWHELMING_CRITICAL_CREATURE' ),
        ( 'Overwhelming critical (dagger)',                '_OVERWHELMING_CRITICAL_DAGGER' ),
        ( 'Overwhelming critical (dart)',                  '_OVERWHELMING_CRITICAL_DART' ),
        ( 'Overwhelming critical (dire mace)',             '_OVERWHELMING_CRITICAL_DIREMACE' ),
        ( 'Overwhelming critical (double axe)',            '_OVERWHELMING_CRITICAL_DOUBLEAXE' ),
        ( 'Overwhelming critical (dwarven waraxe)',        '_OVERWHELMING_CRITICAL_DWAXE' ),
        ( 'Overwhelming critical (greataxe)',              '_OVERWHELMING_CRITICAL_GREATAXE' ),
        ( 'Overwhelming critical (greatsword)',            '_OVERWHELMING_CRITICAL_GREATSWORD' ),
        ( 'Overwhelming critical (halberd)',               '_OVERWHELMING_CRITICAL_HALBERD' ),
        ( 'Overwhelming critical (hand axe)',              '_OVERWHELMING_CRITICAL_HANDAXE' ),
        ( 'Overwhelming critical (heavy crossbow)',        '_OVERWHELMING_CRITICAL_HEAVYCROSSBOW' ),
        ( 'Overwhelming critical (heavy flail)',           '_OVERWHELMING_CRITICAL_HEAVYFLAIL' ),
        ( 'Overwhelming critical (kama)',                  '_OVERWHELMING_CRITICAL_KAMA' ),
        ( 'Overwhelming critical (katana)',                '_OVERWHELMING_CRITICAL_KATANA' ),
        ( 'Overwhelming critical (kukri)',                 '_OVERWHELMING_CRITICAL_KUKRI' ),
        ( 'Overwhelming critical (light crossbow)',        '_OVERWHELMING_CRITICAL_LIGHTCROSSBOW' ),
        ( 'Overwhelming critical (light flail)',           '_OVERWHELMING_CRITICAL_LIGHTFLAIL' ),
        ( 'Overwhelming critical (light hammer)',          '_OVERWHELMING_CRITICAL_LIGHTHAMMER' ),
        ( 'Overwhelming critical (longbow)',               '_OVERWHELMING_CRITICAL_LONGBOW' ),
        ( 'Overwhelming critical (long sword)',            '_OVERWHELMING_CRITICAL_LONGSWORD' ),
        ( 'Overwhelming critical (mace)',                  '_OVERWHELMING_CRITICAL_LIGHTMACE' ),
        ( 'Overwhelming critical (morningstar)',           '_OVERWHELMING_CRITICAL_MORNINGSTAR' ),
        ( 'Overwhelming critical (quarterstaff)',          '_OVERWHELMING_CRITICAL_QUARTERSTAFF' ),
        ( 'Overwhelming critical (rapier)',                '_OVERWHELMING_CRITICAL_RAPIER' ),
        ( 'Overwhelming critical (scimitar)',              '_OVERWHELMING_CRITICAL_SCIMITAR' ),
        ( 'Overwhelming critical (scythe)',                '_OVERWHELMING_CRITICAL_SCYTHE' ),
        ( 'Overwhelming critical (short sword)',           '_OVERWHELMING_CRITICAL_SHORTSWORD' ),
        ( 'Overwhelming critical (shortbow)',              '_OVERWHELMING_CRITICAL_SHORTBOW' ),
        ( 'Overwhelming critical (shuriken)',              '_OVERWHELMING_CRITICAL_SHURIKEN' ),
        ( 'Overwhelming critical (sickle)',                '_OVERWHELMING_CRITICAL_SICKLE' ),
        ( 'Overwhelming critical (sling)',                 '_OVERWHELMING_CRITICAL_SLING' ),
        ( 'Overwhelming critical (spear)',                 '_OVERWHELMING_CRITICAL_SHORTSPEAR' ),
        ( 'Overwhelming critical (throwing axe)',          '_OVERWHELMING_CRITICAL_THROWINGAXE' ),
        ( 'Overwhelming critical (trident)',               '_OVERWHELMING_CRITICAL_TRIDENT' ),
        ( 'Overwhelming critical (two-bladed sword)',      '_OVERWHELMING_CRITICAL_TWOBLADEDSWORD' ),
        ( 'Overwhelming critical (unarmed)',               '_OVERWHELMING_CRITICAL_UNARMED' ),
        ( 'Overwhelming critical (war hammer)',            '_OVERWHELMING_CRITICAL_WARHAMMER' ),
        ( 'Overwhelming critical (whip)',                  '_OVERWHELMING_CRITICAL_WHIP' ),
        ( 'Perfect health',                                '_PERFECT_HEALTH' ),
        ( 'Planar turning',                                '854' ),
        ( 'Self-concealment 1',                            '_SELF_CONCEALMENT_10' ),
        ( 'Self-concealment 2',                            '_SELF_CONCEALMENT_20' ),
        ( 'Self-concealment 3',                            '_SELF_CONCEALMENT_30' ),
        ( 'Self-concealment 4',                            '_SELF_CONCEALMENT_40' ),
        ( 'Self-concealment 5',                            '_SELF_CONCEALMENT_50' ),
        ( 'Superior initiative',                           '_SUPERIOR_INITIATIVE' ),
        ( 'Terrifying rage',                               '_TERRIFYING_RAGE' ),
        ( 'Thundering rage',                               '_THUNDERING_RAGE' ),
        ( 'Undead shape',                                  '_WILD_SHAPE_UNDEAD' ),
        // The trailing info row:
        ( nil, 'FEAT_EPIC' )
      );

    // The names for immunity types; the NWScript symbolic constants are
    // 'IMMUNITY_TYPE_' + Uppercase(name), with spaces converted to underscores.
    IMMUNITY_NAME: array[0..32] of pchar =
      ( 'Ability decrease',
        'AC decrease',
        'Attack decrease',
        'Blindness',
        'Charm',
        'Confused',
        'Critical hit',
        'Cursed',
        'Damage decrease',
        'Damage immunity decrease',
        'Dazed',
        'Deafness',
        'Death',
        'Disease',
        'Dominate',
        'Entangle',
        'Fear',
        'Knockdown',
        'Mind spells',
        'Movement speed decrease',
        'Negative level',
        'Paralysis',
        'Poison',
        'Saving throw decrease',
        'Silence',
        'Skill decrease',
        'Sleep',
        'Slow',
        'Sneak attack',
        'Spell resistance decrease',
        'Stun',
        'Trap',
        // The trailing info row:
        'IMMUNITY_TYPE' );

    // The NWScript symbolic constants for inventory slots.
    // Creature slots are at the end, rather than alphabetically.
    INVENTORY_SLOT_EITHER_HAND  = 8;  // The hand slots are this and this plus 1.
    INVENTORY_SLOT_EITHER_RING  = 12; // The ring slots are this and this plus 1.
    INVENTORY_SLOT_ANY_CREATURE = 14; // The creature weapon slots are this,
                                      // this plus 1, and this plue 2.
    // So that all the names are located in one place:
    INVENTORY_SLOT_EITHER_HAND_NAME  = 'Hand, either';
    INVENTORY_SLOT_EITHER_RING_NAME  = 'Ring, either hand';
    INVENTORY_SLOT_ANY_CREATURE_NAME = 'Any creature weapon';
    // And the symbols:
    INVENTORY_SLOT: array[0..18] of StringTriple =
      ( ( 'Arm (bracers/gloves)',           '_ARMS',      'armwear'  ),
        ( 'Arrow',                          '_ARROWS',    'arrows' ),
        ( 'Belt',                           '_BELT',      'belt' ),
        ( 'Bolt',                           '_BOLTS',     'bolts' ),
        ( 'Boots',                          '_BOOTS',     'boots' ),
        ( 'Bullet',                         '_BULLETS',   'bullets' ),
        ( 'Chest (armor and clothing)',     '_CHEST',     'clothing' ),
        ( 'Cloak',                          '_CLOAK',     'cloak' ),
        ( 'Hand, main (primary weapon)',    '_RIGHTHAND', 'weapon' ),
        ( 'Hand, off- (shield/torch/etc.)', '_LEFTHAND',  'off-hand item' ),
        ( 'Head (helmet)',                  '_HEAD',      'helmet' ),
        ( 'Neck (amulet/necklace/etc.)',    '_NECK',      'necklace' ),
        ( 'Ring, left hand',                '_LEFTRING',  'left ring' ),
        ( 'Ring, right hand',               '_RIGHTRING', 'right ring' ),
        ( 'Creature bite',                  '_CWEAPON_B', 'bite' ),
        ( 'Creature claw, left',            '_CWEAPON_L', 'left claw' ),
        ( 'Creature claw, right',           '_CWEAPON_R', 'right claw' ),
        ( 'Creature skin',                  '_CARMOUR',   'skin item' ),
        // The trailing info row:
        ( nil, 'INVENTORY_SLOT', nil )
      );

    // The names for invisibility types; the NWScript symbolic constants are
    // 'INVISIBILITY_TYPE_' + Uppercase(name).
    // (Not a big list, but it gets swapped with some other lists.)
    INVISIBILITY_NAME: array[0..3] of pchar =
      ( 'Normal',
        'Improved',
        'Darkness',
        // The trailing info row:
        'INVISIBILITY_TYPE' );

    // The abilities for item properties.
    IP_CONST_ABILITY: array[0..6] of StringPair =
      ( ( 'Strength',     '_STR' ),
        ( 'Dexterity',    '_DEX' ),
        ( 'Constitution', '_CON' ),
        ( 'Intelligence', '_INT' ),
        ( 'Wisdom',       '_WIS' ),
        ( 'Charisma',     '_CHA' ),
        // The trailing info row:
        ( nil, 'IP_CONST_ABILITY' )
      );

    // The AC types for item properties.
    IP_CONST_ACMODIFIERTYPE_NAME: array[0..5] of pchar =
      ( 'Armor',
        'Deflection',
        'Dodge',
        'Natural',
        'Shield',
        // The trailing info row:
        'IP_CONST_ACMODIFIERTYPE' );

    // The additional item properties.
    IP_CONST_ADDITIONAL_NAME: array[0..2] of pchar =
      ( 'Cursed',
        'Unknown',
        // The trailing info row:
        'IP_CONST_ADDITIONAL' );

    // The specific alignments for item properties.
    IP_CONST_ALIGNMENT: array[0..9] of StringPair =
      ( ( 'Lawful good',     '_LG' ),
        ( 'Lawful neutral',  '_LN' ),
        ( 'Lawful evil',     '_LE' ),
        ( 'Neutral good',    '_NG' ),
        ( 'True neutral',    '_TN' ),
        ( 'Neutral evil',    '_NE' ),
        ( 'Chaotic good',    '_CG' ),
        ( 'Chaotic neutral', '_CN' ),
        ( 'Chaotic evil',    '_CE' ),
        // The trailing info row:
        ( nil, 'IP_CONST_ALIGNMENT' )
      );

    // The alignment groups for item properties.
    IP_CONST_ALIGNMENTGROUP_NAME: array[0..6] of pchar =
      ( 'All',
        'Neutral',
        'Lawful',
        'Chaotic',
        'Good',
        'Evil',
        // The trailing info row:
        'IP_CONST_ALIGNMENTGROUP' );

    // The amounts for some monster on-hit properties.
    // No symbolic constants; just numbers from 1 to 5 (see IPRP_AMOUNT.2DA).
    IP_CONST_AMOUNT: array[0..5] of pchar =
      ( '1',
        '2',
        '3',
        '4',
        '5',
        // The trailing info row:
        nil );

    // The arcane spell failure item properties.
    IP_CONST_ARCANE_SPELL_FAILURE_NAME: array[0..20] of pchar =
      ( '-50%',
        '-45%',
        '-40%',
        '-35%',
        '-30%',
        '-25%',
        '-20%',
        '-15%',
        '-10%',
        '-5%',
        '+5%',
        '+10%',
        '+15%',
        '+20%',
        '+25%',
        '+30%',
        '+35%',
        '+40%',
        '+45%',
        '+50%',
        // The trailing info row:
        'IP_CONST_ARCANE_SPELL_FAILURE' );

    // The spell-casting item properties.
    IP_CONST_CASTSPELL: array[0..486] of StringPair =
      ( ( 'Acid Flask',                                '_GRENADE_ACID_1' ),
        ( 'Acid Fog (CL: 11)',                         '_ACID_FOG_11' ),
        ( 'Acid Splash (CL: 1)',                       '_ACID_SPLASH_1' ),
        ( 'Acidbomb',                                  '529' ),
        ( 'Activate Item',                             '_ACTIVATE_ITEM' ),
        ( 'Activate Item (Long Range)',                '513' ),
        ( 'Activate Item (Touch)',                     '537' ),
        ( 'Add Item Property',                         '496' ),
        ( 'Aid (CL: 3)',                               '_AID_3' ),
        ( 'Alchemist''s Fire',                         '_GRENADE_FIRE_1' ),
        ( 'Alcohol, Beer',                             '_SPECIAL_ALCOHOL_BEER' ),
        ( 'Alcohol, Spirits',                          '_SPECIAL_ALCOHOL_SPIRITS' ),
        ( 'Alcohol, Wine',                             '_SPECIAL_ALCOHOL_WINE' ),
        ( 'Amplify (CL: 5)',                           '_AMPLIFY_5' ),
        ( 'Animate Dead (CL: 5)',                      '_ANIMATE_DEAD_5' ),
        ( 'Animate Dead (CL: 10)',                     '_ANIMATE_DEAD_10' ),
        ( 'Animate Dead (CL: 15)',                     '_ANIMATE_DEAD_15' ),
        ( 'Aura Of Glory (CL: 7)',                     '_AURAOFGLORY_7' ),
        ( 'Aura of Glory - Cursed',                    '438' ),
        ( 'Aura of Vitality (CL: 13)',                 '_AURA_OF_VITALITY_13' ),
        ( 'Aura versus Alignment (CL: 15)',            '_AURA_VERSUS_ALIGNMENT_15' ),
        ( 'Awaken (CL: 9)',                            '_AWAKEN_9' ),
        ( 'Balagarn''s Iron Horn (CL: 7)',             '_BALAGARNSIRONHORN_7' ),
        ( 'Ball Lightning (CL: 9)',                    '454' ),
        ( 'Ball Lightning (CL: 20)',                   '538' ),
        ( 'Bane (CL: 5)',                              '_BANE_5' ),
        ( 'Banishment (CL: 15)',                       '_BANISHMENT_15' ),
        ( 'Barkskin (CL: 3)',                          '_BARKSKIN_3' ),
        ( 'Barkskin (CL: 6)',                          '_BARKSKIN_6' ),
        ( 'Barkskin (CL: 12)',                         '_BARKSKIN_12' ),
        ( 'Battletide (CL: 9)',                        '455' ),
        ( 'Bestow Curse (CL: 11)',                     '_BESTOW_CURSE_5' ),
        ( 'Bigby''s Clenched Fist (CL: 20)',           '_BIGBYS_CLENCHED_FIST_20' ),
        ( 'Bigby''s Crushing Hand (CL: 20)',           '_BIGBYS_CRUSHING_HAND_20' ),
        ( 'Bigby''s Forceful Hand (CL: 15)',           '_BIGBYS_FORCEFUL_HAND_15' ),
        ( 'Bigby''s Grasping Hand (CL: 17)',           '_BIGBYS_GRASPING_HAND_17' ),
        ( 'Bigby''s Interposing Hand (CL: 15)',        '_BIGBYS_INTERPOSING_HAND_15' ),
        ( 'Black Blade of Disaster (CL: 17)',          '468' ),
        ( 'Blackstaff (CL: 15)',                       '476' ),
        ( 'Blade Barrier (CL: 11)',                    '_BLADE_BARRIER_11' ),
        ( 'Blade Barrier (CL: 15)',                    '_BLADE_BARRIER_15' ),
        ( 'Blade Thirst (CL: 12)',                     '470' ),
        ( 'Bless (CL: 2)',                             '_BLESS_2' ),
        ( 'Bless Weapon (CL: 6)',                      '472' ),
        ( 'Bless Weapon (CL: 10)',                     '516' ),
        ( 'Bless Weapon (CL: 17)',                     '517' ),
        ( 'Blindness/Deafness (CL: 3)',                '_BLINDNESS_DEAFNESS_3' ),
        ( 'Blood Frenzy (CL: 7)',                      '_BLOOD_FRENZY_7' ),
        ( 'Bombardment (CL: 20)',                      '_BOMBARDMENT_20' ),
        ( 'Bull''s Strength (CL: 3)',                  '_BULLS_STRENGTH_3' ),
        ( 'Bull''s Strength (CL: 10)',                 '_BULLS_STRENGTH_10' ),
        ( 'Bull''s Strength (CL: 15)',                 '_BULLS_STRENGTH_15' ),
        ( 'Burning Hands (CL: 2)',                     '_BURNING_HANDS_2' ),
        ( 'Burning Hands (CL: 5)',                     '_BURNING_HANDS_5' ),
        ( 'Call Lightning (CL: 5)',                    '_CALL_LIGHTNING_5' ),
        ( 'Call Lightning (CL: 10)',                   '_CALL_LIGHTNING_10' ),
        ( 'Caltrops',                                  '_GRENADE_CALTROPS_1' ),
        ( 'Camouflage (CL: 5)',                        '_CAMOFLAGE_5' ),
        ( 'Cat''s Grace (CL: 3)',                      '_CATS_GRACE_3' ),
        ( 'Cat''s Grace (CL: 10)',                     '_CATS_GRACE_10' ),
        ( 'Cat''s Grace (CL: 15)',                     '_CATS_GRACE_15' ),
        ( 'Chain Lightning (CL: 11)',                  '_CHAIN_LIGHTNING_11' ),
        ( 'Chain Lightning (CL: 15)',                  '_CHAIN_LIGHTNING_15' ),
        ( 'Chain Lightning (CL: 20)',                  '_CHAIN_LIGHTNING_20' ),
        ( 'Charm Monster (CL: 5)',                     '_CHARM_MONSTER_5' ),
        ( 'Charm Monster (CL: 10)',                    '_CHARM_MONSTER_10' ),
        ( 'Charm Person (CL: 2)',                      '_CHARM_PERSON_2' ),
        ( 'Charm Person (CL: 10)',                     '_CHARM_PERSON_10' ),
        ( 'Charm Person or Animal (CL: 3)',            '_CHARM_PERSON_OR_ANIMAL_3' ),
        ( 'Charm Person or Animal (CL: 10)',           '_CHARM_PERSON_OR_ANIMAL_10' ),
        ( 'Chickenegg',                                '_GRENADE_CHICKEN_1' ),
        ( 'Choking Powder',                            '_GRENADE_CHOKING_1' ),
        ( 'Circle of Death (CL: 11)',                  '_CIRCLE_OF_DEATH_11' ),
        ( 'Circle of Death (CL: 15)',                  '_CIRCLE_OF_DEATH_15' ),
        ( 'Circle of Death (CL: 20)',                  '_CIRCLE_OF_DEATH_20' ),
        ( 'Circle of Doom (CL: 9)',                    '_CIRCLE_OF_DOOM_9' ),
        ( 'Circle of Doom (CL: 15)',                   '_CIRCLE_OF_DOOM_15' ),
        ( 'Circle of Doom (CL: 20)',                   '_CIRCLE_OF_DOOM_20' ),
        ( 'Clairaudience/Clairvoyance (CL: 5)',        '_CLAIRAUDIENCE_CLAIRVOYANCE_5' ),
        ( 'Clairaudience/Clairvoyance (CL: 10)',       '_CLAIRAUDIENCE_CLAIRVOYANCE_10' ),
        ( 'Clairaudience/Clairvoyance (CL: 15)',       '_CLAIRAUDIENCE_CLAIRVOYANCE_15' ),
        ( 'Clarity (CL: 3)',                           '_CLARITY_3' ),
        ( 'Clear Sequencer',                           '524' ),
        ( 'Cloud of Bewilderment (CL: 3)',             '486' ),
        ( 'Cloudkill (CL: 9)',                         '_CLOUDKILL_9' ),
        ( 'Color Spray (CL: 2)',                       '_COLOR_SPRAY_2' ),
        ( 'Combust (CL: 3)',                           '456' ),
        ( 'Cone of Cold (CL: 9)',                      '_CONE_OF_COLD_9' ),
        ( 'Cone of Cold (CL: 15)',                     '_CONE_OF_COLD_15' ),
        ( 'Confusion (CL: 5)',                         '_CONFUSION_5' ),
        ( 'Confusion (CL: 10)',                        '_CONFUSION_10' ),
        ( 'Contagion (CL: 5)',                         '_CONTAGION_5' ),
        ( 'Continual Flame (CL: 7)',                   '_CONTINUAL_FLAME_7' ),
        ( 'Control Undead (CL: 13)',                   '_CONTROL_UNDEAD_13' ),
        ( 'Control Undead (CL: 20)',                   '_CONTROL_UNDEAD_20' ),
        ( 'Craft Armor',                               '499' ),
        ( 'Craft Armor Component',                     '527' ),
        ( 'Craft Weapon',                              '498' ),
        ( 'Craft Weapon Component',                    '526' ),
        ( 'Create Greater Undead (CL: 15)',            '_CREATE_GREATER_UNDEAD_15' ),
        ( 'Create Greater Undead (CL: 16)',            '_CREATE_GREATER_UNDEAD_16' ),
        ( 'Create Greater Undead (CL: 18)',            '_CREATE_GREATER_UNDEAD_18' ),
        ( 'Create Undead (CL: 11)',                    '_CREATE_UNDEAD_11' ),
        ( 'Create Undead (CL: 14)',                    '_CREATE_UNDEAD_14' ),
        ( 'Create Undead (CL: 16)',                    '_CREATE_UNDEAD_16' ),
        ( 'Creeping Doom (CL: 13)',                    '_CREEPING_DOOM_13' ),
        ( 'Crumble (CL: 11)',                          '450' ),
        ( 'Cure Minor Wounds (CL: 1)',                 '_CURE_MINOR_WOUNDS_1' ),
        ( 'Cure Light Wounds (CL: 2)',                 '_CURE_LIGHT_WOUNDS_2' ),
        ( 'Cure Light Wounds (CL: 5)',                 '_CURE_LIGHT_WOUNDS_5' ),
        ( 'Cure Moderate Wounds (CL: 3)',              '_CURE_MODERATE_WOUNDS_3' ),
        ( 'Cure Moderate Wounds (CL: 6)',              '_CURE_MODERATE_WOUNDS_6' ),
        ( 'Cure Moderate Wounds (CL: 10)',             '_CURE_MODERATE_WOUNDS_10' ),
        ( 'Cure Serious Wounds (CL: 5)',               '_CURE_SERIOUS_WOUNDS_5' ),
        ( 'Cure Serious Wounds (CL: 10)',              '_CURE_SERIOUS_WOUNDS_10' ),
        ( 'Cure Serious Wounds (CL: 15)',              '74' ),
        ( 'Cure Critical Wounds (CL: 7)',              '_CURE_CRITICAL_WOUNDS_7' ),
        ( 'Cure Critical Wounds (CL: 12)',             '_CURE_CRITICAL_WOUNDS_12' ),
        ( 'Cure Critical Wounds (CL: 15)',             '_CURE_CRITICAL_WOUNDS_15' ),
        ( 'Cure Critical Wounds - Others',             '429' ),
        ( 'Darkfire (CL: 5)',                          '483' ),
        ( 'Darkness (CL: 3)',                          '_DARKNESS_3' ),
        ( 'Daze (CL: 1)',                              '_DAZE_1' ),
        ( 'Deafening Clang (CL: 6)',                   '471' ),
        ( 'Death Armor (CL: 3)',                       '457' ),
        ( 'Death Ward (CL: 7)',                        '_DEATH_WARD_7' ),
        ( 'Delayed Blast Fireball (CL: 13)',           '_DELAYED_BLAST_FIREBALL_13' ),
        ( 'Delayed Blast Fireball (CL: 15)',           '_DELAYED_BLAST_FIREBALL_15' ),
        ( 'Delayed Blast Fireball (CL: 20)',           '_DELAYED_BLAST_FIREBALL_20' ),
        ( 'Destruction (CL: 13)',                      '_DESTRUCTION_13' ),
        ( 'Dirge (CL: 15)',                            '_DIRGE_15' ),
        ( 'Dismissal (CL: 7)',                         '_DISMISSAL_7' ),
        ( 'Dismissal (CL: 12)',                        '_DISMISSAL_12' ),
        ( 'Dismissal (CL: 18)',                        '_DISMISSAL_18' ),
        ( 'Dispel Magic (CL: 5)',                      '_DISPEL_MAGIC_5' ),
        ( 'Dispel Magic (CL: 10)',                     '_DISPEL_MAGIC_10' ),
        ( 'Displacement (CL: 9)',                      '_DISPLACEMENT_9' ),
        ( 'Divine Favor (CL: 5)',                      '_DIVINE_FAVOR_5' ),
        ( 'Divine Might (CL: 5)',                      '_DIVINE_MIGHT_5' ),
        ( 'Divine Power (CL: 7)',                      '_DIVINE_POWER_7' ),
        ( 'Divine Shield (CL: 5)',                     '_DIVINE_SHIELD_5' ),
        ( 'Dominate Animal (CL: 5)',                   '_DOMINATE_ANIMAL_5' ),
        ( 'Dominate Monster (CL: 17)',                 '_DOMINATE_MONSTER_17' ),
        ( 'Dominate Person (CL: 7)',                   '_DOMINATE_PERSON_7' ),
        ( 'Doom (CL: 2)',                              '_DOOM_2' ),
        ( 'Doom (CL: 5)',                              '_DOOM_5' ),
        ( 'Dragon Breath, Acid',                       '_DRAGON_BREATH_ACID_10' ),
        ( 'Dragon Breath, Cold',                       '_DRAGON_BREATH_COLD_10' ),
        ( 'Dragon Breath, Fear',                       '_DRAGON_BREATH_FEAR_10' ),
        ( 'Dragon Breath, Fire',                       '_DRAGON_BREATH_FIRE_10' ),
        ( 'Dragon Breath, Gas',                        '_DRAGON_BREATH_GAS_10' ),
        ( 'Dragon Breath, Lightning',                  '_DRAGON_BREATH_LIGHTNING_10' ),
        ( 'Dragon Breath, Paralysis',                  '_DRAGON_BREATH_PARALYZE_10' ),
        ( 'Dragon Breath, Sleep',                      '_DRAGON_BREATH_SLEEP_10' ),
        ( 'Dragon Breath, Slow',                       '_DRAGON_BREATH_SLOW_10' ),
        ( 'Dragon Breath, Weaken',                     '_DRAGON_BREATH_WEAKEN_10' ),
        ( 'Draw one card (Deck of Hazards)',           '411' ),
        ( 'Draw two cards (Deck of Hazards)',          '412' ),
        ( 'Draw three cards (Deck of Hazards)',        '413' ),
        ( 'Drown (CL: 15)',                            '_DROWN_15' ),
        ( 'Dye: Cloth 1',                              '490' ),
        ( 'Dye: Cloth 2',                              '491' ),
        ( 'Dye: Leather 1',                            '492' ),
        ( 'Dye: Leather 2',                            '493' ),
        ( 'Dye: Metal 1',                              '494' ),
        ( 'Dye: Metal 2',                              '495' ),
        ( 'Eagle''s Splendor (CL: 3)',                 '_EAGLE_SPLEDOR_3' ),
        ( 'Eagle''s Splendor (CL: 10)',                '_EAGLE_SPLEDOR_10' ),
        ( 'Eagle''s Splendor (CL: 15)',                '_EAGLE_SPLEDOR_15' ),
        ( 'Earthquake (CL: 20)',                       '_EARTHQUAKE_20' ),
        ( 'Electric Jolt (CL: 1)',                     '_ELECTRIC_JOLT_1' ),
        ( 'Elemental Shield (CL: 7)',                  '_ELEMENTAL_SHIELD_7' ),
        ( 'Elemental Shield (CL: 12)',                 '_ELEMENTAL_SHIELD_12' ),
        ( 'Elemental Swarm (CL: 17)',                  '_ELEMENTAL_SWARM_17' ),
        ( 'Endurance (CL: 3)',                         '_ENDURANCE_3' ),
        ( 'Endurance (CL: 10)',                        '_ENDURANCE_10' ),
        ( 'Endurance (CL: 15)',                        '_ENDURANCE_15' ),
        ( 'Endure Elements (CL: 2)',                   '_ENDURE_ELEMENTS_2' ),
        ( 'Energy Buffer (CL: 11)',                    '_ENERGY_BUFFER_11' ),
        ( 'Energy Buffer (CL: 15)',                    '_ENERGY_BUFFER_15' ),
        ( 'Energy Buffer (CL: 20)',                    '_ENERGY_BUFFER_20' ),
        ( 'Energy Drain (CL: 17)',                     '_ENERGY_DRAIN_17' ),
        ( 'Enervation (CL: 7)',                        '_ENERVATION_7' ),
        ( 'Entangle (CL: 2)',                          '_ENTANGLE_2' ),
        ( 'Entangle (CL: 5)',                          '_ENTANGLE_5' ),
        ( 'Entropic Shield (CL: 5)',                   '_ENTROPIC_SHIELD_5' ),
        ( 'Epic Spell: Dragon Knight',                 '532' ),
        ( 'Epic Spell: Epic Mage Armor',               '533' ),
        ( 'Epic Spell: Epic Warding',                  '535' ),
        ( 'Epic Spell: Greater Ruin',                  '534' ),
        ( 'Epic Spell: Hellball',                      '530' ),
        ( 'Epic Spell: Mummy Dust',                    '531' ),
        ( 'Ethereal Visage (CL: 9)',                   '_ETHEREAL_VISAGE_9' ),
        ( 'Ethereal Visage (CL: 15)',                  '_ETHEREAL_VISAGE_15' ),
        ( 'Etherealness',                              '525' ),
        ( 'Evard''s Black Tentacles (CL: 7)',          '_EVARDS_BLACK_TENTACLES_7' ),
        ( 'Evard''s Black Tentacles (CL: 15)',         '_EVARDS_BLACK_TENTACLES_15' ),
        ( 'Evil Blight (CL: 9)',                       '428' ),
        ( 'Expeditious Retreat (CL: 5)',               '_EXPEDITIOUS_RETREAT_5' ),
        ( 'Fear (CL: 5)',                              '_FEAR_5' ),
        ( 'Feeblemind (CL: 9)',                        '_FEEBLEMIND_9' ),
        ( 'Find Traps (CL: 3)',                        '_FIND_TRAPS_3' ),
        ( 'Finger of Death (CL: 13)',                  '_FINGER_OF_DEATH_13' ),
        ( 'Fire Storm (CL: 13)',                       '_FIRE_STORM_13' ),
        ( 'Fire Storm (CL: 18)',                       '_FIRE_STORM_18' ),
        ( 'Fireball (CL: 5)',                          '_FIREBALL_5' ),
        ( 'Fireball (CL: 10)',                         '_FIREBALL_10' ),
        ( 'Firebomb',                                  '528' ),
        ( 'Firebrand (CL: 15)',                        '_FIREBRAND_15' ),
        ( 'Flame Arrow (CL: 5)',                       '_FLAME_ARROW_5' ),
        ( 'Flame Arrow (CL: 12)',                      '_FLAME_ARROW_12' ),
        ( 'Flame Arrow (CL: 18)',                      '_FLAME_ARROW_18' ),
        ( 'Flame Lash (CL: 3)',                        '_FLAME_LASH_3' ),
        ( 'Flame Lash (CL: 10)',                       '_FLAME_LASH_10' ),
        ( 'Flame Strike (CL: 7)',                      '_FLAME_STRIKE_7' ),
        ( 'Flame Strike (CL: 12)',                     '_FLAME_STRIKE_12' ),
        ( 'Flame Strike (CL: 18)',                     '_FLAME_STRIKE_18' ),
        ( 'Flame Twin',                                '442' ),
        ( 'Flame Weapon (CL: 3)',                      '477' ),
        ( 'Flame Weapon (CL: 10)',                     '514' ),
        ( 'Flame Weapon (CL: 17)',                     '515' ),
        ( 'Flameberry',                                '445' ),
        ( 'Flare (CL: 1)',                             '_FLARE_1' ),
        ( 'Flesh to Stone (CL: 5)',                    '_FLESH_TO_STONE_5' ),
        ( 'Fox''s Cunning (CL: 3)',                    '_FOXS_CUNNING_3' ),
        ( 'Fox''s Cunning (CL: 10)',                   '_FOXS_CUNNING_10' ),
        ( 'Fox''s Cunning (CL: 15)',                   '_FOXS_CUNNING_15' ),
        ( 'Freedom of Movement (CL: 7)',               '_FREEDOM_OF_MOVEMENT_7' ),
        ( 'Gate (CL: 17)',                             '_GATE_17' ),
        ( 'Gedlee''s Electric Loop (CL: 3)',           '458' ),
        ( 'Ghostly Visage (CL: 3)',                    '_GHOSTLY_VISAGE_3' ),
        ( 'Ghostly Visage (CL: 9)',                    '_GHOSTLY_VISAGE_9' ),
        ( 'Ghostly Visage (CL: 15)',                   '_GHOSTLY_VISAGE_15' ),
        ( 'Ghoul Touch (CL: 3)',                       '_GHOUL_TOUCH_3' ),
        ( 'Globe of Invulnerability (CL: 11)',         '_GLOBE_OF_INVULNERABILITY_11' ),
        ( 'Glyph of Warding (CL: 5)',                  '484' ),
        ( 'Grease (CL: 2)',                            '_GREASE_2' ),
        ( 'Great Thunderclap (CL: 13)',                '453' ),
        ( 'Greater Bull''s Strength(CL: 11)',          '_GREATER_BULLS_STRENGTH_11' ),
        ( 'Greater Cat''s Grace (CL: 11)',             '_GREATER_CATS_GRACE_11' ),
        ( 'Greater Dispelling (CL: 7)',                '_GREATER_DISPELLING_7' ),
        ( 'Greater Dispelling (CL: 15)',               '_GREATER_DISPELLING_15' ),
        ( 'Greater Eagle''s Splendor (CL: 11)',        '_GREATER_EAGLES_SPLENDOR_11' ),
        ( 'Greater Endurance (CL: 11)',                '_GREATER_ENDURANCE_11' ),
        ( 'Greater Fox''s Cunning(CL: 11)',            '_GREATER_FOXS_CUNNING_11' ),
        ( 'Greater Magic Fang (CL: 9)',                '_GREATER_MAGIC_FANG_9' ),
        ( 'Greater Magic Weapon (CL: 5)',              '480' ),
        ( 'Greater Magic Weapon (CL: 10)',             '511' ),
        ( 'Greater Magic Weapon (CL: 15)',             '512' ),
        ( 'Greater Owl''s Wisdom (CL: 11)',            '_GREATER_OWLS_WISDOM_11' ),
        ( 'Greater Planar Binding (CL: 15)',           '_GREATER_PLANAR_BINDING_15' ),
        ( 'Greater Restoration (CL: 13)',              '_GREATER_RESTORATION_13' ),
        ( 'Greater Sanctuary (CL: 18)',                '_ETHEREALNESS_18' ),
        ( 'Greater Shadow Conjuration (CL: 9)',        '_GREATER_SHADOW_CONJURATION_9' ),
        ( 'Greater Spell Breach (CL: 11)',             '_GREATER_SPELL_BREACH_11' ),
        ( 'Greater Spell Mantle (CL: 17)',             '_GREATER_SPELL_MANTLE_17' ),
        ( 'Greater Stoneskin (CL: 11)',                '_GREATER_STONESKIN_11' ),
        ( 'Gust of Wind (CL: 10)',                     '_GUST_OF_WIND_10' ),
        ( 'Hammer of the Gods (CL: 7)',                '_HAMMER_OF_THE_GODS_7' ),
        ( 'Hammer of the Gods (CL: 12)',               '_HAMMER_OF_THE_GODS_12' ),
        ( 'Hammer of the Gods (CL: 20)',               '135' ),
        ( 'Harm (CL: 11)',                             '_HARM_11' ),
        ( 'Haste (CL: 5)',                             '_HASTE_5' ),
        ( 'Haste (CL: 10)',                            '_HASTE_10' ),
        ( 'Haste/Slow (CL: 10)',                       '425' ),
        ( 'Heal (CL: 11)',                             '_HEAL_11' ),
        ( 'Healing Circle (CL: 9)',                    '_HEALING_CIRCLE_9' ),
        ( 'Healing Circle (CL: 16)',                   '_HEALING_CIRCLE_16' ),
        ( 'Healing Sting (CL: 5)',                     '452' ),
        ( 'Herb, Belladonna',                          '_SPECIAL_HERB_BELLADONNA' ),
        ( 'Herb, Garlic',                              '_SPECIAL_HERB_GARLIC' ),
        ( 'Hold Animal (CL: 3)',                       '_HOLD_ANIMAL_3' ),
        ( 'Hold Monster (CL: 7)',                      '_HOLD_MONSTER_7' ),
        ( 'Hold Person (CL: 3)',                       '_HOLD_PERSON_3' ),
        ( 'Holy Sword (CL: 15)',                       '473' ),
        ( 'Holy Sword (CL: 17)',                       '518' ),
        ( 'Holy Water',                                '_GRENADE_HOLY_1' ),
        ( 'Horizikaul''s Boom (CL: 2)',                '459' ),
        ( 'Horrid Wilting (CL: 15)',                   '_HORRID_WILTING_15' ),
        ( 'Horrid Wilting (CL: 20)',                   '_HORRID_WILTING_20' ),
        ( 'Ice Dagger (CL: 2)',                        '478' ),
        ( 'Ice Storm (CL: 9)',                         '_ICE_STORM_9' ),
        ( 'Iceberry',                                  '444' ),
        ( 'Identify (CL: 3)',                          '_IDENTIFY_3' ),
        ( 'Implosion (CL: 17)',                        '_IMPLOSION_17' ),
        ( 'Improved Invisibility (CL: 7)',             '_IMPROVED_INVISIBILITY_7' ),
        ( 'Incendiary Cloud (CL: 15)',                 '_INCENDIARY_CLOUD_15' ),
        ( 'Inferno (CL: 15)',                          '_INFERNO_15' ),
        ( 'Infestation of Maggots (CL: 5)',            '451' ),
        ( 'Inflict Minor Wounds (CL: 1)',              '_INFLICT_MINOR_WOUNDS_1' ),
        ( 'Inflict Light Wounds (CL: 5)',              '_INFLICT_LIGHT_WOUNDS_5' ),
        ( 'Inflict Moderate Wounds (CL: 7)',           '_INFLICT_MODERATE_WOUNDS_7' ),
        ( 'Inflict Serious Wounds (CL: 9)',            '_INFLICT_SERIOUS_WOUNDS_9' ),
        ( 'Inflict Critical Wounds (CL: 12)',          '_INFLICT_CRITICAL_WOUNDS_12' ),
        ( 'Invisibility (CL: 3)',                      '_INVISIBILITY_3' ),
        ( 'Invisibility Purge (CL: 5)',                '_INVISIBILITY_PURGE_5' ),
        ( 'Invisibility Sphere (CL: 5)',               '_INVISIBILITY_SPHERE_5' ),
        ( 'Ioun Stone Power: Blue',                    '434' ),
        ( 'Ioun Stone Power: Deep Red',                '435' ),
        ( 'Ioun Stone Power: Dusty Rose',              '431' ),
        ( 'Ioun Stone Power: Pale Blue',               '432' ),
        ( 'Ioun Stone Power: Pink',                    '436' ),
        ( 'Ioun Stone Power: Pink Green',              '437' ),
        ( 'Ioun Stone Power: Scarlet Blue',            '433' ),
        ( 'Ironguts (CL: 2)',                          '460' ),
        ( 'Isaac''s Greater Missile Storm (CL: 15)',   '_ISAACS_GREATER_MISSILE_STORM_15' ),
        ( 'Isaac''s Lesser Missile Storm (CL: 13)',    '_ISAACS_LESSER_MISSILE_STORM_13' ),
        ( 'Keen Edge (CL: 5)',                         '474' ),
        ( 'Keen Edge (CL: 10)',                        '519' ),
        ( 'Keen Edge (CL: 17)',                        '520' ),
        ( 'Knock (CL: 3)',                             '_KNOCK_3' ),
        ( 'Legend Lore (CL: 5)',                       '_LEGEND_LORE_5' ),
        ( 'Lesser Dispel (CL: 3)',                     '_LESSER_DISPEL_3' ),
        ( 'Lesser Dispel (CL: 5)',                     '_LESSER_DISPEL_5' ),
        ( 'Lesser Mind Blank (CL: 9)',                 '_LESSER_MIND_BLANK_9' ),
        ( 'Lesser Planar Binding (CL: 9)',             '_LESSER_PLANAR_BINDING_9' ),
        ( 'Lesser Restoration (CL: 3)',                '_LESSER_RESTORATION_3' ),
        ( 'Lesser Spell Breach (CL: 7)',               '_LESSER_SPELL_BREACH_7' ),
        ( 'Lesser Spell Mantle (CL: 9)',               '_LESSER_SPELL_MANTLE_9' ),
        ( 'Light (CL: 1)',                             '_LIGHT_1' ),
        ( 'Light (CL: 5)',                             '_LIGHT_5' ),
        ( 'Lightning Bolt (CL: 5)',                    '_LIGHTNING_BOLT_5' ),
        ( 'Lightning Bolt (CL: 10)',                   '_LIGHTNING_BOLT_10' ),
        ( 'Lyrics of the Lich',                        '443' ),
        ( 'Mage Armor (CL: 2)',                        '_MAGE_ARMOR_2' ),
        ( 'Magic Circle against Alignment (CL: 5)',    '_MAGIC_CIRCLE_AGAINST_ALIGNMENT_5' ),
        ( 'Magic Fang (CL: 5)',                        '_MAGIC_FANG_5' ),
        ( 'Magic Missile (CL: 3)',                     '_MAGIC_MISSILE_3' ),
        ( 'Magic Missile (CL: 5)',                     '_MAGIC_MISSILE_5' ),
        ( 'Magic Missile (CL: 9)',                     '_MAGIC_MISSILE_9' ),
        ( 'Magic Vestment (CL: 5)',                    '481' ),
        ( 'Magic Weapon (CL: 2)',                      '479' ),
        ( 'Magical Electrifier - Charge',              '440' ),
        ( 'Magical Electrifier - Destroy',             '441' ),
        ( 'Manipulate Portal Stone',                   '_MANIPULATE_PORTAL_STONE' ),
        ( 'Manticore Spikes',                          '439' ),
        ( 'Mass Blindness/Deafness (CL: 15)',          '_MASS_BLINDNESS_DEAFNESS_15' ),
        ( 'Mass Camouflage (CL: 13)',                  '_MASS_CAMOFLAGE_13' ),
        ( 'Mass Charm (CL: 15)',                       '_MASS_CHARM_15' ),
        ( 'Mass Haste (CL: 11)',                       '_MASS_HASTE_11' ),
        ( 'Mass Heal (CL: 15)',                        '_MASS_HEAL_15' ),
        ( 'Melf''s Acid Arrow (CL: 3)',                '_MELFS_ACID_ARROW_3' ),
        ( 'Melf''s Acid Arrow (CL: 6)',                '_MELFS_ACID_ARROW_6' ),
        ( 'Melf''s Acid Arrow (CL: 9)',                '_MELFS_ACID_ARROW_9' ),
        ( 'Mestil''s Acid Breath (CL: 5)',             '461' ),
        ( 'Mestil''s Acid Sheath (CL: 9)',             '462' ),
        ( 'Meteor Swarm (CL: 17)',                     '_METEOR_SWARM_17' ),
        ( 'Mind Blank (CL: 15)',                       '_MIND_BLANK_15' ),
        ( 'Mind Fog (CL: 9)',                          '_MIND_FOG_9' ),
        ( 'Minor Globe of Invulnerability (CL: 7)',    '_MINOR_GLOBE_OF_INVULNERABILITY_7' ),
        ( 'Minor Globe of Invulnerability (CL: 15)',   '_MINOR_GLOBE_OF_INVULNERABILITY_15' ),
        ( 'Monstrous Regeneration (CL: 9)',            '463' ),
        ( 'Mordenkainen''s Disjunction (CL: 17)',      '_MORDENKAINENS_DISJUNCTION_17' ),
        ( 'Mordenkainen''s Sword (CL: 13)',            '_MORDENKAINENS_SWORD_13' ),
        ( 'Mordenkainen''s Sword (CL: 18)',            '_MORDENKAINENS_SWORD_18' ),
        ( 'Nature''s Balance (CL: 15)',                '_NATURES_BALANCE_15' ),
        ( 'Negative Energy Burst (CL: 5)',             '_NEGATIVE_ENERGY_BURST_5' ),
        ( 'Negative Energy Burst (CL: 10)',            '_NEGATIVE_ENERGY_BURST_10' ),
        ( 'Negative Energy Protection (CL: 5)',        '_NEGATIVE_ENERGY_PROTECTION_5' ),
        ( 'Negative Energy Protection (CL: 10)',       '_NEGATIVE_ENERGY_PROTECTION_10' ),
        ( 'Negative Energy Protection (CL: 15)',       '_NEGATIVE_ENERGY_PROTECTION_15' ),
        ( 'Negative Energy Ray (CL: 1)',               '_NEGATIVE_ENERGY_RAY_1' ),
        ( 'Negative Energy Ray (CL: 3)',               '_NEGATIVE_ENERGY_RAY_3' ),
        ( 'Negative Energy Ray (CL: 5)',               '_NEGATIVE_ENERGY_RAY_5' ),
        ( 'Negative Energy Ray (CL: 7)',               '_NEGATIVE_ENERGY_RAY_7' ),
        ( 'Negative Energy Ray (CL: 9)',               '_NEGATIVE_ENERGY_RAY_9' ),
        ( 'Negative Plane Avatar',                     '422' ),
        ( 'Neutralize Poison (CL: 5)',                 '_NEUTRALIZE_POISON_5' ),
        ( 'One With The Land (CL: 7)',                 '_ONE_WITH_THE_LAND_7' ),
        ( 'Owl''s Insight (CL: 15)',                   '_OWLS_INSIGHT_15' ),
        ( 'Owl''s Wisdom (CL: 3)',                     '_OWLS_WISDOM_3' ),
        ( 'Owl''s Wisdom (CL: 10)',                    '_OWLS_WISDOM_10' ),
        ( 'Owl''s Wisdom (CL: 15)',                    '_OWLS_WISDOM_15' ),
        ( 'Phantasmal Killer (CL: 7)',                 '_PHANTASMAL_KILLER_7' ),
        ( 'Planar Ally (CL: 15)',                      '_PLANAR_ALLY_15' ),
        ( 'Planar Binding (CL: 11)',                   '_PLANAR_BINDING_11' ),
        ( 'Poison (CL: 5)',                            '_POISON_5' ),
        ( 'Poison Weapon',                             '497' ),
        ( 'Polymorph Self (CL: 7)',                    '_POLYMORPH_SELF_7' ),
        ( 'Power Stone',                               '423' ),
        ( 'Power Word, Kill (CL: 17)',                 '_POWER_WORD_KILL_17' ),
        ( 'Power Word, Stun (CL: 13)',                 '_POWER_WORD_STUN_13' ),
        ( 'Prayer (CL: 5)',                            '_PRAYER_5' ),
        ( 'Premonition (CL: 15)',                      '_PREMONITION_15' ),
        ( 'Prismatic Spray (CL: 13)',                  '_PRISMATIC_SPRAY_13' ),
        ( 'Protection from Alignment (CL: 2)',         '_PROTECTION_FROM_ALIGNMENT_2' ),
        ( 'Protection from Alignment (CL: 5)',         '_PROTECTION_FROM_ALIGNMENT_5' ),
        ( 'Protection from Elements (CL: 3)',          '_PROTECTION_FROM_ELEMENTS_3' ),
        ( 'Protection from Elements (CL: 10)',         '_PROTECTION_FROM_ELEMENTS_10' ),
        ( 'Protection from Spells (CL: 13)',           '_PROTECTION_FROM_SPELLS_13' ),
        ( 'Protection from Spells (CL: 20)',           '_PROTECTION_FROM_SPELLS_20' ),
        ( 'Quillfire (CL: 8)',                         '_QUILLFIRE_8' ),
        ( 'Raise Dead (CL: 9)',                        '_RAISE_DEAD_9' ),
        ( 'Ray of Enfeeblement (CL: 2)',               '_RAY_OF_ENFEEBLEMENT_2' ),
        ( 'Ray of Frost (CL: 1)',                      '_RAY_OF_FROST_1' ),
        ( 'Regenerate (CL: 13)',                       '_REGENERATE_13' ),
        ( 'Remove Blindness/Deafness (CL: 5)',         '_REMOVE_BLINDNESS_DEAFNESS_5' ),
        ( 'Remove Curse (CL: 5)',                      '_REMOVE_CURSE_5' ),
        ( 'Remove Disease (CL: 5)',                    '_REMOVE_DISEASE_5' ),
        ( 'Remove Fear (CL: 2)',                       '_REMOVE_FEAR_2' ),
        ( 'Remove Paralysis (CL: 3)',                  '_REMOVE_PARALYSIS_3' ),
        ( 'Resist Elements (CL: 3)',                   '_RESIST_ELEMENTS_3' ),
        ( 'Resist Elements (CL: 10)',                  '_RESIST_ELEMENTS_10' ),
        ( 'Resistance (CL: 2)',                        '_RESISTANCE_2' ),
        ( 'Resistance (CL: 5)',                        '_RESISTANCE_5' ),
        ( 'Restoration (CL: 7)',                       '_RESTORATION_7' ),
        ( 'Restoration - Other',                       '430' ),
        ( 'Resurrection (CL: 13)',                     '_RESURRECTION_13' ),
        ( 'Rod of Wonder',                             '414' ),
        ( 'Rogue''s Cunning (CL: 3)',                  '_ROGUES_CUNNING_3' ),
        ( 'Sanctuary (CL: 2)',                         '_SANCTUARY_2' ),
        ( 'Scare (CL: 2)',                             '_SCARE_2' ),
        ( 'Scintillating Sphere (CL: 5)',              '464' ),
        ( 'Scintillating Sphere (CL: 20)',             '539' ),
        ( 'Searing Light (CL: 5)',                     '_SEARING_LIGHT_5' ),
        ( 'See Invisibility (CL: 3)',                  '_SEE_INVISIBILITY_3' ),
        ( 'Sequencer (1 spell)',                       '521' ),
        ( 'Sequencer (2 spells)',                      '522' ),
        ( 'Sequencer (3 spells)',                      '523' ),
        ( 'Shades (CL: 11)',                           '_SHADES_11' ),
        ( 'Shadow Conjuration (CL: 7)',                '_SHADOW_CONJURATION_7' ),
        ( 'Shadow Shield (CL: 13)',                    '_SHADOW_SHIELD_13' ),
        ( 'Shapechange (CL: 17)',                      '_SHAPECHANGE_17' ),
        ( 'Shelgarn''s Persistent Blade (CL: 2)',      '469' ),
        ( 'Shield (CL: 5)',                            '_SHIELD_5' ),
        ( 'Shield of Faith (CL: 5)',                   '_SHIELD_OF_FAITH_5' ),
        ( 'Silence (CL: 3)',                           '_SILENCE_3' ),
        ( 'Slay Living (CL: 9)',                       '_SLAY_LIVING_9' ),
        ( 'Sleep (CL: 2)',                             '_SLEEP_2' ),
        ( 'Sleep (CL: 5)',                             '_SLEEP_5' ),
        ( 'Slow (CL: 5)',                              '_SLOW_5' ),
        ( 'Sound Burst (CL: 3)',                       '_SOUND_BURST_3' ),
        ( 'Spell Mantle (CL: 13)',                     '_SPELL_MANTLE_13' ),
        ( 'Spell Resistance (CL: 9)',                  '_SPELL_RESISTANCE_9' ),
        ( 'Spell Resistance (CL: 15)',                 '_SPELL_RESISTANCE_15' ),
        ( 'Spellstaff',                                '424' ),
        ( 'Spike Growth (CL: 9)',                      '_SPIKE_GROWTH_9' ),
        ( 'Stinking Cloud (CL: 5)',                    '_STINKING_CLOUD_5' ),
        ( 'Stone Bones (CL: 3)',                       '465' ),
        ( 'Stone to Flesh (CL: 5)',                    '_STONE_TO_FLESH_5' ),
        ( 'Stonehold (CL: 11)',                        '482' ),
        ( 'Stoneskin (CL: 7)',                         '_STONESKIN_7' ),
        ( 'Storm of Vengeance (CL: 17)',               '_STORM_OF_VENGEANCE_17' ),
        ( 'Summon Creature I (CL: 2)',                 '_SUMMON_CREATURE_I_2' ),
        ( 'Summon Creature I (CL: 5)',                 '_SUMMON_CREATURE_I_5' ),
        ( 'Summon Creature II (CL: 3)',                '_SUMMON_CREATURE_II_3' ),
        ( 'Summon Creature III (CL: 5)',               '_SUMMON_CREATURE_III_5' ),
        ( 'Summon Creature IV (CL: 7)',                '_SUMMON_CREATURE_IV_7' ),
        ( 'Summon Creature V (CL: 9)',                 '_SUMMON_CREATURE_V_9' ),
        ( 'Summon Creature VI (CL: 11)',               '_SUMMON_CREATURE_VI_11' ),
        ( 'Summon Creature VII (CL: 13)',              '_SUMMON_CREATURE_VII_13' ),
        ( 'Summon Creature VIII (CL: 15)',             '_SUMMON_CREATURE_VIII_15' ),
        ( 'Summon Creature IX (CL: 17)',               '_SUMMON_CREATURE_IX_17' ),
        ( 'Summon Elemental: Air',                     '418' ),
        ( 'Summon Elemental: Earth',                   '420' ),
        ( 'Summon Elemental: Fire',                    '421' ),
        ( 'Summon Elemental: Water',                   '419' ),
        ( 'Sunbeam (CL: 13)',                          '_SUNBEAM_13' ),
        ( 'Sunburst (CL: 20)',                         '_SUNBURST_20' ),
        ( 'Talk to',                                   '536' ),
        ( 'Tanglefoot Bag',                            '_GRENADE_TANGLE_1' ),
        ( 'Tasha''s Hideous Laughter (CL: 7)',         '_TASHAS_HIDEOUS_LAUGHTER_7' ),
        ( 'Teleport projectile',                       '500' ),
        ( 'Tenser''s Transformation (CL: 11)',         '_TENSERS_TRANSFORMATION_11' ),
        ( 'Thunderstone',                              '_GRENADE_THUNDERSTONE_1' ),
        ( 'Tide of Battle (CL: 17)',                   '426' ),
        ( 'Time Stop (CL: 17)',                        '_TIME_STOP_17' ),
        ( 'Transmogrifying Wand',                      '446' ),
        ( 'True Seeing (CL: 9)',                       '_TRUE_SEEING_9' ),
        ( 'True Strike (CL: 5)',                       '_TRUE_STRIKE_5' ),
        ( 'Ultravision (CL: 3)',                       '_DARKVISION_3' ),
        ( 'Ultravision (CL: 6)',                       '_DARKVISION_6' ),
        ( 'Undeath to Death (CL: 11)',                 '466' ),
        ( 'Undeaths Eternal Foe (CL: 20)',             '_UNDEATHS_ETERNAL_FOE_20' ),
        ( 'Unique Power',                              '_UNIQUE_POWER' ),
        ( 'Unique Power Self Only',                    '_UNIQUE_POWER_SELF_ONLY' ),
        ( 'Vampiric Touch (CL: 5)',                    '_VAMPIRIC_TOUCH_5' ),
        ( 'Vine Mine (CL: 9)',                         '467' ),
        ( 'Virtue (CL: 1)',                            '_VIRTUE_1' ),
        ( 'Wail of the Banshee (CL: 17)',              '_WAIL_OF_THE_BANSHEE_17' ),
        ( 'Wall of Fire (CL: 9)',                      '_WALL_OF_FIRE_9' ),
        ( 'War Cry (CL: 7)',                           '_WAR_CRY_7' ),
        ( 'Web (CL: 3)',                               '_WEB_3' ),
        ( 'Weird (CL: 17)',                            '_WEIRD_17' ),
        ( 'Word of Faith (CL: 13)',                    '_WORD_OF_FAITH_13' ),
        ( 'Wounding Whispers (CL: 9)',                 '_WOUNDING_WHISPERS_9' ),
        // The trailing info row:
        ( nil, 'IP_CONST_CASTSPELL' )
      );

    // The number of uses for spell-casting item properties.
    IP_CONST_CASTSPELL_NUMUSES_NAME: array[0..13] of pchar =
      ( 'Single use',
        '5 charges per use',
        '4 charges per use',
        '3 charges per use',
        '2 charges per use',
        '1 charge per use',
        '0 charges per use',
        '1 use per day',
        '2 uses per day',
        '3 uses per day',
        '4 uses per day',
        '5 uses per day',
        'Unlimited use',
        // The trailing info row:
        'IP_CONST_CASTSPELL_NUMUSES' );

    // The classes for item properties.
    // IP_CONST_CLASS is incomplete, containing only the base classes.
    // Use CLASS_TYPE_ instead -- same set of indices.

    // The spellcasting classes for item properties.
    IP_CONST_CLASS_CASTER: array[0..7] of StringPair =
      ( ( 'Bard',      nil ),
        ( 'Cleric',    nil ),
        ( 'Druid',     nil ),
        ( 'Paladin',   nil ),
        ( 'Ranger',    nil ),
        ( 'Sorcerer',  nil ),
        ( 'Wizard',    nil ),
        // The trailing info row:
        ( nil, 'IP_CONST_CLASS' )
      );

    // The weight reduction of contents item properties.
    IP_CONST_CONTAINERWEIGHTRED_NAME: array[0..5] of pchar =
      ( '20%',
        '40%',
        '60%',
        '80%',
        '100%',
        // The trailing info row:
        'IP_CONST_CONTAINERWEIGHTRED' );

    // The bonus damage item properties.
    IP_CONST_DAMAGEBONUS: array[0..30] of StringPair =
      ( ( '1',    nil ),
        ( '2',    nil ),
        ( '3',    nil ),
        ( '4',    nil ),
        ( '5',    nil ),
        ( '6',    nil ),
        ( '7',    nil ),
        ( '8',    nil ),
        ( '9',    nil ),
        ( '10',   nil ),
        ( '11',   '21' ),
        ( '12',   '22' ),
        ( '13',   '23' ),
        ( '14',   '24' ),
        ( '15',   '25' ),
        ( '16',   '26' ),
        ( '17',   '27' ),
        ( '18',   '28' ),
        ( '19',   '29' ),
        ( '20',   '30' ),
        ( '1d4',  nil ),
        ( '1d6',  nil ),
        ( '1d8',  nil ),
        ( '1d10', nil ),
        ( '1d12', nil ),
        ( '2d4',  nil ),
        ( '2d6',  nil ),
        ( '2d8',  nil ),
        ( '2d10', nil ),
        ( '2d12', nil ),
        // The trailing info row:
        ( nil, 'IP_CONST_DAMAGEBONUS' )
      );

    // The damage immunity item properties.
    IP_CONST_DAMAGEIMMUNITY_NAME: array[0..7] of pchar =
      ( '5%',
        '10%',
        '25%',
        '50%',
        '75%',
        '90%',
        '100%',
        // The trailing info row:
        'IP_CONST_DAMAGEIMMUNITY' );

    // The power needed to penetrate damage reduction item properties.
    IP_CONST_DAMAGEREDUCTION: array[0..20] of StringPair =
      ( ( '+1',  '_1' ),
        ( '+2',  '_2' ),
        ( '+3',  '_3' ),
        ( '+4',  '_4' ),
        ( '+5',  '_5' ),
        ( '+6',  '_6' ),
        ( '+7',  '_7' ),
        ( '+8',  '_8' ),
        ( '+9',  '_9' ),
        ( '+10', '_10' ),
        ( '+11', '_11' ),
        ( '+12', '_12' ),
        ( '+13', '_13' ),
        ( '+14', '_14' ),
        ( '+15', '_15' ),
        ( '+16', '_16' ),
        ( '+17', '_17' ),
        ( '+18', '_18' ),
        ( '+19', '_19' ),
        ( '+20', '_20' ),
        // The trailing info row:
        ( nil, 'IP_CONST_DAMAGEREDUCTION' )
       );

    // The amounts for damage resistance item properties.
    IP_CONST_DAMAGERESIST_NAME: array[0..10] of pchar =
      ( '5',
        '10',
        '15',
        '20',
        '25',
        '30',
        '35',
        '40',
        '45',
        '50',
        // The trailing info row:
        'IP_CONST_DAMAGERESIST' );

    // The amounts for damage reduction item properties.
    IP_CONST_DAMAGESOAK_NAME: array[0..10] of pchar =
      ( '5 HP',
        '10 HP',
        '15 HP',
        '20 HP',
        '25 HP',
        '30 HP',
        '35 HP',
        '40 HP',
        '45 HP',
        '50 HP',
        // The trailing info row:
        'IP_CONST_DAMAGESOAK' );

    // The damage types for item properties.
    IP_CONST_DAMAGETYPE_NAME: array[0..12] of pchar =
      ( 'Bludgeoning',
        'Piercing',
        'Slashing',
        'Acid',
        'Cold',
        'Divine',
        'Electrical',
        'Fire',
        'Magical',
        'Negative',
        'Positive',
        'Sonic',
        // The trailing info row:
        'IP_CONST_DAMAGETYPE' );

    // The damage vulnerability item properties.
    IP_CONST_DAMAGEVULNERABILITY_NAME: array[0..7] of pchar =
      ( '5%',
        '10%',
        '25%',
        '50%',
        '75%',
        '90%',
        '100%',
        // The trailing info row:
        'IP_CONST_DAMAGEVULNERABILITY' );

    // The feat item properties.
    IP_CONST_FEAT: array[0..53] of StringPair =
      ( ( 'Alertness',                                '_ALERTNESS' ),
        ( 'Ambidexterity',                            '_AMBIDEXTROUS' ),
        ( 'Armor Proficiency (heavy)',                '_ARMOR_PROF_HEAVY' ),
        ( 'Armor Proficiency (light)',                '_ARMOR_PROF_LIGHT' ),
        ( 'Armor Proficiency (medium)',               '_ARMOR_PROF_MEDIUM' ),
        ( 'Cleave',                                   '_CLEAVE' ),
        ( 'Combat Casting',                           '_COMBAT_CASTING' ),
        ( 'Disarm',                                   '_DISARM' ),
        ( 'Disarm (Whip)',                            '_DISARM_WHIP' ),
        ( 'Dodge',                                    '_DODGE' ),
        ( 'Extra Turning',                            '_EXTRA_TURNING' ),
        ( 'Hide in Plain Sight',                      '_HIDE_IN_PLAIN_SIGHT' ),
        ( 'Improved Critical (unarmed strike)',       '_IMPCRITUNARM' ),
        ( 'Knockdown',                                '_KNOCKDOWN' ),
        ( 'Mobility',                                 '_MOBILITY' ),
        ( 'Mount Actions',                            '40' ),
        ( 'Mounted Archery',                          '42' ),
        ( 'Mounted Combat',                           '41' ),
        ( 'Player Tool 1',                            '_PLAYER_TOOL_01' ),
        ( 'Player Tool 2',                            '_PLAYER_TOOL_02' ),
        ( 'Player Tool 3',                            '_PLAYER_TOOL_03' ),
        ( 'Player Tool 4',                            '_PLAYER_TOOL_04' ),
        ( 'Player Tool 5',                            '_PLAYER_TOOL_05' ),
        ( 'Player Tool 6',                            '_PLAYER_TOOL_06' ),
        ( 'Player Tool 7',                            '_PLAYER_TOOL_07' ),
        ( 'Player Tool 8',                            '_PLAYER_TOOL_08' ),
        ( 'Player Tool 9',                            '_PLAYER_TOOL_09' ),
        ( 'Player Tool 10',                           '_PLAYER_TOOL_10' ),
        ( 'Point Blank Shot',                         '_POINTBLANK' ),
        ( 'Power Attack',                             '_POWERATTACK' ),
        ( 'Rapid Shot',                               '_RAPID_SHOT' ),
        ( 'Shield Proficiency',                       '_SHIELD_PROFICIENCY' ),
        ( 'Sneak Attack (+1d6)',                      '_SNEAK_ATTACK_1D6' ),
        ( 'Sneak Attack (+2d6)',                      '_SNEAK_ATTACK_2D6' ),
        ( 'Sneak Attack (+3d6)',                      '_SNEAK_ATTACK_3D6' ),
        ( 'Sneak Attack (+5d6)',                      '_SNEAK_ATTACK_5D6' ),
        ( 'Spell Focus (Abjuration)',                 '_SPELLFOCUSABJ' ),
        ( 'Spell Focus (Conjuration)',                '_SPELLFOCUSCON' ),
        ( 'Spell Focus (Divination)',                 '_SPELLFOCUSDIV' ),
        ( 'Spell Focus (Enchantment)',                '_SPELLFOCUSENC' ),
        ( 'Spell Focus (Evocation)',                  '_SPELLFOCUSEVO' ),
        ( 'Spell Focus (Illusion)',                   '_SPELLFOCUSILL' ),
        ( 'Spell Focus (Necromancy)',                 '_SPELLFOCUSNEC' ),
        ( 'Spell Penetration',                        '_SPELLPENETRATION' ),
        ( 'Two-Weapon Fighting',                      '_TWO_WEAPON_FIGHTING' ),
        ( 'Use Poison',                               '_USE_POISON' ),
        ( 'Weapon Finesse',                           '_WEAPFINESSE' ),
        ( 'Weapon Proficiency (creature)',            '_WEAPON_PROF_CREATURE' ),
        ( 'Weapon Proficiency (exotic)',              '_WEAPON_PROF_EXOTIC' ),
        ( 'Weapon Proficiency (martial)',             '_WEAPON_PROF_MARTIAL' ),
        ( 'Weapon Proficiency (simple)',              '_WEAPON_PROF_SIMPLE' ),
        ( 'Weapon Specialization (unarmed strike)',   '_WEAPSPEUNARM' ),
        ( 'Whirlwind Attack',                         '_WHIRLWIND' ),
        // The trailing info row:
        ( nil, 'IP_CONST_FEAT' )
      );

    // The miscellaneous immunity item properties.
    IP_CONST_IMMUNITYMISC: array[0..10] of StringPair =
      ( ( 'Critical hits',         nil ),
        ( 'Death magic',           nil ),
        ( 'Disease',               nil ),
        ( 'Fear',                  nil ),
        ( 'Knockdown',             nil ),
        ( 'Level/ability drain',   '_LEVEL_ABIL_DRAIN' ),
        ( 'Mind-affecting spells', '_MINDSPELLS' ),
        ( 'Paralysis',             nil ),
        ( 'Poison',                nil ),
        ( 'Sneak attack',          '_BACKSTAB' ),
        // The trailing info row:
        ( nil, 'IP_CONST_IMMUNITYMISC' )
      );

    // The spell immunity item properties.
    IP_CONST_IMMUNITYSPELL: array[0..169] of StringPair =
      ( ( 'Acid Fog',                             '_ACID_FOG' ),
        ( 'Acid Splash',                          '192' ),
        ( 'Aid',                                  '_AID' ),
        ( 'Aura of Vitality',                     '_AURA_OF_VITALITY' ),
        ( 'Ball Lightning',                       '225' ),
        ( 'Bane',                                 '208' ),
        ( 'Banishment',                           '195' ),
        ( 'Barkskin',                             '_BARKSKIN' ),
        ( 'Battletide',                           '226' ),
        ( 'Bestow Curse',                         '_BESTOW_CURSE' ),
        ( 'Bigby''s Clenched Fist',               '213' ),
        ( 'Bigby''s Crushing Hand',               '214' ),
        ( 'Bigby''s Forceful Hand',               '211' ),
        ( 'Bigby''s Grasping Hand',               '212' ),
        ( 'Bigby''s Interposing Hand',            '240' ),
        ( 'Blindness/Deafness',                   '_BLINDNESS_AND_DEAFNESS' ),
        ( 'Breath, Petrification',                '218' ),
        ( 'Burning Hands',                        '_BURNING_HANDS' ),
        ( 'Call Lightning',                       '_CALL_LIGHTNING' ),
        ( 'Captivating Song',                     '238' ),
        ( 'Chain Lightning',                      '_CHAIN_LIGHTNING' ),
        ( 'Charm Monster',                        '_CHARM_MONSTER' ),
        ( 'Charm Person',                         '_CHARM_PERSON' ),
        ( 'Charm Person or Animal',               '_CHARM_PERSON_OR_ANIMAL' ),
        ( 'Circle of Death',                      '_CIRCLE_OF_DEATH' ),
        ( 'Circle of Doom',                       '_CIRCLE_OF_DOOM' ),
        ( 'Cloud of Bewilderment',                '237' ),
        ( 'Cloudkill',                            '_CLOUDKILL' ),
        ( 'Color Spray',                          '_COLOR_SPRAY' ),
        ( 'Combust',                              '227' ),
        ( 'Cone of Cold',                         '_CONE_OF_COLD' ),
        ( 'Confusion',                            '_CONFUSION' ),
        ( 'Contagion',                            '_CONTAGION' ),
        ( 'Control Undead',                       '_CONTROL_UNDEAD' ),
        ( 'Crumble',                              '221' ),
        ( 'Cure Minor Wounds',                    '_CURE_MINOR_WOUNDS' ),
        ( 'Cure Light Wounds',                    '_CURE_LIGHT_WOUNDS' ),
        ( 'Cure Moderate Wounds',                 '_CURE_MODERATE_WOUNDS' ),
        ( 'Cure Serious Wounds',                  '_CURE_SERIOUS_WOUNDS' ),
        ( 'Cure Critical Wounds',                 '_CURE_CRITICAL_WOUNDS' ),
        ( 'Darkness',                             '_DARKNESS' ),
        ( 'Daze',                                 '_DAZE' ),
        ( 'Death Ward',                           '_DEATH_WARD' ),
        ( 'Delayed Blast Fireball',               '_DELAYED_BLAST_FIREBALL' ),
        ( 'Dirge',                                '204' ),
        ( 'Dismissal',                            '_DISMISSAL' ),
        ( 'Dispel Magic',                         '_DISPEL_MAGIC' ),
        ( 'Divine Favor',                         '188' ),
        ( 'Dominate Animal',                      '_DOMINATE_ANIMAL' ),
        ( 'Dominate Monster',                     '_DOMINATE_MONSTER' ),
        ( 'Dominate Person',                      '_DOMINATE_PERSON' ),
        ( 'Doom',                                 '_DOOM' ),
        ( 'Drown',                                '201' ),
        ( 'Eagle''s Splendor',                    '_EAGLE_SPLEDOR' ),
        ( 'Electric Jolt',                        '202' ),
        ( 'Energy Drain',                         '_ENERGY_DRAIN' ),
        ( 'Enervation',                           '_ENERVATION' ),
        ( 'Entangle',                             '_ENTANGLE' ),
        ( 'Evard''s Black Tentacles',             '_EVARDS_BLACK_TENTACLES' ),
        ( 'Fear',                                 '_FEAR' ),
        ( 'Feeblemind',                           '_FEEBLEMIND' ),
        ( 'Find Traps',                           '_FIND_TRAPS' ),
        ( 'Finger of Death',                      '_FINGER_OF_DEATH' ),
        ( 'Fire Storm',                           '_FIRE_STORM' ),
        ( 'Fireball',                             '_FIREBALL' ),
        ( 'Firebrand',                            '203' ),
        ( 'Flame Arrow',                          '_FLAME_ARROW' ),
        ( 'Flame Lash',                           '_FLAME_LASH' ),
        ( 'Flame Strike',                         '_FLAME_STRIKE' ),
        ( 'Flare',                                '190' ),
        ( 'Flesh to Stone',                       '216' ),
        ( 'Fox''s Cunning',                       '_FOXS_CUNNING' ),
        ( 'Freedom of Movement',                  '_FREEDOM_OF_MOVEMENT' ),
        ( 'Gaze, Petrification',                  '220' ),
        ( 'Gedlee''s Electric Loop',              '228' ),
        ( 'Glyph of Warding',                     '236' ),
        ( 'Grease',                               '_GREASE' ),
        ( 'Great Thunderclap',                    '224' ),
        ( 'Greater Bull''s Strength',             '_GREATER_BULLS_STRENGTH' ),
        ( 'Greater Cat''s Grace',                 '_GREATER_CATS_GRACE' ),
        ( 'Greater Dispelling',                   '_GREATER_DISPELLING' ),
        ( 'Greater Eagle''s Splendor',            '_GREATER_EAGLES_SPLENDOR' ),
        ( 'Greater Endurance',                    '_GREATER_ENDURANCE' ),
        ( 'Greater Fox''s Cunning',               '_GREATER_FOXS_CUNNING' ),
        ( 'Greater Owl''s Wisdom',                '_GREATER_OWLS_WISDOM' ),
        ( 'Greater Planar Binding',               '_GREATER_PLANAR_BINDING' ),
        ( 'Greater Shadow Conjuration',           '_GREATER_SHADOW_CONJURATION' ),
        ( 'Greater Spell Breach',                 '_GREATER_SPELL_BREACH' ),
        ( 'Hammer of the Gods',                   '_HAMMER_OF_THE_GODS' ),
        ( 'Harm',                                 '_HARM' ),
        ( 'Heal',                                 '_HEAL' ),
        ( 'Healing Circle',                       '_HEALING_CIRCLE' ),
        ( 'Healing Sting',                        '223' ),
        ( 'Hold Animal',                          '_HOLD_ANIMAL' ),
        ( 'Hold Monster',                         '_HOLD_MONSTER' ),
        ( 'Hold Person',                          '_HOLD_PERSON' ),
        ( 'Horizikaul''s Boom',                   '229' ),
        ( 'Ice Dagger',                           '234' ),
        ( 'Implosion',                            '_IMPLOSION' ),
        ( 'Improved Invisibility',                '_IMPROVED_INVISIBILITY' ),
        ( 'Incendiary Cloud',                     '_INCENDIARY_CLOUD' ),
        ( 'Inferno',                              '205' ),
        ( 'Infestation of Maggots',               '222' ),
        ( 'Inflict Minor Wounds',                 '196' ),
        ( 'Inflict Light Wounds',                 '197' ),
        ( 'Inflict Moderate Wounds',              '198' ),
        ( 'Inflict Serious Wounds',               '199' ),
        ( 'Inflict Critical Wounds',              '200' ),
        ( 'Invisibility Purge',                   '_INVISIBILITY_PURGE' ),
        ( 'Isaac''s Greater Missile Storm',       '207' ),
        ( 'Isaac''s Lesser Missile Storm',        '206' ),
        ( 'Legend Lore',                          '_LEGEND_LORE' ),
        ( 'Lesser Dispel',                        '_LESSER_DISPEL' ),
        ( 'Lesser Planar Binding',                '_LESSER_PLANAR_BINDING' ),
        ( 'Lesser Spell Breach',                  '_LESSER_SPELL_BREACH' ),
        ( 'Lightning Bolt',                       '_LIGHTNING_BOLT' ),
        ( 'Magic Circle against Alignment',       '_MAGIC_CIRCLE_AGAINST_ALIGNMENT' ),
        ( 'Magic Missile',                        '_MAGIC_MISSILE' ),
        ( 'Mass Blindness/Deafness',              '_MASS_BLINDNESS_AND_DEAFNESS' ),
        ( 'Mass Charm',                           '_MASS_CHARM' ),
        ( 'Mass Heal',                            '_MASS_HEAL' ),
        ( 'Melf''s Acid Arrow',                   '_MELFS_ACID_ARROW' ),
        ( 'Mestil''s Acid Breath',                '230' ),
        ( 'Meteor Swarm',                         '_METEOR_SWARM' ),
        ( 'Mind Fog',                             '_MIND_FOG' ),
        ( 'Mordenkainen''s Disjunction',          '_MORDENKAINENS_DISJUNCTION' ),
        ( 'Owl''s Wisdom',                        '_OWLS_WISDOM' ),
        ( 'Phantasmal Killer',                    '_PHANTASMAL_KILLER' ),
        ( 'Planar Binding',                       '_PLANAR_BINDING' ),
        ( 'Poison',                               '_POISON' ),
        ( 'Power Word, Kill',                     '_POWER_WORD_KILL' ),
        ( 'Power Word, Stun',                     '_POWER_WORD_STUN' ),
        ( 'Prismatic Spray',                      '_PRISMATIC_SPRAY' ),
        ( 'Psionic Mind Blast 10m Radius',        '239' ),
        ( 'Quillfire',                            '193' ),
        ( 'Ray of Enfeeblement',                  '_RAY_OF_ENFEEBLEMENT' ),
        ( 'Ray of Frost',                         '_RAY_OF_FROST' ),
        ( 'Regenerate',                           '_REGENERATE' ),
        ( 'Scare',                                '_SCARE' ),
        ( 'Scintillating Sphere',                 '231' ),
        ( 'Searing Light',                        '_SEARING_LIGHT' ),
        ( 'Shades',                               '_SHADES' ),
        ( 'Shadow Conjuration',                   '_SHADOW_CONJURATION' ),
        ( 'Shield',                               '191' ),
        ( 'Silence',                              '_SILENCE' ),
        ( 'Slay Living',                          '_SLAY_LIVING' ),
        ( 'Sleep',                                '_SLEEP' ),
        ( 'Sleep',                                '215' ),
        ( 'Slow',                                 '_SLOW' ),
        ( 'Sound Burst',                          '_SOUND_BURST' ),
        ( 'Spike Growth',                         '209' ),
        ( 'Stinking Cloud',                       '_STINKING_CLOUD' ),
        ( 'Stone to Flesh',                       '217' ),
        ( 'Stonehold',                            '235' ),
        ( 'Stoneskin',                            '_STONESKIN' ),
        ( 'Storm of Vengeance',                   '_STORM_OF_VENGEANCE' ),
        ( 'Sunbeam',                              '_SUNBEAM' ),
        ( 'Sunburst',                             '194' ),
        ( 'Tasha''s Hideous Laughter',            '210' ),
        ( 'Touch, Petrification',                 '219' ),
        ( 'True Strike',                          '189' ),
        ( 'Undeath to Death',                     '232' ),
        ( 'Vine Mine',                            '233' ),
        ( 'Virtue',                               '_VIRTUE' ),
        ( 'Wail of the Banshee',                  '_WAIL_OF_THE_BANSHEE' ),
        ( 'War Cry',                              '_WAR_CRY' ),
        ( 'Web',                                  '_WEB' ),
        ( 'Weird',                                '_WEIRD' ),
        ( 'Word of Faith',                        '_WORD_OF_FAITH' ),
        // The trailing info row:
        ( nil, 'IP_CONST_IMMUNITYSPELL' )
      );

    // The brightness of light item properties.
    IP_CONST_LIGHTBRIGHTNESS_NAME: array[0..4] of pchar =
      ( 'Dim',
        'Low',
        'Normal',
        'Bright',
        // The trailing info row:
        'IP_CONST_LIGHTBRIGHTNESS' );

    // The color of light item properties.
    IP_CONST_LIGHTCOLOR_NAME: array[0..7] of pchar =
      ( 'Blue',
        'Green',
        'Orange',
        'Purple',
        'Red',
        'White',
        'Yellow',
        // The trailing info row:
        'IP_CONST_LIGHTCOLOR' );

    // The material item properties.
    IP_CONST_MATERIAL: array[0..78] of StringPair =
      ( ( 'Adamantine',                 '1' ),
        ( 'Bone',                       '16' ),
        ( 'Brass',                      '2' ),
        ( 'Bronze',                     '3' ),
        ( 'Carbon',                     '4' ),
        ( 'Cloth',                      '33' ),
        ( 'Cold Iron',                  '5' ),
        ( 'Copper',                     '6' ),
        ( 'Cotton',                     '34' ),
        ( 'Darksteel',                  '7' ),
        ( 'Elemental',                  '46' ),
        ( 'Elemental, Air',             '47' ),
        ( 'Elemental, Earth',           '48' ),
        ( 'Elemental, Fire',            '49' ),
        ( 'Elemental, Water',           '50' ),
        ( 'Gem',                        '51' ),
        ( 'Gem, Alexandrite',           '52' ),
        ( 'Gem, Amethyst',              '53' ),
        ( 'Gem, Aventurine',            '54' ),
        ( 'Gem, Beljuril',              '55' ),
        ( 'Gem, Bloodstone',            '56' ),
        ( 'Gem, Blue Diamond',          '57' ),
        ( 'Gem, Canary Diamond',        '58' ),
        ( 'Gem, Crystal, Deep',         '76' ),
        ( 'Gem, Crystal, Mundane',      '77' ),
        ( 'Gem, Diamond',               '59' ),
        ( 'Gem, Emerald',               '60' ),
        ( 'Gem, Fire Agate',            '61' ),
        ( 'Gem, Fire Opal',             '62' ),
        ( 'Gem, Flourspar',             '63' ),
        ( 'Gem, Garnet',                '64' ),
        ( 'Gem, Greenstone',            '65' ),
        ( 'Gem, Jacinth',               '66' ),
        ( 'Gem, Kings Tear',            '67' ),
        ( 'Gem, Malachite',             '68' ),
        ( 'Gem, Obsidian',              '69' ),
        ( 'Gem, Phenalope',             '70' ),
        ( 'Gem, Rogue Stone',           '71' ),
        ( 'Gem, Ruby',                  '72' ),
        ( 'Gem, Sapphire',              '73' ),
        ( 'Gem, Star Sapphire',         '74' ),
        ( 'Gem, Topaz',                 '75' ),
        ( 'Gold',                       '8' ),
        ( 'Hide',                       '17' ),
        ( 'Hide, Dragon, Black',        '21' ),
        ( 'Hide, Dragon, Blue',         '22' ),
        ( 'Hide, Dragon, Brass',        '23' ),
        ( 'Hide, Dragon, Bronze',       '24' ),
        ( 'Hide, Dragon, Copper',       '25' ),
        ( 'Hide, Dragon, Gold',         '26' ),
        ( 'Hide, Dragon, Green',        '27' ),
        ( 'Hide, Dragon, Red',          '28' ),
        ( 'Hide, Dragon, Silver',       '29' ),
        ( 'Hide, Dragon, White',        '30' ),
        ( 'Hide, Salamander',           '18' ),
        ( 'Hide, Umber Hulk',           '19' ),
        ( 'Hide, Wyvern',               '20' ),
        ( 'Iron',                       '9' ),
        ( 'Lead',                       '10' ),
        ( 'Leather',                    '31' ),
        ( 'Mithral',                    '11' ),
        ( 'Platinum',                   '12' ),
        ( 'Scale',                      '32' ),
        ( 'Silk',                       '35' ),
        ( 'Silver',                     '13' ),
        ( 'Silver, Alchemical',         '14' ),
        ( 'Steel',                      '15' ),
        ( 'Unknown',                    '0' ),
        ( 'Wood',                       '37' ),
        ( 'Wood, Ash',                  '41' ),
        ( 'Wood, Cedar',                '45' ),
        ( 'Wood, Darkwood, Zalantar',   '40' ),
        ( 'Wood, Duskwood',             '39' ),
        ( 'Wood, Ironwood',             '38' ),
        ( 'Wood, Oak',                  '43' ),
        ( 'Wood, Pine',                 '44' ),
        ( 'Wood, Yew',                  '42' ),
        ( 'Wool',                       '36' ),
        // The trailing info row:
        ( nil, '' )
      );

    // The monster damage item properties.
    IP_CONST_MONSTERDAMAGE_NAME: array[0..57] of pchar =
      ( '1d2',
        '1d3',
        '1d4',
        '2d4',
        '3d4',
        '4d4',
        '5d4',
        '1d6',
        '2d6',
        '3d6',
        '4d6',
        '5d6',
        '6d6',
        '7d6',
        '8d6',
        '9d6',
        '10d6',
        '1d8',
        '2d8',
        '3d8',
        '4d8',
        '5d8',
        '6d8',
        '7d8',
        '8d8',
        '9d8',
        '10d8',
        '1d10',
        '2d10',
        '3d10',
        '4d10',
        '5d10',
        '6d10',
        '7d10',
        '8d10',
        '9d10',
        '10d10',
        '1d12',
        '2d12',
        '3d12',
        '4d12',
        '5d12',
        '6d12',
        '7d12',
        '8d12',
        '9d12',
        '10d12',
        '1d20',
        '2d20',
        '3d20',
        '4d20',
        '5d20',
        '6d20',
        '7d20',
        '8d20',
        '9d20',
        '10d20',
        // The trailing info row:
        'IP_CONST_MONSTERDAMAGE' );

    // The on-hit item properties (excluding on-hit: cast spell).
    IP_CONST_ONHIT: array[0..25] of StringTriple =
      ( ( 'Ability drain',           '_ABILITYDRAIN',       'abi' ),
        ( 'Blindness',               nil,                   'dur' ),
        ( 'Confusion',               nil,                   'dur' ),
        ( 'Daze',                    nil,                   'dur' ),
        ( 'Deafness',                nil,                   'dur' ),
        ( 'Disease',                 nil,                   'dis' ),
        ( 'Dispel magic',            '_DISPELMAGIC',        nil ),
        ( 'Doom',                    nil,                   'dur' ),
        ( 'Fear',                    nil,                   'dur' ),
        ( 'Greater dispelling',      '_GREATERDISPEL',      nil ),
        ( 'Hold',                    nil,                   'dur' ),
        ( 'Knock',                   nil,                   nil ),
        ( 'Lesser dispel',           '_LESSERDISPEL',       nil ),
        ( 'Level drain',             '_LEVELDRAIN',         nil ),
        ( 'Mord''s disjunction',     '_MORDSDISJUNCTION',   nil ),
        ( 'Poison',                  '_ITEMPOISON',         'itp' ),
        ( 'Silence',                 nil,                   'dur' ),
        ( 'Slay alignment group',    '_SLAYALIGNMENTGROUP', 'alg' ),
        ( 'Slay race',               '_SLAYRACE',           'rac' ),
        ( 'Slay specific alignment', '_SLAYALIGNMENT',      'ali' ),
        ( 'Sleep',                   nil,                   'dur' ),
        ( 'Slow',                    nil,                   'dur' ),
        ( 'Stun',                    nil,                   'dur' ),
        ( 'Vorpal',                  nil,                   nil ),
        ( 'Wounding',                nil,                   nil ),
        // The trailing info row:
        ( nil, 'IP_CONST_ONHIT', nil )
      );

    // The on-hit: cast spell item properties.
    IP_CONST_ONHIT_CASTSPELL: array[0..123] of StringPair =
      ( ( 'Acid Fog',                                      '_ACID_FOG' ),
        ( 'Acid Splash',                                   '_ACID_SPLASH' ),
        ( 'Balagarn''s Iron Horn',                         '_BALAGARNSIRONHORN' ),
        ( 'Ball Lightning',                                '_BALL_LIGHTNING' ),
        ( 'Bane',                                          '_BANE' ),
        ( 'Banishment',                                    '_BANISHMENT' ),
        ( 'Bestow Curse',                                  '_BESTOW_CURSE' ),
        ( 'Bigby''s Clenched Fist',                        '_BIGBYS_CLENCHED_FIST' ),
        ( 'Bigby''s Crushing Hand',                        '_BIGBYS_CRUSHING_HAND' ),
        ( 'Bigby''s Forceful Hand',                        '_BIGBYS_FORCEFUL_HAND' ),
        ( 'Bigby''s Grasping Hand',                        '_BIGBYS_GRASPING_HAND' ),
        ( 'Bigby''s Interposing Hand',                     '_BIGBYS_INTERPOSING_HAND' ),
        ( 'Blessed Bolt Properties (Slay Rakshasa)',       '_ONHIT_SLAYRAKSHASA' ),
        ( 'Blindness/Deafness',                            '_BLINDNESS_AND_DEAFNESS' ),
        ( 'Bombardment',                                   '_BOMBARDMENT' ),
        ( 'Call Lightning',                                '_CALL_LIGHTNING' ),
        ( 'Chain Lightning',                               '_CHAIN_LIGHTNING' ),
        ( 'Chaos Shield (2% chance)',                      '_ONHIT_CHAOSSHIELD' ),
        ( 'Cloudkill',                                     '_CLOUDKILL' ),
        ( 'Combust',                                       '_COMBUST' ),
        ( 'Confusion',                                     '_CONFUSION' ),
        ( 'Contagion',                                     '_CONTAGION' ),
        ( 'Creeping Doom',                                 '_CREEPING_DOOM' ),
        ( 'Crumble',                                       '_CRUMBLE' ),
        ( 'Dark Fire (Immolate)',                          '_ONHIT_DARKFIRE' ),
        ( 'Darkness',                                      '_DARKNESS' ),
        ( 'Daze',                                          '_DAZE' ),
        ( 'Deafening Clang (5 rounds; DC 15)',             '_DEAFENING_CLNG' ),
        ( 'Delayed Blast Fireball',                        '_DELAYED_BLAST_FIREBALL' ),
        ( 'Destruction',                                   '_DESTRUCTION' ),
        ( 'Dismissal',                                     '_DISMISSAL' ),
        ( 'Dispel Magic',                                  '_DISPEL_MAGIC' ),
        ( 'Doom',                                          '_DOOM' ),
        ( 'Drown',                                         '_DROWN' ),
        ( 'Earthquake',                                    '_EARTHQUAKE' ),
        ( 'Electric Jolt',                                 '_ELECTRIC_JOLT' ),
        ( 'Energy Drain',                                  '_ENERGY_DRAIN' ),
        ( 'Enervation',                                    '_ENERVATION' ),
        ( 'Entangle',                                      '_ENTANGLE' ),
        ( 'Evard''s Black Tentacles',                      '_EVARDS_BLACK_TENTACLES' ),
        ( 'Evil Blight',                                   '_EVIL_BLIGHT' ),
        ( 'Fear',                                          '_FEAR' ),
        ( 'Feeblemind',                                    '_FEEBLEMIND' ),
        ( 'Fire Storm',                                    '_FIRE_STORM' ),
        ( 'Fireball',                                      '_FIREBALL' ),
        ( 'Firebrand',                                     '_FIREBRAND' ),
        ( 'Flame Lash',                                    '_FLAME_LASH' ),
        ( 'Flame Strike',                                  '_FLAME_STRIKE' ),
        ( 'Flaming Hide',                                  '_ONHITFLAMINGSKIN' ),
        ( 'Flaming Weapon Properties',                     '_ONHIT_FIREDAMAGE' ),
        ( 'Flare',                                         '_FLARE' ),
        ( 'Flesh to Stone',                                '_FLESH_TO_STONE' ),
        ( 'Freeze (Slow; DC 10 + caster level)',           '_FREEZE' ),
        ( 'Gedlee''s Electric Loop',                       '_GEDLEES_ELECTRIC_LOOP' ),
        ( 'Ghoul Touch',                                   '_GHOUL_TOUCH' ),
        ( 'Grease',                                        '_GREASE' ),
        ( 'Great Thunderclap',                             '_GREAT_THUNDERCLAP' ),
        ( 'Greater Dispelling',                            '_GREATER_DISPELLING' ),
        ( 'Greater Spell Breach',                          '_GREATER_SPELL_BREACH' ),
        ( 'Gust of Wind',                                  '_GUST_OF_WIND' ),
        ( 'Hammer of the Gods',                            '_HAMMER_OF_THE_GODS' ),
        ( 'Harm',                                          '_HARM' ),
        ( 'Hold Animal',                                   '_HOLD_ANIMAL' ),
        ( 'Hold Monster',                                  '_HOLD_MONSTER' ),
        ( 'Hold Person',                                   '_HOLD_PERSON' ),
        ( 'Horizikaul''s Boom',                            '_HORIZIKAULS_BOOM' ),
        ( 'Horrid Wilting',                                '_HORRID_WILTING' ),
        ( 'Ice Storm',                                     '_ICE_STORM' ),
        ( 'Implosion',                                     '_IMPLOSION' ),
        ( 'Incendiary Cloud',                              '_INCENDIARY_CLOUD' ),
        ( 'Inferno',                                       '_INFERNO' ),
        ( 'Infestation of Maggots',                        '_INFESTATION_OF_MAGGOTS' ),
        ( 'Intelligent Weapon',                            '_INTELLIGENT_WEAPON_ONHIT' ),
        ( 'Isaac''s Greater Missile Storm',                '_ISAACS_GREATER_MISSILE_STORM' ),
        ( 'Isaac''s Lesser Missile Storm',                 '_ISAACS_LESSER_MISSILE_STORM' ),
        ( 'Knockdown (monster only; DC 10 + caster level)','_KNOCKDOWN' ),
        ( 'Lesser Dispel',                                 '_LESSER_DISPEL' ),
        ( 'Lesser Spell Breach',                           '_LESSER_SPELL_BREACH' ),
        ( 'Light',                                         '_LIGHT' ),
        ( 'Lightning Bolt',                                '_LIGHTNING_BOLT' ),
        ( 'Magic Missile',                                 '_MAGIC_MISSILE' ),
        ( 'Mass Blindness/Deafness',                       '_MASS_BLINDNESS_AND_DEAFNESS' ),
        ( 'Mass Charm',                                    '_MASS_CHARM' ),
        ( 'Melf''s Acid Arrow',                            '_MELFS_ACID_ARROW' ),
        ( 'Mestil''s Acid Breath',                         '_MESTILS_ACID_BREATH' ),
        ( 'Meteor Swarm',                                  '_METEOR_SWARM' ),
        ( 'Mind Fog',                                      '_MIND_FOG' ),
        ( 'Negative Energy Burst',                         '_NEGATIVE_ENERGY_BURST' ),
        ( 'Paralysis (Gelatinous Cube Poison)',            '_PARALYZE_2' ),
        ( 'Paralyzing Touch (Demilich)',                   '_ONHITDEMILICHTOUCH' ),
        ( 'Paralyzing Touch (Dracolich)',                  '_ONHITDRACOLICHTOUCH' ),
        ( 'Phantasmal Killer',                             '_PHANTASMAL_KILLER' ),
        ( 'Planar Rift (Black Blade of Disaster)',         '_ONHIT_PLANARRIFT' ),
        ( 'Poison',                                        '_POISON' ),
        ( 'Power Word, Kill',                              '_POWER_WORD_KILL' ),
        ( 'Power Word, Stun',                              '_POWER_WORD_STUN' ),
        ( 'Quillfire',                                     '_QUILLFIRE' ),
        ( 'Ruin Armor (Bebilith)',                         '_ONHITRUINARMORBEBILITH' ),
        ( 'Scare',                                         '_SCARE' ),
        ( 'Scintillating Sphere',                          '_SCINTILLATING_SPHERE' ),
        ( 'Searing Light',                                 '_SEARING_LIGHT' ),
        ( 'Silence',                                       '_SILENCE' ),
        ( 'Sleep',                                         '_SLEEP' ),
        ( 'Slow',                                          '_SLOW' ),
        ( 'Sound Burst',                                   '_SOUND_BURST' ),
        ( 'Spike Growth',                                  '_SPIKE_GROWTH' ),
        ( 'Stinking Cloud',                                '_STINKING_CLOUD' ),
        ( 'Stone to Flesh',                                '_STONE_TO_FLESH' ),
        ( 'Stonehold',                                     '_STONEHOLD' ),
        ( 'Storm of Vengeance',                            '_STORM_OF_VENGEANCE' ),
        ( 'Sunbeam',                                       '_SUNBEAM' ),
        ( 'Sunburst',                                      '_SUNBURST' ),
        ( 'Tasha''s Hideous Laughter',                     '_TASHAS_HIDEOUS_LAUGHTER' ),
        ( 'Teleport Projectile Properties',                '_ONHIT_TELEPORT' ),
        ( 'Undeath to Death',                              '_UNDEATH_TO_DEATH' ),
        ( 'Undeath''s Eternal Foe',                        '_UNDEATHS_ETERNAL_FOE' ),
        ( 'Unique Power (OnHit)',                          '_ONHIT_UNIQUEPOWER' ),
        ( 'Vampiric Touch',                                '_VAMPIRIC_TOUCH' ),
        ( 'Wail of the Banshee',                           '_WAIL_OF_THE_BANSHEE' ),
        ( 'Web',                                           '_WEB' ),
        ( 'Weird',                                         '_WEIRD' ),
        ( 'Word of Faith',                                 '_WORD_OF_FAITH' ),
        ( 'Wounding Whispers',                             '_WOUNDING_WHISPERS' ),
        // The trailing info row:
        ( nil, 'IP_CONST_ONHIT_CASTSPELL' )
      );

    // The durations and frequencies of on-hit item properties.
    IP_CONST_ONHIT_DURATION_NAME: array[0..5] of pchar =
      ( '5%/ 5 rounds',
        '10%/ 4 rounds',
        '25%/ 3 rounds',
        '50%/ 2 rounds',
        '75%/ 1 round',
        // The trailing info row:
        'IP_CONST_ONHIT_DURATION' );

    // The save DC of on-hit item properties.
    IP_CONST_ONHIT_SAVEDC: array[0..7] of StringPair =
      ( ( 'DC: 14', '_14' ),
        ( 'DC: 16', '_16' ),
        ( 'DC: 18', '_18' ),
        ( 'DC: 20', '_20' ),
        ( 'DC: 22', '_22' ),
        ( 'DC: 24', '_24' ),
        ( 'DC: 26', '_26' ),
        // The trailing info row:
        ( nil, 'IP_CONST_ONHIT_SAVEDC' )
      );

    // The monster on-hit item properties.
    IP_CONST_ONMONSTERHIT: array[0..10] of StringTriple =
      ( ( 'Ability Drain', '_ABILITYDRAIN', 'abi' ), // Caps to distinguish it from OnHit.
        ( 'Confusion',     nil,             nil ),
        ( 'Disease',       nil,             'dis' ),
        ( 'Doom',          nil,             nil ),
        ( 'Fear',          nil,             nil ),
        ( 'Level Drain',   '_LEVELDRAIN',   '1-5' ),
        ( 'Poison',        nil,             'poi' ),
        ( 'Slow',          nil,             nil ),
        ( 'Stun',          nil,             nil ),
        ( 'Wounding',      nil,             '1-5' ),
        // The trailing info row:
        ( nil, 'IP_CONST_ONMONSTERHIT', nil )
      );

    // The on-hit poison item properties.
    IP_CONST_POISON: array[0..6] of StringPair =
      ( ( '1d2 strength damage',     '_1D2_STRDAMAGE' ),
        ( '1d2 dexterity damage',    '_1D2_DEXDAMAGE' ),
        ( '1d2 constitution damage', '_1D2_CONDAMAGE' ),
        ( '1d2 intelligence damage', '_1D2_INTDAMAGE' ),
        ( '1d2 wisdom damage',       '_1D2_WISDAMAGE' ),
        ( '1d2 charisma damage',     '_1D2_CHADAMAGE' ),
        // The trailing info row:
        ( nil, 'IP_CONST_POISON' )
      );

    // The qulaity item properties.
    IP_CONST_QUALITY_NAME: array[0..16] of pchar =
      ( 'Unkown',
        'Destroyed',
        'Ruined',
        'Very poor',
        'Poor',
        'Below average',
        'Average',
        'Above average',
        'Good',
        'Very good',
        'Excellent',
        'Masterwork',
        'God like',
        'Raw',
        'Cut',
        'Polished',
        // The trailing info row:
        'IP_CONST_QUALITY' );

    // The racial types for item properties.
    // IP_CONST_RACIALTYPE is incomplete, missing ooze.
    // Use RACIAL_TYPE_ instead -- same set of indices.

    // The weight reduction item properties.
    IP_CONST_REDUCEDWEIGHT_NAME: array[0..5] of pchar =
      ( '80%',
        '60%',
        '40%',
        '20%',
        '10%',
        // The trailing info row:
        'IP_CONST_REDUCEDWEIGHT' );

    // The saving throws (for item properties).
    IP_CONST_SAVEBASETYPE_NAME: array[0..3] of pchar =
      ( 'Fortitude',
        'Reflex',
        'Will',
        // The trailing info row:
        'IP_CONST_SAVEBASETYPE' );

    // The saving throw subtypes for item properties.
    IP_CONST_SAVEVS_NAME: array[0..14] of pchar =
      ( 'Acid',
        'Cold',
        'Death',
        'Disease',
        'Divine',
        'Electrical',
        'Fear',
        'Fire',
        'MindAffecting',
        'Negative',
        'Poison',
        'Positive',
        'Sonic',
        'Universal',
        // The trailing info row:
        'IP_CONST_SAVEVS' );

    // The spell resistance item properties.
    IP_CONST_SPELLRESISTANCEBONUS_NAME: array[0..12] of pchar =
      ( '10',
        '12',
        '14',
        '16',
        '18',
        '20',
        '22',
        '24',
        '26',
        '28',
        '30',
        '32',
        // The trailing info row:
        'IP_CONST_SPELLRESISTANCEBONUS' );

    // The spell schools (for item properties).
    IP_CONST_SPELLSCHOOL_NAME: array[0..8] of pchar =
      ( 'Abjuration',
        'Conjuration',
        'Divination',
        'Enchantment',
        'Evocation',
        'Illusion',
        'Necromancy',
        'Transmutation',
        // The trailing info row:
        'IP_CONST_SPELLSCHOOL' );

    // The strength of traps set via item properties.
    IP_CONST_TRAPSTRENGTH: array[0..5] of StringPair =
      ( ( 'Minor',   nil ),
        ( 'Average', nil ),
        ( 'Strong',  nil ),
        ( 'Deadly',  nil ),
        ( 'Epic',    '4' ),
        // The trailing info row:
        ( nil, 'IP_CONST_TRAPSTRENGTH' )
      );

    // The types of traps set via item properties.
    IP_CONST_TRAPTYPE_NAME: array[0..11] of pchar =
      ( 'Acid splash',
        'BlobOfAcid',
        'Electrical',
        'Fire',
        'Frost',
        'Gas',
        'Holy',
        'Negative',
        'Sonic',
        'Spike',
        'Tangle',
        // The trailing info row:
        'IP_CONST_TRAPTYPE' );

    // The unlimited ammunition item properties.
    IP_CONST_UNLIMITEDAMMO: array[0..9] of StringPair =
      ( ( 'Normal',          '_BASIC' ),
        ( '+1 damage',       '_PLUS1' ),
        ( '+2 damage',       '_PLUS2' ),
        ( '+3 damage',       '_PLUS3' ),
        ( '+4 damage',       '_PLUS4' ),
        ( '+5 damage',       '_PLUS5' ),
        ( '+1d6 fire',       '_1D6FIRE' ),
        ( '+1d6 cold',       '_1D6COLD' ),
        ( '+1d6 electrical', '_1D6LIGHT' ),
        // The trailing info row:
        ( nil, 'IP_CONST_UNLIMITEDAMMO' )
      );

    // The visual effect item properties for melee weapons.
    IP_CONST_VISUAL_NAME: array[0..7] of pchar =
      ( 'Acid',
        'Cold',
        'Electrical',
        'Evil',
        'Fire',
        'Holy',
        'Sonic',
        // The trailing info row:
        'IP_CONST_VISUAL' );

    // The weight-increasing item properties.
    IP_CONST_WEIGHTINCREASE_NAME: array[0..6] of pchar =
      ( '5 lbs',
        '10 lbs',
        '15 lbs',
        '30 lbs',
        '50 lbs',
        '100 lbs',
        // The trailing info row:
        'IP_CONST_WEIGHTINCREASE' );

    // The item property types.
    // In alphabetical order by the names of the functions that produce each of
    // these types. Perhaps a bit unusual, but it adds consistency to the
    // itemscript unit.
    ITEM_PROPERTY: array[0..78] of pchar =
      ( 'ABILITY_BONUS',
        'AC_BONUS',
        'AC_BONUS_VS_ALIGNMENT_GROUP',
        'AC_BONUS_VS_DAMAGE_TYPE',
        'AC_BONUS_VS_RACIAL_GROUP',
        'AC_BONUS_VS_SPECIFIC_ALIGNMENT',
        'ADDITIONAL',
        'ARCANE_SPELL_FAILURE',
        'ATTACK_BONUS',
        'ATTACK_BONUS_VS_ALIGNMENT_GROUP',
        'ATTACK_BONUS_VS_RACIAL_GROUP',
        'ATTACK_BONUS_VS_SPECIFIC_ALIGNMENT',
        'DECREASED_ATTACK_MODIFIER',
        'BONUS_FEAT',
        'BONUS_SPELL_SLOT_OF_LEVEL_N',
        'SAVING_THROW_BONUS',
        'SAVING_THROW_BONUS_SPECIFIC',
        'SPELL_RESISTANCE',
        'CAST_SPELL',
        'ENHANCED_CONTAINER_REDUCED_WEIGHT',
        'DAMAGE_BONUS',
        'DAMAGE_BONUS_VS_ALIGNMENT_GROUP',
        'DAMAGE_BONUS_VS_RACIAL_GROUP',
        'DAMAGE_BONUS_VS_SPECIFIC_ALIGNMENT',
        'IMMUNITY_DAMAGE_TYPE',
        'DECREASED_DAMAGE',
        'DAMAGE_REDUCTION',
        'DAMAGE_RESISTANCE',
        'DAMAGE_VULNERABILITY',
        'DARKVISION',
        'DECREASED_ABILITY_SCORE',
        'DECREASED_AC',
        'DECREASED_SKILL_MODIFIER',
        'ENHANCEMENT_BONUS',
        'ENHANCEMENT_BONUS_VS_ALIGNMENT_GROUP',
        'ENHANCEMENT_BONUS_VS_RACIAL_GROUP',
        'ENHANCEMENT_BONUS_VS_SPECIFIC_ALIGNEMENT',
        'DECREASED_ENHANCEMENT_MODIFIER',
        'EXTRA_MELEE_DAMAGE_TYPE',
        'EXTRA_RANGED_DAMAGE_TYPE',
        'FREEDOM_OF_MOVEMENT',
        'HASTE',
        'HEALERS_KIT',
        'HOLY_AVENGER',
        'IMMUNITY_MISCELLANEOUS',
        'IMMUNITY_SPECIFIC_SPELL',
        'IMPROVED_EVASION',
        'KEEN',
        'LIGHT',
        'USE_LIMITATION_ALIGNMENT_GROUP',
        'USE_LIMITATION_CLASS',
        'USE_LIMITATION_RACIAL_TYPE',
        'USE_LIMITATION_SPECIFIC_ALIGNMENT',
        'MASSIVE_CRITICALS',
        'MATERIAL',
        'MIGHTY',
        'MONSTER_DAMAGE',
        'NO_DAMAGE',
        'ONHITCASTSPELL',
        'ON_HIT_PROPERTIES',
        'ON_MONSTER_HIT',
        'QUALITY',
        'DECREASED_SAVING_THROWS',
        'DECREASED_SAVING_THROWS_SPECIFIC',
        'REGENERATION',
        'SKILL_BONUS',
        'SPECIAL_WALK',
        'IMMUNITY_SPELL_SCHOOL',
        'IMMUNITY_SPELLS_BY_LEVEL',
        'THIEVES_TOOLS',
        'TRAP',
        'TRUE_SEEING',
        'TURN_RESISTANCE',
        'UNLIMITED_AMMUNITION',
        'REGENERATION_VAMPIRIC',
        'VISUALEFFECT',
        'WEIGHT_INCREASE',
        'BASE_ITEM_WEIGHT_REDUCTION',
        // The trailing info row:
        'ITEM_PROPERTY' );


    // The names and NWScript constants for packages, grouped by the class to
    // which each applies. Classes with only one package have that package
    // suppressed in favor of the class default package (which has to be that
    // package anyway). Classes are grouped alphabetically within the groupings
    // base then prestige (then monster, but monster classes have no choices).
    PACKAGES: array[1..23,0..11] of StringPair =
    ( //( // (Default class.)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ) ),

      ( ( 'Default Barbarian',               '_' ),
        ( 'Barbarian, Balanced',             'PACKAGE_NPC_BARBARIAN_DAELAN' ),
        ( 'Barbarian, Blackguard',           '_BLACKGUARD' ),
        ( 'Barbarian, Brute',                '_BRUTE' ),
        ( 'Barbarian, Orcblood',             '_ORCBLOOD' ),
        ( 'Barbarian, Savage',               '_SAVAGE' ),
        ( 'Barbarian, Slayer',               '_SLAYER' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE_BARBARIAN' ) ),

      ( ( 'Default Bard',                    '_' ),
        ( 'Bard, Blade',                     '_BLADE' ),
        ( 'Bard, Gallant',                   '_GALLANT' ),
        ( 'Bard, Harper Scout',              '_HARPER' ),
        ( 'Bard, Jester',                    '_JESTER' ),
        ( 'Bard, Loremaster',                '_LOREMASTER' ),
        ( 'Healer, Bard',                    'PACKAGE_NPC_BARD' ),
        ( 'Sworddancer, Bard',               'PACKAGE_NPC_BARD_FIGHTER' ),
        ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE_BARD' ) ),

      ( ( 'Default Cleric',                  '_' ),
        ( 'Cleric, Battle Priest',           '_BATTLE_PRIEST' ),
        ( 'Cleric, Champion of Torm',        '_DIVINE' ),
        ( 'Cleric, Dead Walker',             '_DEADWALKER' ),
        ( 'Cleric, Elementalist',            '_ELEMENTALIST' ),
        ( 'Cleric, Shaman',                  '_SHAMAN' ),
        ( 'Cleric, Support',                 'PACKAGE_NPC_CLERIC_LINU' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE_CLERIC' ) ),

      ( ( 'Default Druid',                   '_' ),
        ( 'Druid, Death',                    '_DEATH' ),
        ( 'Druid, Gray',                     '_GRAY' ),
        ( 'Druid, Hawkmaster',               '_HAWKMASTER' ),
        ( 'Druid, Interloper',               '_INTERLOPER' ),
        ( 'Druid, Shifter',                  '_SHIFTER' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE_DRUID' ) ),

      ( ( 'Default Fighter',                       '_' ),
        ( 'Fighter, Commander',                    '_COMMANDER' ),
        ( 'Fighter, Finesse',                      '_FINESSE' ),
        ( 'Fighter, Gladiator',                    '_GLADIATOR' ),
        ( 'Fighter, Pirate',                       '_PIRATE' ),
        ( 'Fighter, Weapon Master (Heavy Flail)',  'PACKAGE_NPC_FT_WEAPONMASTER' ),
        ( 'Fighter, Weapon Master (Katana)',       '_WEAPONMASTER' ),
        ( 'Sworddancer, Bard',                     'PACKAGE_NPC_BARD_FIGHTER_SHARWYN2' ),
        ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE_FIGHTER' ) ),

      ( ( 'Default Monk',                    '_' ),
        ( 'Monk, Assassin',                  '_ASSASSIN' ),
        ( 'Monk, Devout',                    '_DEVOUT' ),
        ( 'Monk, Gifted',                    '_GIFTED' ),
        ( 'Monk, Peasant',                   '_PEASANT' ),
        ( 'Monk, Spirit Warrior',            '_SPIRIT' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE_MONK' ) ),

      ( ( 'Default Paladin',                 '_' ),
        ( 'Aribeth, Paladin',                'PACKAGE_NPC_ARIBETH_PALADIN' ),
        ( 'Paladin, Champion',               '_CHAMPION' ),
        ( 'Paladin, Champion of Torm',       '_DIVINE' ),
        ( 'Paladin, Errant',                 '_ERRANT' ),
        ( 'Paladin, Falling',                'PACKAGE_NPC_PALADIN_FALLING' ),
        ( 'Paladin, Inquisitor',             '_INQUISITOR' ),
        ( 'Paladin, Undead Hunter',          '_UNDEAD' ),
        ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE_PALADIN' ) ),

      ( ( 'Default Ranger',                  '_' ),
        ( 'Ranger, Arcane Archer',           '_ARCANEARCHER' ),
        ( 'Ranger, Giant-Killer',            '_GIANTKILLER' ),
        ( 'Ranger, Marksman',                '_MARKSMAN' ),
        ( 'Ranger, Stalker',                 '_STALKER' ),
        ( 'Ranger, Warden',                  '_WARDEN' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE_RANGER' ) ),

      ( ( 'Default Rogue',                   '_' ),
        ( 'Rogue, Bandit',                   '_BANDIT' ),
        ( 'Rogue, Gypsy',                    '_GYPSY' ),
        ( 'Rogue, Scout',                    '_SCOUT' ),
        ( 'Rogue, Shadowdancer',             '_SHADOWDANCER' ),
        ( 'Rogue, Shadowdancer (dual-kukri)','PACKAGE_NPC_RG_SHADOWDANCER' ),
        ( 'Rogue, Swashbuckler',             '_SWASHBUCKLER' ),
        ( 'Rogue, Warrior',                  'PACKAGE_NPC_ROGUE' ),
        ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE_ROGUE' ) ),

      ( ( 'Default Sorcerer',                '_' ),
        ( 'Abjurer, Sorcerer',               '_ABJURATION' ),
        ( 'Conjurer, Sorcerer',              '_CONJURATION' ),
        ( 'Diviner, Sorcerer',               '_DIVINATION' ),
        ( 'Enchanter, Sorcerer',             '_ENCHANTMENT' ),
        ( 'Evoker, Sorcerer',                '_EVOCATION' ),
        ( 'Illusionist, Sorcerer',           '_ILLUSION' ),
        ( 'Necromancer, Sorcerer',           '_NECROMANCY' ),
        ( 'Sorcerer, Dragon Disciple',       '_DRAGONDISCIPLE' ),
        ( 'Support, Sorcerer',               'PACKAGE_NPC_SORCERER' ),
        ( 'Transmuter, Sorcerer',            '_TRANSMUTATION' ),
        // The trailing info row:
        ( nil, 'PACKAGE_SORCERER' ) ),

      ( ( 'Generalist',                      'PACKAGE_WIZARDGENERALIST' ),
        ( 'Wizard, Abjuration',              '_ABJURATION' ),
        ( 'Wizard, Assassin',                'PACKAGE_NPC_WIZASSASSIN' ),
        ( 'Wizard, Conjuration',             '_CONJURATION' ),
        ( 'Wizard, Divination',              '_DIVINATION' ),
        ( 'Wizard, Enchantment',             '_ENCHANTMENT' ),
        ( 'Wizard, Evocation',               '_EVOCATION' ),
        ( 'Wizard, Illusion',                '_ILLUSION' ),
        ( 'Wizard, Necromancy',              '_NECROMANCY' ),
        ( 'Wizard, Pale Master',             '_PALEMASTER' ),
        ( 'Wizard, Transmutation',           '_TRANSMUTATION' ),
        // The trailing info row:
        ( nil, 'PACKAGE_WIZARD' ) ),

      ( ( 'Arcane Archer',                   '_ARCANE_ARCHER' ),
        ( 'Ranger, Arcane Archer',           '_RANGER_ARCANEARCHER_2NDCLASS' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE' ) ),

      ( ( 'Assassin',                        '_ASSASSIN' ),
        ( 'Monk, Assassin',                  '_MONK_ASSASSIN_2NDCLASS' ),
        ( 'Wizard, Assassin',                '_NPC_WIZASSASSIN_NATHYRRA' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE' ) ),

      ( ( 'Blackguard',                      '_BLACKGUARD' ),
        ( 'Aribeth, Blackguard',             '_NPC_ARIBETH_BLACKGUARD' ),
        ( 'Barbarian, Blackguard',           '_BARBARIAN_BLACKGUARD_2NDCLASS' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE' ) ),

      ( ( 'Champion of Torm',                '_DIVINE_CHAMPION' ),
        ( 'Cleric, Champion of Torm',        '_CLERIC_DIVINE_2NDCLASS' ),
        ( 'Paladin, Champion of Torm',       '_PALADIN_DIVINE_2NDCLASS' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE' ) ),

      ( ( 'Red Dragon Disciple',             '_DRAGON_DISCIPLE' ),
        ( 'Healer, Bard (Deekin)',           '_NPC_BARD_DEEKIN_2' ),
        ( 'Sorcerer, Dragon Disciple',       '_SORCERER_DRAGONDISCIPLE_2NDCLASS' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE' ) ),

      ( // (Dwarven defender)
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, '' ) ),

      ( ( 'Harper',                          '_HARPER' ),
        ( 'Bard, Harper Scout',              '_BARD_HARPER_2NDCLASS' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE' ) ),

      ( ( 'Pale Master',                     '_PALE_MASTER' ),
        ( 'Wizard, Pale Master',             '_WIZARD_PALEMASTER_2NDCLASS' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE' ) ),

      ( // (Purple dragon knight)
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, '' ) ),

      ( ( 'Shadowdancer',                    '_SHADOWDANCER' ),
        ( 'Rogue, Shadowdancer',             '_ROGUE_SHADOWDANCER_2NDCLASS' ),
        ( 'Rogue, Shadowdancer (dual-kukri)','_NPC_RG_TOMI_2' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE' ) ),

      ( ( 'Shifter',                         '_SHIFTER' ),
        ( 'Druid, Shifter',                  '_DRUID_SHIFTER_2NDCLASS' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE' ) ),

      ( ( 'Weapon Master',                         '_WEAPONMASTER' ),
        ( 'Fighter, Weapon Master (Heavy Flail)',  '_NPC_FT_WEAPONMASTER_VALEN_2' ),
        ( 'Fighter, Weapon Master (Katana)',       '_FIGHTER_WEAPONMASTER_2NDCLASS' ),
        ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
        ( '', '' ), ( '', '' ),
        // The trailing info row:
        ( nil, 'PACKAGE' ) )
    );
      // The monster classes are not needed currently, but I'll list them in case
      // they become useful at some point.
      //( // (Aberration)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Animal)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Beast)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Commoner)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Construct)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Dragon)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Elemental)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Fey)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Giant)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Humanoid)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Magical beast)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Monstrous)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Ooze)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Outsider)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Shapechanger)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Undead)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) ),
      //( // (Vermin)
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ), ( '', '' ),
      //  // The trailing info row:
      //  ( nil, '' ) )

    // The NWScript symbolic constants for poisons.
    POISON: array[0..45] of stringPair =
      ( ( 'Aranea Venom',                nil ),
        ( 'Arsenic',                     nil ),
        ( 'Bebilith Venom',              nil ),
        ( 'Black Adder Venom',           nil ),
        ( 'Black Lotus Extract',         nil ),
        ( 'Blade Bane',                  nil ),
        ( 'Bloodroot',                   nil ),
        ( 'Blue Whinnis',                nil ),
        ( 'Burnt Othur Fumes',           nil ),
        ( 'Carrion Crawler Brain Juice', nil ),
        ( 'Chaos Mist',                  nil ),
        ( 'Colossal Spider Venom',       nil ),
        ( 'Dark Reaver Powder',          nil ),
        ( 'Deathblade',                  nil ),
        ( 'Dragon Bile',                 nil ),
        ( 'Ettercap Venom',              nil ),
        ( 'Gargantuan Spider Venom',     nil ),
        ( 'Giant Wasp Poison',           nil ),
        ( 'Greenblood Oil',              nil ),
        ( 'Huge Spider Venom',           nil ),
        ( 'Id Moss',                     nil ),
        ( 'Iron Golem Fumes',            nil ),
        ( 'Large Scorpion Venom',        nil ),
        ( 'Large Spider Venom',          nil ),
        ( 'Lich Dust',                   nil ),
        ( 'Malyss Root Paste',           nil ),
        ( 'Medium Spider Venom',         nil ),
        ( 'Nightshade',                  nil ),
        ( 'Nitharit',                    nil ),
        ( 'Oil of Taggit',               nil ),
        ( 'Phase Spider Venom',          nil ),
        ( 'Pit Fiend Ichor',             nil ),
        ( 'Purple Worm Poison',          nil ),
        ( 'Quasit Venom',                nil ),
        ( 'Sassone Leaf Residue',        nil ),
        ( 'Shadow Essence',              nil ),
        ( 'Small Centipede Poison',      nil ),
        ( 'Small Spider Venom',          nil ),
        ( 'Striped Toadstool',           nil ),
        ( 'Terinav Root',                nil ),
        ( 'Tiny Spider Venom',           nil ),
        ( 'Ungol Dust',                  nil ),
        ( 'Wraith Spider Venom',         nil ),
        ( 'Wyvern Poison',               nil ),
        ( 'Wyvern Poison, Epic',         '44' ),
        // The trailing info row:
        ( nil, 'POISON' )
      );

    // The NWScript symbolic constants for polymorphs.
    POLYMORPH: array[0..102] of StringPair = (
        ( 'Ancient blue dragon',            '_ANCIENT_BLUE_DRAGON' ),
        ( 'Ancient green dragon',           '_ANCIENT_GREEN_DRAGON' ),
        ( 'Ancient red dragon',             '_ANCIENT_RED_DRAGON' ),
        ( 'Azer boss, female',              '86' ),
        ( 'Azer boss, male',                '85' ),
        ( 'Badger',                         '_BADGER' ),
        ( 'Balor',                          '_BALOR' ),
        ( 'Basilisk',                       '_BASILISK' ),
        ( 'Basilisk (epic)',                '99' ),
        ( 'Beholder',                       '_BEHOLDER' ),
        ( 'Boar',                           '_BOAR' ),
        ( 'Boat',                           '95' ),
        ( 'Boy',                            '80' ),
        ( 'Brown bear',                     '_BROWN_BEAR' ),
        ( 'Celestial avenger',              '_CELESTIAL_AVENGER' ),
        ( 'Chicken',                        '_CHICKEN' ),
        ( 'Cow',                            '_COW' ),
        ( 'Death slaad',                    '_DEATH_SLAAD' ),
        ( 'Death slaad (shifter)',          '87' ),
        ( 'Demonflesh golem',               '92' ),
        ( 'Dire badger',                    '_DIRE_BADGER' ),
        ( 'Dire boar',                      '_DIRE_BOAR' ),
        ( 'Dire brown bear',                '_DIRE_BROWN_BEAR' ),
        ( 'Dire panther',                   '_DIRE_PANTHER' ),
        ( 'Dire tiger',                     '_DIRETIGER' ),
        ( 'Dire wolf',                      '_DIRE_WOLF' ),
        ( 'Doom knight',                    '_DOOM_KNIGHT' ),
        ( 'Dragonkin',                      '51' ),
        ( 'Drider',                         '_DRIDER' ),
        ( 'Drider (epic)',                  '100' ),
        ( 'Drow, female',                   '_FEMALE_DROW' ),
        ( 'Drow, female (epic)',            '106' ),
        ( 'Drow, male',                     '_MALE_DROW' ),
        ( 'Drow, male (epic)',              '105' ),
        ( 'Elder air elemental',            '_ELDER_AIR_ELEMENTAL' ),
        ( 'Elder earth elemental',          '_ELDER_EARTH_ELEMENTAL' ),
        ( 'Elder fire elemental',           '_ELDER_FIRE_ELEMENTAL' ),
        ( 'Elder water elemental',          '_ELDER_WATER_ELEMENTAL' ),
        ( 'Fire giant',                     '_FIRE_GIANT' ),
        ( 'Frost giant, female',            '_FROST_GIANT_FEMALE' ),
        ( 'Frost giant, male',              '_FROST_GIANT_MALE' ),
        ( 'Frost giant (J''Nah), female',   '_JNAH_GIANT_FEMAL' ),
        ( 'Frost giant (J''Nah), male',     '_JNAH_GIANT_MALE' ),
        ( 'Gargoyle',                       '_GARGOYLE' ),
        ( 'Gargoyle (epic)',                '98' ),
        ( 'Giant spider',                   '_GIANT_SPIDER' ),
        ( 'Girl',                           '81' ),
        ( 'Golem automaton',                '_GOLEM_AUTOMATON' ),
        ( 'Harpy',                          '_HARPY' ),
        ( 'Harpy (epic)',                   '97' ),
        ( 'Heurodis',                       '_HEURODIS' ),
        ( 'Huge air elemental',             '_HUGE_AIR_ELEMENTAL' ),
        ( 'Huge earth elemental',           '_HUGE_EARTH_ELEMENTAL' ),
        ( 'Huge fire elemental',            '_HUGE_FIRE_ELEMENTAL' ),
        ( 'Huge water elemental',           '_HUGE_WATER_ELEMENTAL' ),
        ( 'Imp',                            '_IMP' ),
        ( 'Iron golem',                     '_IRON_GOLEM' ),
        ( 'Iron golem (shifter)',           '90' ),
        ( 'Kobold assassin',                '83' ),
        ( 'Kobold assassin (epic)',         '103' ),
        ( 'Lizardfolk',                     '82' ),
        ( 'Lizardfolk (epic)',              '104' ),
        ( 'Manticore',                      '_MANTICORE' ),
        ( 'Manticore (epic)',               '101' ),
        ( 'Medusa',                         '_MEDUSA' ),
        ( 'Mimic',                          '79' ),
        ( 'Mindflayer',                     '_MINDFLAYER' ),
        ( 'Minotaur',                       '_MINOTAUR' ),
        ( 'Minotaur (epic)',                '96' ),
        ( 'Mithral golem',                  '93' ),
        ( 'Morph earth elemental',          '94' ),
        ( 'Null human',                     '_NULL_HUMAN' ),
        ( 'Panther',                        '_PANTHER' ),
        ( 'Penguin',                        '_PENGUIN' ),
        ( 'Pixie',                          '_PIXIE' ),
        ( 'Quasit',                         '_QUASIT' ),
        ( 'Rakshasa, female',               '89' ),
        ( 'Rakshasa, male',                 '88' ),
        ( 'Red dragon',                     '_RED_DRAGON' ),
        ( 'Risen lord',                     '_RISEN_LORD' ),
        ( 'Spectre',                        '_SPECTRE' ),
        ( 'Stone golem',                    '91' ),
        ( 'Succubus',                       '_SUCCUBUS' ),
        ( 'Super chicken',                  '_SUPER_CHICKEN' ),
        ( 'Troll',                          '_TROLL' ),
        ( 'Umber hulk',                     '_UMBER_HULK' ),
        ( 'Vampire, female',                '_VAMPIRE_FEMALE' ),
        ( 'Vampire, male',                  '_VAMPIRE_MALE' ),
        ( 'Vrock',                          '_VROCK' ),
        ( 'Werecat',                        '_WERECAT' ),
        ( 'Wererat',                        '_WERERAT' ),
        ( 'Werewolf',                       '_WEREWOLF' ),
        ( 'Winter wolf',                    '102' ),
        ( 'Wisp',                           '84' ),
        ( 'Wolf',                           '_WOLF' ),
        ( 'Wyrmling black',                 '_WYRMLING_BLACK' ),
        ( 'Wyrmling blue',                  '_WYRMLING_BLUE' ),
        ( 'Wyrmling green',                 '_WYRMLING_GREEN' ),
        ( 'Wyrmling red',                   '_WYRMLING_RED' ),
        ( 'Wyrmling white',                 '_WYRMLING_WHITE' ),
        ( 'Yuan-ti',                        '_YUANTI' ),
        ( 'Zombie',                         '_ZOMBIE' ),
        // The trailing info row:
        ( nil, 'POLYMORPH_TYPE' )
    );

    // The NWScript symbolic constants for racial types.
    // *Important* Converting TRaceEnum to an integer must result in a valid index.
    RACIAL_TYPE: array[0..25] of StringPair =
      ( // Start TRaceEnum
        // Playable races:
        ( 'Dwarf',              nil ),
        ( 'Elf',                nil ),
        ( 'Gnome',              nil ),
        ( 'Halfling',           nil ),
        ( 'Half-elf',           '_HALFELF' ),
        ( 'Half-orc',           '_HALFORC' ),
        ( 'Human',              nil ),
        // End TRaceEnum.
        // Non-playable races:
        ( 'Aberration',         nil ),
        ( 'Animal',             nil ),
        ( 'Beast',              nil ),
        ( 'Construct',          nil ),
        ( 'Dragon',             nil ),
        ( 'Elemental',          nil ),
        ( 'Fey',                nil ),
        ( 'Giant',              nil ),
        ( 'Goblinoid',          '_HUMANOID_GOBLINOID' ),
        ( 'Magical beast',      nil ),
        ( 'Monstrous humanoid', '_HUMANOID_MONSTROUS' ),
        ( 'Ooze',               nil ),
        ( 'Orc',                '_HUMANOID_ORC' ),
        ( 'Outsider',           nil ),
        ( 'Reptilian',          '_HUMANOID_REPTILIAN' ),
        ( 'Shapechanger',       nil ),
        ( 'Undead',             nil ),
        ( 'Vermin',             nil ),
        // The trailing info row:
        ( nil, 'RACIAL_TYPE' )
      );

    // The NWScript symbolic constants for saving throw "versus" types.
    // "None" is first, as it is the standard/default value.
    SAVING_THROW_TYPE: array[0..20] of StringPair =
      ( ( 'standard',               '_NONE' ),
        ( 'versus acid',            '_ACID' ),
        ( 'versus chaos',           '_CHAOS' ),
        ( 'versus cold',            '_COLD' ),
        ( 'versus death',           '_DEATH' ),
        ( 'versus disease',         '_DISEASE' ),
        ( 'versus divine',          '_DIVINE' ),
        ( 'versus electricity',     '_ELECTRICITY' ),
        ( 'versus evil',            '_EVIL' ),
        ( 'versus fear',            '_FEAR' ),
        ( 'versus fire',            '_FIRE' ),
        ( 'versus good',            '_GOOD' ),
        ( 'versus law',             '_LAW' ),
        ( 'versus mind spells',     '_MIND_SPELLS' ),
        ( 'versus negative energy', '_NEGATIVE' ),
        ( 'versus poison',          '_POISON' ),
        ( 'versus positive',        '_POSITIVE' ),
        ( 'versus sonic',           '_SONIC' ),
        ( 'versus spells',          '_SPELL' ),
        ( 'versus traps',           '_TRAP' ),
        // The trailing info row:
        ( nil, 'SAVING_THROW_TYPE' )
      );

    // The names for skills; symbolic constants are 'SKILL_' + Uppercase(name),
    // with spaces converted to underscores.
    SKILL_NAME: array[0..28] of pchar =
      ( 'Animal empathy',
        'Appraise',
        'Bluff',
        'Concentration',
        'Craft armor',
        'Craft trap',
        'Craft weapon',
        'Disable trap',
        'Discipline',
        'Heal',
        'Hide',
        'Intimidate',
        'Listen',
        'Lore',
        'Move silently',
        'Open lock',
        'Parry',
        'Perform',
        'Persuade',
        'Pick pocket',
        'Ride',
        'Search',
        'Set trap',
        'Spellcraft',
        'Spot',
        'Taunt',
        'Tumble',
        'Use magic device',
        // The trailing info row:
        'SKILL' );
    // Related to the above, flags as to whether or not skills require training.
    RestrictedSkill: array[0..27] of boolean =
      ( True,  // Animal empathy
        FALSE, // Appraise
        FALSE, // Bluff
        FALSE, // Concentration
        FALSE, // Craft armor
        FALSE, // Craft trap
        FALSE, // Craft weapon
        True,  // Disable trap
        FALSE, // Discipline
        FALSE, // Heal
        FALSE, // Hide
        FALSE, // Intimidate
        FALSE, // Listen
        FALSE, // Lore
        FALSE, // Move silently
        True,  // Open lock
        FALSE, // Parry
        True,  // Perform
        FALSE, // Persuade
        True,  // Pick pocket
        FALSE, // Ride
        FALSE, // Search
        True,  // Set trap
        True,  // Spellcraft
        FALSE, // Spot
        FALSE, // Taunt
        True,  // Tumble
        True   // Use magic device
      );

    // The NWScript constants for spells.
    SPELL: array[0..320] of StringPair = (
        ( 'Acid Fog',                                                        '_ACID_FOG' ),
        ( 'Acid Splash',                                                     '_ACID_SPLASH' ),
        ( 'Aid',                                                             '_AID' ),
        ( 'Amplify',                                                         '_AMPLIFY' ),
        ( 'Animate Dead',                                                    '_ANIMATE_DEAD' ),
        ( 'Aura of Glory',                                                   '_AURAOFGLORY' ),
        ( 'Aura versus Alignment: Holy Aura',                                '_HOLY_AURA' ),
        ( 'Aura versus Alignment: Unholy Aura',                              '_UNHOLY_AURA' ),
        ( 'Awaken',                                                          '_AWAKEN' ),
        ( 'Balagarn''s Iron Horn',                                           '_BALAGARNSIRONHORN' ),
        ( 'Ball Lightning',                                                  '_BALL_LIGHTNING' ),
        ( 'Bane',                                                            '_BANE' ),
        ( 'Banishment',                                                      '_BANISHMENT' ),
        ( 'Barkskin',                                                        '_BARKSKIN' ),
        ( 'Battletide',                                                      '_BATTLETIDE' ),
        ( 'Bestow Curse',                                                    '_BESTOW_CURSE' ),
        ( 'Bigby''s Clenched Fist (8)',                                      '_BIGBYS_CLENCHED_FIST' ),
        ( 'Bigby''s Crushing Hand (9)',                                      '_BIGBYS_CRUSHING_HAND' ),
        ( 'Bigby''s Forceful Hand (6)',                                      '_BIGBYS_FORCEFUL_HAND' ),
        ( 'Bigby''s Grasping Hand (7)',                                      '_BIGBYS_GRASPING_HAND' ),
        ( 'Bigby''s Interposing Hand (5)',                                   '_BIGBYS_INTERPOSING_HAND' ),
        ( 'Black Blade of Disaster',                                         '_BLACK_BLADE_OF_DISASTER' ),
        ( 'Blackstaff',                                                      '_BLACKSTAFF' ),
        ( 'Blade Barrier',                                                   '_BLADE_BARRIER' ),
        ( 'Blade Thirst',                                                    '_BLADE_THIRST' ),
        ( 'Bless',                                                           '_BLESS' ),
        ( 'Bless Weapon',                                                    '_BLESS_WEAPON' ),
        ( 'Blindness/Deafness',                                              '_BLINDNESS_AND_DEAFNESS' ),
        ( 'Blood Frenzy',                                                    '_BLOOD_FRENZY' ),
        ( 'Bombardment',                                                     '_BOMBARDMENT' ),
        ( 'Bull''s Strength',                                                '_BULLS_STRENGTH' ),
        ( 'Burning Hands',                                                   '_BURNING_HANDS' ),
        ( 'Call Lightning',                                                  '_CALL_LIGHTNING' ),
        ( 'Camouflage',                                                      '_CAMOFLAGE' ),
        ( 'Cat''s Grace',                                                    '_CATS_GRACE' ),
        ( 'Chain Lightning',                                                 '_CHAIN_LIGHTNING' ),
        ( 'Charm Monster',                                                   '_CHARM_MONSTER' ),
        ( 'Charm Person',                                                    '_CHARM_PERSON' ),
        ( 'Charm Person or Animal',                                          '_CHARM_PERSON_OR_ANIMAL' ),
        ( 'Circle of Death',                                                 '_CIRCLE_OF_DEATH' ),
        ( 'Circle of Doom',                                                  '_CIRCLE_OF_DOOM' ),
        ( 'Clairaudience/Clairvoyance',                                      '_CLAIRAUDIENCE_AND_CLAIRVOYANCE' ),
        ( 'Clarity',                                                         '_CLARITY' ),
        ( 'Cloud of Bewilderment',                                           '_CLOUD_OF_BEWILDERMENT' ),
        ( 'Cloudkill',                                                       '_CLOUDKILL' ),
        ( 'Color Spray',                                                     '_COLOR_SPRAY' ),
        ( 'Combust',                                                         '_COMBUST' ),
        ( 'Cone of Cold',                                                    '_CONE_OF_COLD' ),
        ( 'Confusion',                                                       '_CONFUSION' ),
        ( 'Contagion',                                                       '_CONTAGION' ),
        ( 'Continual Flame',                                                 '_CONTINUAL_FLAME' ),
        ( 'Control Undead',                                                  '_CONTROL_UNDEAD' ),
        ( 'Create Greater Undead',                                           '_CREATE_GREATER_UNDEAD' ),
        ( 'Create Undead',                                                   '_CREATE_UNDEAD' ),
        ( 'Creeping Doom',                                                   '_CREEPING_DOOM' ),
        ( 'Crumble',                                                         '_CRUMBLE' ),
        ( 'Cure Minor Wounds',                                               '_CURE_MINOR_WOUNDS' ),
        ( 'Cure Light Wounds',                                               '_CURE_LIGHT_WOUNDS' ),
        ( 'Cure Moderate Wounds',                                            '_CURE_MODERATE_WOUNDS' ),
        ( 'Cure Serious Wounds',                                             '_CURE_SERIOUS_WOUNDS' ),
        ( 'Cure Critical Wounds',                                            '_CURE_CRITICAL_WOUNDS' ),
        ( 'Darkfire',                                                        '_DARKFIRE' ),
        ( 'Darkness',                                                        '_DARKNESS' ),
        ( 'Daze',                                                            '_DAZE' ),
        ( 'Deafening Clang',                                                 '_DEAFENING_CLANG' ),
        ( 'Death Armor',                                                     '_DEATH_ARMOR' ),
        ( 'Death Ward',                                                      '_DEATH_WARD' ),
        ( 'Delayed Blast Fireball',                                          '_DELAYED_BLAST_FIREBALL' ),
        ( 'Destruction',                                                     '_DESTRUCTION' ),
        ( 'Dirge',                                                           '_DIRGE' ),
        ( 'Dismissal',                                                       '_DISMISSAL' ),
        ( 'Dispel Magic',                                                    '_DISPEL_MAGIC' ),
        ( 'Displacement',                                                    '_DISPLACEMENT' ),
        ( 'Divine Favor',                                                    '_DIVINE_FAVOR' ),
        ( 'Divine Power',                                                    '_DIVINE_POWER' ),
        ( 'Dominate Animal',                                                 '_DOMINATE_ANIMAL' ),
        ( 'Dominate Monster',                                                '_DOMINATE_MONSTER' ),
        ( 'Dominate Person',                                                 '_DOMINATE_PERSON' ),
        ( 'Doom',                                                            '_DOOM' ),
        ( 'Drown',                                                           '_DROWN' ),
        ( 'Eagle''s Splendor',                                               '_EAGLE_SPLEDOR' ),
        ( 'Earthquake',                                                      '_EARTHQUAKE' ),
        ( 'Electric Jolt',                                                   '_ELECTRIC_JOLT' ),
        ( 'Elemental Shield',                                                '_ELEMENTAL_SHIELD' ),
        ( 'Elemental Swarm',                                                 '_ELEMENTAL_SWARM' ),
        ( 'Endurance',                                                       '_ENDURANCE' ),
        ( 'Endure Elements',                                                 '_ENDURE_ELEMENTS' ),
        ( 'Energy Buffer',                                                   '_ENERGY_BUFFER' ),
        ( 'Energy Drain',                                                    '_ENERGY_DRAIN' ),
        ( 'Enervation',                                                      '_ENERVATION' ),
        ( 'Entangle',                                                        '_ENTANGLE' ),
        ( 'Entropic Shield',                                                 '_ENTROPIC_SHIELD' ),
        ( 'Epic Spell: Dragon Knight',                                       '_EPIC_DRAGON_KNIGHT' ),
        ( 'Epic Spell: Epic Mage Armor',                                     '_EPIC_MAGE_ARMOR' ),
        ( 'Epic Spell: Epic Warding',                                        '695' ),
        ( 'Epic Spell: Greater Ruin',                                        '_EPIC_RUIN' ),
        ( 'Epic Spell: Hellball',                                            '_EPIC_HELLBALL' ),
        ( 'Epic Spell: Mummy Dust',                                          '_EPIC_MUMMY_DUST' ),
        ( 'Ethereal Visage',                                                 '_ETHEREAL_VISAGE' ),
        ( 'Evard''s Black Tentacles',                                        '_EVARDS_BLACK_TENTACLES' ),
        ( 'Evil Blight',                                                     '566' ),
        ( 'Expeditious Retreat',                                             '_EXPEDITIOUS_RETREAT' ),
        ( 'Fear',                                                            '_FEAR' ),
        ( 'Feeblemind',                                                      '_FEEBLEMIND' ),
        ( 'Find Traps',                                                      '_FIND_TRAPS' ),
        ( 'Finger of Death',                                                 '_FINGER_OF_DEATH' ),
        ( 'Fire Storm',                                                      '_FIRE_STORM' ),
        ( 'Fireball',                                                        '_FIREBALL' ),
        ( 'Firebrand',                                                       '_FIREBRAND' ),
        ( 'Flame Arrow',                                                     '_FLAME_ARROW' ),
        ( 'Flame Lash',                                                      '_FLAME_LASH' ),
        ( 'Flame Strike',                                                    '_FLAME_STRIKE' ),
        ( 'Flame Weapon',                                                    '_FLAME_WEAPON' ),
        ( 'Flare',                                                           '_FLARE' ),
        ( 'Flesh to Stone',                                                  '_FLESH_TO_STONE' ),
        ( 'Fox''s Cunning',                                                  '_FOXS_CUNNING' ),
        ( 'Freedom of Movement',                                             '_FREEDOM_OF_MOVEMENT' ),
        ( 'Gate',                                                            '_GATE' ),
        ( 'Gedlee''s Electric Loop',                                         '_GEDLEES_ELECTRIC_LOOP' ),
        ( 'Ghostly Visage',                                                  '_GHOSTLY_VISAGE' ),
        ( 'Ghoul Touch',                                                     '_GHOUL_TOUCH' ),
        ( 'Globe of Invulnerability',                                        '_GLOBE_OF_INVULNERABILITY' ),
        ( 'Glyph of Warding',                                                '_GLYPH_OF_WARDING' ),
        ( 'Grease',                                                          '_GREASE' ),
        ( 'Great Thunderclap',                                               '_GREAT_THUNDERCLAP' ),
        ( 'Greater Bull''s Strength',                                        '_GREATER_BULLS_STRENGTH' ),
        ( 'Greater Cat''s Grace',                                            '_GREATER_CATS_GRACE' ),
        ( 'Greater Dispelling',                                              '_GREATER_DISPELLING' ),
        ( 'Greater Eagle''s Splendor',                                       '_GREATER_EAGLE_SPLENDOR' ),
        ( 'Greater Endurance',                                               '_GREATER_ENDURANCE' ),
        ( 'Greater Fox''s Cunning',                                          '_GREATER_FOXS_CUNNING' ),
        ( 'Greater Magic Fang',                                              '_GREATER_MAGIC_FANG' ),
        ( 'Greater Magic Weapon',                                            '_GREATER_MAGIC_WEAPON' ),
        ( 'Greater Owl''s Wisdom',                                           '_GREATER_OWLS_WISDOM' ),
        ( 'Greater Planar Binding',                                          '_GREATER_PLANAR_BINDING' ),
        ( 'Greater Restoration',                                             '_GREATER_RESTORATION' ),
        ( 'Greater Sanctuary',                                               '_ETHEREALNESS' ),
        ( 'Greater Shadow Conjuration, Acid Arrow',                          '_GREATER_SHADOW_CONJURATION_ACID_ARROW' ),
        ( 'Greater Shadow Conjuration, Ghostly Visage',                      '_GREATER_SHADOW_CONJURATION_MIRROR_IMAGE' ),
        ( 'Greater Shadow Conjuration, Minor Globe of Invulnerability',      '_GREATER_SHADOW_CONJURATION_MINOR_GLOBE' ),
        ( 'Greater Shadow Conjuration, Summon Shadow',                       '_GREATER_SHADOW_CONJURATION_SUMMON_SHADOW' ),
        ( 'Greater Shadow Conjuration, Web',                                 '_GREATER_SHADOW_CONJURATION_WEB' ),
        ( 'Greater Spell Breach',                                            '_GREATER_SPELL_BREACH' ),
        ( 'Greater Spell Mantle',                                            '_GREATER_SPELL_MANTLE' ),
        ( 'Greater Stoneskin',                                               '_GREATER_STONESKIN' ),
        ( 'Gust of Wind',                                                    '_GUST_OF_WIND' ),
        ( 'Hammer of the Gods',                                              '_HAMMER_OF_THE_GODS' ),
        ( 'Harm',                                                            '_HARM' ),
        ( 'Haste',                                                           '_HASTE' ),
        ( 'Heal',                                                            '_HEAL' ),
        ( 'Healing Circle',                                                  '_HEALING_CIRCLE' ),
        ( 'Healing Sting',                                                   '_HEALING_STING' ),
        ( 'Hold Animal',                                                     '_HOLD_ANIMAL' ),
        ( 'Hold Monster',                                                    '_HOLD_MONSTER' ),
        ( 'Hold Person',                                                     '_HOLD_PERSON' ),
        ( 'Holy Sword',                                                      '_HOLY_SWORD' ),
        ( 'Horizikaul''s Boom',                                              '_HORIZIKAULS_BOOM' ),
        ( 'Horrid Wilting',                                                  '_HORRID_WILTING' ),
        ( 'Ice Dagger',                                                      '_ICE_DAGGER' ),
        ( 'Ice Storm',                                                       '_ICE_STORM' ),
        ( 'Identify',                                                        '_IDENTIFY' ),
        ( 'Implosion',                                                       '_IMPLOSION' ),
        ( 'Improved Invisibility',                                           '_IMPROVED_INVISIBILITY' ),
        ( 'Incendiary Cloud',                                                '_INCENDIARY_CLOUD' ),
        ( 'Inferno',                                                         '_INFERNO' ),
        ( 'Infestation of Maggots',                                          '_INFESTATION_OF_MAGGOTS' ),
        ( 'Inflict Minor Wounds',                                            '_INFLICT_MINOR_WOUNDS' ),
        ( 'Inflict Light Wounds',                                            '_INFLICT_LIGHT_WOUNDS' ),
        ( 'Inflict Moderate Wounds',                                         '_INFLICT_MODERATE_WOUNDS' ),
        ( 'Inflict Serious Wounds',                                          '_INFLICT_SERIOUS_WOUNDS' ),
        ( 'Inflict Critical Wounds',                                         '_INFLICT_CRITICAL_WOUNDS' ),
        ( 'Invisibility',                                                    '_INVISIBILITY' ),
        ( 'Invisibility Purge',                                              '_INVISIBILITY_PURGE' ),
        ( 'Invisibility Sphere',                                             '_INVISIBILITY_SPHERE' ),
        ( 'Ironguts',                                                        '_IRONGUTS' ),
        ( 'Isaac''s Greater Missile Storm',                                  '_ISAACS_GREATER_MISSILE_STORM' ),
        ( 'Isaac''s Lesser Missile Storm',                                   '_ISAACS_LESSER_MISSILE_STORM' ),
        ( 'Keen Edge',                                                       '_KEEN_EDGE' ),
        ( 'Knock',                                                           '_KNOCK' ),
        ( 'Legend Lore',                                                     '_LEGEND_LORE' ),
        ( 'Lesser Dispel',                                                   '_LESSER_DISPEL' ),
        ( 'Lesser Mind Blank',                                               '_LESSER_MIND_BLANK' ),
        ( 'Lesser Planar Binding',                                           '_LESSER_PLANAR_BINDING' ),
        ( 'Lesser Restoration',                                              '_LESSER_RESTORATION' ),
        ( 'Lesser Spell Breach',                                             '_LESSER_SPELL_BREACH' ),
        ( 'Lesser Spell Mantle',                                             '_LESSER_SPELL_MANTLE' ),
        ( 'Light',                                                           '_LIGHT' ),
        ( 'Lightning Bolt',                                                  '_LIGHTNING_BOLT' ),
        ( 'Mage Armor',                                                      '_MAGE_ARMOR' ),
        ( 'Magic Circle against Evil',                                       '_MAGIC_CIRCLE_AGAINST_EVIL' ),
        ( 'Magic Circle against Good',                                       '_MAGIC_CIRCLE_AGAINST_GOOD' ),
        ( 'Magic Fang',                                                      '_MAGIC_FANG' ),
        ( 'Magic Missile',                                                   '_MAGIC_MISSILE' ),
        ( 'Magic Vestment',                                                  '_MAGIC_VESTMENT' ),
        ( 'Magic Weapon',                                                    '_MAGIC_WEAPON' ),
        ( 'Mass Blindness/Deafness',                                         '_MASS_BLINDNESS_AND_DEAFNESS' ),
        ( 'Mass Camouflage',                                                 '_MASS_CAMOFLAGE' ),
        ( 'Mass Charm',                                                      '_MASS_CHARM' ),
        ( 'Mass Haste',                                                      '_MASS_HASTE' ),
        ( 'Mass Heal',                                                       '_MASS_HEAL' ),
        ( 'Melf''s Acid Arrow',                                              '_MELFS_ACID_ARROW' ),
        ( 'Mestil''s Acid Breath',                                           '_MESTILS_ACID_BREATH' ),
        ( 'Mestil''s Acid Sheath',                                           '_MESTILS_ACID_SHEATH' ),
        ( 'Meteor Swarm',                                                    '_METEOR_SWARM' ),
        ( 'Mind Blank',                                                      '_MIND_BLANK' ),
        ( 'Mind Fog',                                                        '_MIND_FOG' ),
        ( 'Minor Globe of Invulnerability',                                  '_MINOR_GLOBE_OF_INVULNERABILITY' ),
        ( 'Monstrous Regeneration',                                          '_MONSTROUS_REGENERATION' ),
        ( 'Mordenkainen''s Disjunction',                                     '_MORDENKAINENS_DISJUNCTION' ),
        ( 'Mordenkainen''s Sword',                                           '_MORDENKAINENS_SWORD' ),
        ( 'Nature''s Balance',                                               '_NATURES_BALANCE' ),
        ( 'Negative Energy Burst',                                           '_NEGATIVE_ENERGY_BURST' ),
        ( 'Negative Energy Protection',                                      '_NEGATIVE_ENERGY_PROTECTION' ),
        ( 'Negative Energy Ray',                                             '_NEGATIVE_ENERGY_RAY' ),
        ( 'Neutralize Poison',                                               '_NEUTRALIZE_POISON' ),
        ( 'One with the Land',                                               '_ONE_WITH_THE_LAND' ),
        ( 'Owl''s Insight',                                                  '_OWLS_INSIGHT' ),
        ( 'Owl''s Wisdom',                                                   '_OWLS_WISDOM' ),
        ( 'Phantasmal Killer',                                               '_PHANTASMAL_KILLER' ),
        ( 'Planar Ally',                                                     '_PLANAR_ALLY' ),
        ( 'Planar Binding',                                                  '_PLANAR_BINDING' ),
        ( 'Poison',                                                          '_POISON' ),
        ( 'Polymorph Self, Fey',                                             '390' ),
        ( 'Polymorph Self, Giant Spider',                                    '387' ),
        ( 'Polymorph Self, Troll',                                           '388' ),
        ( 'Polymorph Self, Umber Hulk',                                      '389' ),
        ( 'Polymorph Self, Zombie',                                          '391' ),
        ( 'Power Word, Kill',                                                '_POWER_WORD_KILL' ),
        ( 'Power Word, Stun',                                                '_POWER_WORD_STUN' ),
        ( 'Prayer',                                                          '_PRAYER' ),
        ( 'Premonition',                                                     '_PREMONITION' ),
        ( 'Prismatic Spray',                                                 '_PRISMATIC_SPRAY' ),
        ( 'Protection from Elements',                                        '_PROTECTION_FROM_ELEMENTS' ),
        ( 'Protection from Evil',                                            '_PROTECTION_FROM_EVIL' ),
        ( 'Protection from Good',                                            '_PROTECTION_FROM_GOOD' ),
        ( 'Protection from Spells',                                          '_PROTECTION_FROM_SPELLS' ),
        ( 'Quillfire',                                                       '_QUILLFIRE' ),
        ( 'Raise Dead',                                                      '_RAISE_DEAD' ),
        ( 'Ray of Enfeeblement',                                             '_RAY_OF_ENFEEBLEMENT' ),
        ( 'Ray of Frost',                                                    '_RAY_OF_FROST' ),
        ( 'Regenerate',                                                      '_REGENERATE' ),
        ( 'Remove Blindness/Deafness',                                       '_REMOVE_BLINDNESS_AND_DEAFNESS' ),
        ( 'Remove Curse',                                                    '_REMOVE_CURSE' ),
        ( 'Remove Disease',                                                  '_REMOVE_DISEASE' ),
        ( 'Remove Fear',                                                     '_REMOVE_FEAR' ),
        ( 'Remove Paralysis',                                                '_REMOVE_PARALYSIS' ),
        ( 'Resist Elements',                                                 '_RESIST_ELEMENTS' ),
        ( 'Resistance',                                                      '_RESISTANCE' ),
        ( 'Restoration',                                                     '_RESTORATION' ),
        ( 'Resurrection',                                                    '_RESURRECTION' ),
        ( 'Sanctuary',                                                       '_SANCTUARY' ),
        ( 'Scare',                                                           '_SCARE' ),
        ( 'Scintillating Sphere',                                            '_SCINTILLATING_SPHERE' ),
        ( 'Searing Light',                                                   '_SEARING_LIGHT' ),
        ( 'See Invisibility',                                                '_SEE_INVISIBILITY' ),
        ( 'Shades, Cone of Cold',                                            '_SHADES_CONE_OF_COLD' ),
        ( 'Shades, Fireball',                                                '_SHADES_FIREBALL' ),
        ( 'Shades, Stoneskin',                                               '_SHADES_STONESKIN' ),
        ( 'Shades, Summon Shadow',                                           '_SHADES_SUMMON_SHADOW' ),
        ( 'Shades, Wall of Fire',                                            '_SHADES_WALL_OF_FIRE' ),
        ( 'Shadow Conjuration, Darkness',                                    '_SHADOW_CONJURATION_DARKNESS' ),
        ( 'Shadow Conjuration, Invisibility',                                '_SHADOW_CONJURATION_INIVSIBILITY' ),
        ( 'Shadow Conjuration, Mage Armor',                                  '_SHADOW_CONJURATION_MAGE_ARMOR' ),
        ( 'Shadow Conjuration, Magic Missile',                               '_SHADOW_CONJURATION_MAGIC_MISSILE' ),
        ( 'Shadow Conjuration, Summon Shadow',                               '_SHADOW_CONJURATION_SUMMON_SHADOW' ),
        ( 'Shadow Shield',                                                   '_SHADOW_SHIELD' ),
        ( 'Shapechange, Balor',                                              '394' ),
        ( 'Shapechange, Death Slaad',                                        '395' ),
        ( 'Shapechange, Fire Giant',                                         '393' ),
        ( 'Shapechange, Iron Golem',                                         '396' ),
        ( 'Shapechange, Red Dragon',                                         '392' ),
        ( 'Shelgarn''s Persistent Blade',                                    '_SHELGARNS_PERSISTENT_BLADE' ),
        ( 'Shield',                                                          '_SHIELD' ),
        ( 'Shield of Faith',                                                 '_SHIELD_OF_FAITH' ),
        ( 'Silence',                                                         '_SILENCE' ),
        ( 'Slay Living',                                                     '_SLAY_LIVING' ),
        ( 'Sleep',                                                           '_SLEEP' ),
        ( 'Slow',                                                            '_SLOW' ),
        ( 'Sound Burst',                                                     '_SOUND_BURST' ),
        ( 'Spell Mantle',                                                    '_SPELL_MANTLE' ),
        ( 'Spell Resistance',                                                '_SPELL_RESISTANCE' ),
        ( 'Spike Growth',                                                    '_SPIKE_GROWTH' ),
        ( 'Stinking Cloud',                                                  '_STINKING_CLOUD' ),
        ( 'Stone Bones',                                                     '_STONE_BONES' ),
        ( 'Stone to Flesh',                                                  '_STONE_TO_FLESH' ),
        ( 'Stonehold',                                                       '_STONEHOLD' ),
        ( 'Stoneskin',                                                       '_STONESKIN' ),
        ( 'Storm of Vengeance',                                              '_STORM_OF_VENGEANCE' ),
        ( 'Summon Creature I',                                               '_SUMMON_CREATURE_I' ),
        ( 'Summon Creature II',                                              '_SUMMON_CREATURE_II' ),
        ( 'Summon Creature III',                                             '_SUMMON_CREATURE_III' ),
        ( 'Summon Creature IV',                                              '_SUMMON_CREATURE_IV' ),
        ( 'Summon Creature V',                                               '_SUMMON_CREATURE_V' ),
        ( 'Summon Creature VI',                                              '_SUMMON_CREATURE_VI' ),
        ( 'Summon Creature VII',                                             '_SUMMON_CREATURE_VII' ),
        ( 'Summon Creature VIII',                                            '_SUMMON_CREATURE_VIII' ),
        ( 'Summon Creature IX',                                              '_SUMMON_CREATURE_IX' ),
        ( 'Sunbeam',                                                         '_SUNBEAM' ),
        ( 'Sunburst',                                                        '_SUNBURST' ),
        ( 'Tasha''s Hideous Laughter',                                       '_TASHAS_HIDEOUS_LAUGHTER' ),
        ( 'Tenser''s Transformation',                                        '_TENSERS_TRANSFORMATION' ),
        ( 'Tide of Battle',                                                  '565' ),
        ( 'Time Stop',                                                       '_TIME_STOP' ),
        ( 'True Seeing',                                                     '_TRUE_SEEING' ),
        ( 'True Strike',                                                     '_TRUE_STRIKE' ),
        ( 'Ultravision',                                                     '_DARKVISION' ),
        ( 'Undeath''s Eternal Foe',                                          '_UNDEATHS_ETERNAL_FOE' ),
        ( 'Undeath to Death',                                                '_UNDEATH_TO_DEATH' ),
        ( 'Vampiric Touch',                                                  '_VAMPIRIC_TOUCH' ),
        ( 'Vine Mine, Camouflage',                                           '_VINE_MINE_CAMOUFLAGE' ),
        ( 'Vine Mine, Entangle',                                             '_VINE_MINE_ENTANGLE' ),
        ( 'Vine Mine, Hamper Movement',                                      '_VINE_MINE_HAMPER_MOVEMENT' ),
        ( 'Virtue',                                                          '_VIRTUE' ),
        ( 'Wail of the Banshee',                                             '_WAIL_OF_THE_BANSHEE' ),
        ( 'Wall of Fire',                                                    '_WALL_OF_FIRE' ),
        ( 'War Cry',                                                         '_WAR_CRY' ),
        ( 'Web',                                                             '_WEB' ),
        ( 'Weird',                                                           '_WEIRD' ),
        ( 'Word of Faith',                                                   '_WORD_OF_FAITH' ),
        ( 'Wounding Whispers',                                               '_WOUNDING_WHISPERS' ),
        // The trailing info row:
        ( nil, 'SPELL' ) );

    // The NWScript constants for spell-like abilities.
    SPELLABILITY: array[0..355] of StringPair = (
        ( 'Acid Flask',                                                      'SPELL_GRENADE_ACID' ),
        ( 'Acidbomb',                                                        '745' ),
        ( 'Alchemist''s Fire',                                               'SPELL_GRENADE_FIRE' ),
        ( 'Alcohol, Beer',                                                   '406' ),
        ( 'Alcohol, Spirits',                                                '408' ),
        ( 'Alcohol, Wine',                                                   '407' ),
        ( 'Animate Dead (Pale Master)',                                      '_PM_ANIMATE_DEAD' ),
        ( 'Arrow of Death',                                                  '_AA_ARROW_OF_DEATH' ),
        ( 'Assign Mount',                                                    'SPELL_HORSE_ASSIGN_MOUNT' ),
        ( 'Aura, Dragon Fear',                                               '_DRAGON_FEAR' ),
        ( 'Aura of Blinding',                                                '_AURA_BLINDING' ),
        ( 'Aura of Cold',                                                    '_AURA_COLD' ),
        ( 'Aura of Courage',                                                 '_AURA_OF_COURAGE' ),
        ( 'Aura of Electricity',                                             '_AURA_ELECTRICITY' ),
        ( 'Aura of Fear',                                                    '_AURA_FEAR' ),
        ( 'Aura of Fire',                                                    '_AURA_FIRE' ),
        ( 'Aura of Glory - Cursed',                                          '562' ),
        ( 'Aura of Hellfire',                                                '761' ),
        ( 'Aura of Menace',                                                  '_AURA_MENACE' ),
        ( 'Aura of Protection',                                              '_AURA_PROTECTION' ),
        ( 'Aura of Stunning',                                                '_AURA_STUN' ),
        ( 'Aura of Unearthly Visage',                                        '_AURA_UNEARTHLY_VISAGE' ),
        ( 'Aura of Unnatural',                                               '_AURA_UNNATURAL' ),
        ( 'Aura of Vitality',                                                'SPELL_AURA_OF_VITALITY' ),
        ( 'Barbarian Rage',                                                  '_BARBARIAN_RAGE' ),
        ( 'Bard Song',                                                       '411' ),
        ( 'Bebilith Web',                                                    '731' ),
        ( 'Beholder Antimagic Cone',                                         '727' ),
        ( 'Beholder Special Attacks 1',                                      '776' ),
        ( 'Beholder Special Attacks 2',                                      '777' ),
        ( 'Beholder Special Attacks 3',                                      '778' ),
        ( 'Beholder Special Attacks 4',                                      '779' ),
        ( 'Beholder Special Attacks 5',                                      '780' ),
        ( 'Beholder Special Attacks 6',                                      '783' ),
        ( 'Beholder Special Attacks 7',                                      '784' ),
        ( 'Beholder Special Attacks 8',                                      '785' ),
        ( 'Beholder Special Attacks 9',                                      '786' ),
        ( 'Beholder Special Attacks 10',                                     '787' ),
        ( 'Beholder Special Attacks AI',                                     '736' ),
        ( 'Blinding Speed',                                                  '647' ),
        ( 'Bolt, Ability Drain Charisma',                                    '_BOLT_ABILITY_DRAIN_CHARISMA' ),
        ( 'Bolt, Ability Drain Constitution',                                '_BOLT_ABILITY_DRAIN_CONSTITUTION' ),
        ( 'Bolt, Ability Drain Dexterity',                                   '_BOLT_ABILITY_DRAIN_DEXTERITY' ),
        ( 'Bolt, Ability Drain Intelligence',                                '_BOLT_ABILITY_DRAIN_INTELLIGENCE' ),
        ( 'Bolt, Ability Drain Strength',                                    '_BOLT_ABILITY_DRAIN_STRENGTH' ),
        ( 'Bolt, Ability Drain Wisdom',                                      '_BOLT_ABILITY_DRAIN_WISDOM' ),
        ( 'Bolt, Acid',                                                      '_BOLT_ACID' ),
        ( 'Bolt, Charm',                                                     '_BOLT_CHARM' ),
        ( 'Bolt, Cold',                                                      '_BOLT_COLD' ),
        ( 'Bolt, Confuse',                                                   '_BOLT_CONFUSE' ),
        ( 'Bolt, Daze',                                                      '_BOLT_DAZE' ),
        ( 'Bolt, Death',                                                     '_BOLT_DEATH' ),
        ( 'Bolt, Disease',                                                   '_BOLT_DISEASE' ),
        ( 'Bolt, Dominate',                                                  '_BOLT_DOMINATE' ),
        ( 'Bolt, Fire',                                                      '_BOLT_FIRE' ),
        ( 'Bolt, Knockdown',                                                 '_BOLT_KNOCKDOWN' ),
        ( 'Bolt, Level Drain',                                               '_BOLT_LEVEL_DRAIN' ),
        ( 'Bolt, Lightning',                                                 '_BOLT_LIGHTNING' ),
        ( 'Bolt, Paralyze',                                                  '_BOLT_PARALYZE' ),
        ( 'Bolt, Poison',                                                    '_BOLT_POISON' ),
        ( 'Bolt, Shards',                                                    '_BOLT_SHARDS' ),
        ( 'Bolt, Slow',                                                      '_BOLT_SLOW' ),
        ( 'Bolt, Stun',                                                      '_BOLT_STUN' ),
        ( 'Bolt, Web',                                                       '_BOLT_WEB' ),
        ( 'Bull''s Strength (Blackguard)',                                   '_BG_BULLS_STRENGTH' ),
        ( 'Caltrops',                                                        'SPELL_GRENADE_CALTROPS' ),
        ( 'Captivating Song',                                                '686' ),
        ( 'Cat''s Grace (Harper Scout)',                                     '481' ),
        ( 'Chaos Spittle',                                                   '770' ),
        ( 'Chickenegg',                                                      'SPELL_GRENADE_CHICKEN' ),
        ( 'Choking Powder',                                                  'SPELL_GRENADE_CHOKING' ),
        ( 'Cone, Sonic',                                                     '_CONE_SONIC' ),
        ( 'Cone of Acid',                                                    '_CONE_ACID' ),
        ( 'Cone of Disease',                                                 '_CONE_DISEASE' ),
        ( 'Cone of Fire',                                                    '_CONE_FIRE' ),
        ( 'Cone of Frost',                                                   '_CONE_COLD' ),
        ( 'Cone of Lightning',                                               '_CONE_LIGHTNING' ),
        ( 'Cone of Poison',                                                  '_CONE_POISON' ),
        ( 'Construct Shape',                                                 '737' ),
        ( 'Construct Shape: Demonflesh Golem',                               '739' ),
        ( 'Construct Shape: Iron Golem',                                     '740' ),
        ( 'Construct Shape: Stone Golem',                                    '738' ),
        ( 'Contagion (Blackguard)',                                          '_BG_CONTAGION' ),
        ( 'Craft Harper Item',                                               'SPELL_CRAFT_HARPER_ITEM' ),
        ( 'Create Undead (Blackguard)',                                      '_BG_CREATEDEAD' ),
        ( 'Cure Critical Wounds - Others',                                   '567' ),
        ( 'Curse Song',                                                      '_EPIC_CURSE_SONG' ),
        ( 'Darkness (Assassin)',                                             '_AS_DARKNESS' ),
        ( 'Darkness (shifted shapes)',                                       '688' ),
        ( 'Death Domain, Negative Plane Avatar',                             '_NEGATIVE_PLANE_AVATAR' ),
        ( 'Deathless Master Touch',                                          '_PM_DEATHLESS_MASTER_TOUCH' ),
        ( 'Deck of Hazards',                                                 'SPELL_DECK_OF_MANY_THINGS' ),
        ( 'Deck of Hazards: Butterflies',                                    'SPELL_DECK_BUTTERFLYSPRAY' ),
        ( 'Deck of Hazards: Gem Spray',                                      'SPELL_DECK_GEMSPRAY' ),
        ( 'Deck of Hazards: Negative Plane Avatar',                          'SPELL_DECK_AVATAR' ),
        ( 'Deflecting Force',                                                '774' ),
        ( 'Divine Might',                                                    'SPELL_DIVINE_MIGHT' ),
        ( 'Divine Shield',                                                   'SPELL_DIVINE_SHIELD' ),
        ( 'Divine Wrath',                                                    '_DC_DIVINE_WRATH' ),
        ( 'DM Tool 1',                                                       '820' ),
        ( 'DM Tool 2',                                                       '821' ),
        ( 'DM Tool 3',                                                       '822' ),
        ( 'DM Tool 4',                                                       '823' ),
        ( 'DM Tool 5',                                                       '824' ),
        ( 'DM Tool 6',                                                       '825' ),
        ( 'DM Tool 7',                                                       '826' ),
        ( 'DM Tool 8',                                                       '827' ),
        ( 'DM Tool 9',                                                       '828' ),
        ( 'DM Tool 10',                                                      '829' ),
        ( 'Dragon Breath (red dragon disciple)',                             '690' ),
        ( 'Dragon Breath, Acid',                                             '_DRAGON_BREATH_ACID' ),
        ( 'Dragon Breath, Cold',                                             '_DRAGON_BREATH_COLD' ),
        ( 'Dragon Breath, Fear',                                             '_DRAGON_BREATH_FEAR' ),
        ( 'Dragon Breath, Fire',                                             '_DRAGON_BREATH_FIRE' ),
        ( 'Dragon Breath, Fire (dragon shape)',                              '797' ),
        ( 'Dragon Breath, Gas',                                              '_DRAGON_BREATH_GAS' ),
        ( 'Dragon Breath, Gas (dragon shape)',                               '798' ),
        ( 'Dragon Breath, Lightning',                                        '_DRAGON_BREATH_LIGHTNING' ),
        ( 'Dragon Breath, Lightning (dragon shape)',                         '796' ),
        ( 'Dragon Breath, Negative Energy ',                                 '_DRAGON_BREATH_NEGATIVE' ),
        ( 'Dragon Breath, Paralysis',                                        '_DRAGON_BREATH_PARALYZE' ),
        ( 'Dragon Breath, Prismatic',                                        '771' ),
        ( 'Dragon Breath, Sleep',                                            '_DRAGON_BREATH_SLEEP' ),
        ( 'Dragon Breath, Slow',                                             '_DRAGON_BREATH_SLOW' ),
        ( 'Dragon Breath, Weaken',                                           '_DRAGON_BREATH_WEAKEN' ),
        ( 'Dragon Shape',                                                    '725' ),
        ( 'Dragon Shape: Blue',                                              '708' ),
        ( 'Dragon Shape: Green',                                             '709' ),
        ( 'Dragon Shape: Red',                                               '707' ),
        ( 'Eagle''s Splendor (Harper Scout)',                                '482' ),
        ( 'Elemental Shape: Air',                                            '400' ),
        ( 'Elemental Shape: Earth',                                          '399' ),
        ( 'Elemental Shape: Fire',                                           '397' ),
        ( 'Elemental Shape: Water',                                          '398' ),
        ( 'Empty Body',                                                      '_EMPTY_BODY' ),
        ( 'Etherealness (monster ability)',                                  '724' ),
        ( 'Evil Eye',                                                        '_SEAHAG_EVILEYE' ),
        ( 'Extract Brain',                                                   '716' ),
        ( 'Eyeball Flame Ray Attack',                                        '712' ),
        ( 'Eyeball Frost Ray Attack ',                                       '710' ),
        ( 'Eyeball Inflict Wounds Ray',                                      '711' ),
        ( 'Fear (Purple Dragon Knight)',                                     '808' ),
        ( 'Ferocity',                                                        '_FEROCITY_1' ),
        ( 'Ferocity, Greater',                                               '_FEROCITY_3' ),
        ( 'Ferocity, Improved',                                              '_FEROCITY_2' ),
        ( 'Final Stand',                                                     '810' ),
        ( 'Fire Stream',                                                     '801' ),
        ( 'Firebomb',                                                        '744' ),
        ( 'Flame Twin',                                                      '615' ),
        ( 'Flameberry',                                                      '618' ),
        ( 'Flying Debris',                                                   'SPELL_FLYING_DEBRIS' ),
        ( 'Gaze, Charm',                                                     '_GAZE_CHARM' ),
        ( 'Gaze, Confusion',                                                 '_GAZE_CONFUSION' ),
        ( 'Gaze, Daze',                                                      '_GAZE_DAZE' ),
        ( 'Gaze, Death',                                                     '_GAZE_DEATH' ),
        ( 'Gaze, Destroy Chaos',                                             '_GAZE_DESTROY_CHAOS' ),
        ( 'Gaze, Destroy Evil',                                              '_GAZE_DESTROY_EVIL' ),
        ( 'Gaze, Destroy Good',                                              '_GAZE_DESTROY_GOOD' ),
        ( 'Gaze, Destroy Law',                                               '_GAZE_DESTROY_LAW' ),
        ( 'Gaze, Dominate',                                                  '_GAZE_DOMINATE' ),
        ( 'Gaze, Dominate (shifter shapes)',                                 '800' ),
        ( 'Gaze, Doom',                                                      '_GAZE_DOOM' ),
        ( 'Gaze, Fear',                                                      '_GAZE_FEAR' ),
        ( 'Gaze, Paralysis',                                                 '_GAZE_PARALYSIS' ),
        ( 'Gaze, Petrification',                                             '_GAZE_PETRIFY' ),
        ( 'Gaze, Petrification (shifter shapes)',                            '687' ),
        ( 'Gaze, Stunned',                                                   '_GAZE_STUNNED' ),
        ( 'Ghostly Visage (Assassin)',                                       '_AS_GHOSTLY_VISAGE' ),
        ( 'Goblin Ballista Fireball',                                        '553' ),
        ( 'Golem Slam',                                                      '715' ),
        ( 'Greater Wildshape I (wyrmling shape)',                            '_EPIC_SHAPE_DRAGONKIN' ),
        ( 'Greater Wildshape I: Wyrmling, Black',                            '660' ),
        ( 'Greater Wildshape I: Wyrmling, Blue',                             '659' ),
        ( 'Greater Wildshape I: Wyrmling, Green',                            '662' ),
        ( 'Greater Wildshape I: Wyrmling, Red',                              '658' ),
        ( 'Greater Wildshape I: Wyrmling, White',                            '661' ),
        ( 'Greater Wildshape II',                                            '675' ),
        ( 'Greater Wildshape II: Gargoyle',                                  '678' ),
        ( 'Greater Wildshape II: Harpy',                                     '672' ),
        ( 'Greater Wildshape II: Minotaur',                                  '680' ),
        ( 'Greater Wildshape III',                                           '676' ),
        ( 'Greater Wildshape III: Basilisk',                                 '670' ),
        ( 'Greater Wildshape III: Drider',                                   '673' ),
        ( 'Greater Wildshape III: Manticore',                                '674' ),
        ( 'Greater Wildshape IV',                                            '677' ),
        ( 'Greater Wildshape IV: Large Dire Tiger',                          '694' ),
        ( 'Greater Wildshape IV: Medusa',                                    '679' ),
        ( 'Greater Wildshape IV: Mindflayer',                                '691' ),
        ( 'Hail of Arrows',                                                  '_AA_HAIL_OF_ARROWS' ),
        ( 'Harm Self (Undead)',                                              '759' ),
        ( 'Haste-Slow',                                                      '563' ),
        ( 'Hell Hound Fire Breath',                                          '_HELL_HOUND_FIREBREATH' ),
        ( 'Hell Inferno',                                                    '762' ),
        ( 'Herb, Belladonna',                                                '409' ),
        ( 'Herb, Garlic',                                                    '410' ),
        ( 'Heroic Shield',                                                   '807' ),
        ( 'Holy Water',                                                      'SPELL_GRENADE_HOLY' ),
        ( 'Horrific Appearance',                                             '_AURA_HORRIFICAPPEARANCE' ),
        ( 'Howl, Confusion',                                                 '_HOWL_CONFUSE' ),
        ( 'Howl, Daze',                                                      '_HOWL_DAZE' ),
        ( 'Howl, Death',                                                     '_HOWL_DEATH' ),
        ( 'Howl, Doom',                                                      '_HOWL_DOOM' ),
        ( 'Howl, Fear',                                                      '_HOWL_FEAR' ),
        ( 'Howl, Paralysis',                                                 '_HOWL_PARALYSIS' ),
        ( 'Howl, Sonic',                                                     '_HOWL_SONIC' ),
        ( 'Howl, Stunning',                                                  '_HOWL_STUN' ),
        ( 'Humanoid Shape',                                                  '681' ),
        ( 'Humanoid Shape: Drow Warrior',                                    '682' ),
        ( 'Humanoid Shape: Kobold Commando',                                 '684' ),
        ( 'Humanoid Shape: Lizardfolk Whipmaster',                           '683' ),
        ( 'Hurl Rocks',                                                      '775' ),
        ( 'Hurl Rocks (HotU chapter 2)',                                     '773' ),
        ( 'Iceberry',                                                        '617' ),
        ( 'Illithid Mind Blast',                                             '789' ),
        ( 'Illithid Mind Blast (shifter shapes)',                            '693' ),
        ( 'Imbue Arrow',                                                     '_AA_IMBUE_ARROW' ),
        ( 'Improved Invisibility (Assassin)',                                '_AS_IMPROVED_INVISIBLITY' ),
        ( 'Improved Whirlwind Attack',                                       '_EPIC_IMPROVED_WHIRLWIND' ),
        ( 'Individual Dismount',                                             'SPELL_HORSE_DISMOUNT' ),
        ( 'Individual Mount',                                                'SPELL_HORSE_MOUNT' ),
        ( 'Inflict Serious Wounds (Blackguard)',                             '_BG_INFLICT_SERIOUS_WOUNDS' ),
        ( 'Inflict Critical Wounds (Blackguard)',                            '_BG_INFLICT_CRITICAL_WOUNDS' ),
        ( 'Inspire Courage',                                                 '811' ),
        ( 'Intensity',                                                       '_INTENSITY_1' ),
        ( 'Intensity, Greater',                                              '_INTENSITY_3' ),
        ( 'Intensity, Improved',                                             '_INTENSITY_2' ),
        ( 'Invisibility (Assassin)',                                         '_AS_INVISIBILITY' ),
        ( 'Invisibility (Harper Scout)',                                     '483' ),
        ( 'Invisibility (vampire shapes)',                                   '799' ),
        ( 'Ioun Stone Power: Blue',                                          'SPELL_IOUN_STONE_BLUE' ),
        ( 'Ioun Stone Power: Deep Red',                                      'SPELL_IOUN_STONE_DEEP_RED' ),
        ( 'Ioun Stone Power: Dusty Rose',                                    'SPELL_IOUN_STONE_DUSTY_ROSE' ),
        ( 'Ioun Stone Power: Pale Blue',                                     'SPELL_IOUN_STONE_PALE_BLUE' ),
        ( 'Ioun Stone Power: Pink',                                          'SPELL_IOUN_STONE_PINK' ),
        ( 'Ioun Stone Power: Pink Green',                                    'SPELL_IOUN_STONE_PINK_GREEN' ),
        ( 'Ioun Stone Power: Scarlet Blue',                                  'SPELL_IOUN_STONE_SCARLET_BLUE' ),
        ( 'Iron Golem Poison Gas',                                           '_GOLEM_BREATH_GAS' ),
        ( 'Kobold Jump',                                                     'SPELL_KOBOLD_JUMP' ),
        ( 'Krenshar, Fear Gaze',                                             '_KRENSHAR_SCARE' ),
        ( 'Lay on Hands',                                                    '_LAY_ON_HANDS' ),
        ( 'Lesser Body Adjustment',                                          '_LESSER_BODY_ADJUSTMENT' ),
        ( 'Lyrics of the Lich',                                              '616' ),
        ( 'Manipulate Portal Stone',                                         'SPELL_ACTIVATE_ITEM_PORTAL' ),
        ( 'Manticore Spikes',                                                '_MANTICORE_SPIKES' ),
        ( 'Manticore Spikes (shifter shapes)',                               '692' ),
        ( 'Mephit, Salt Breath',                                             '_MEPHIT_SALT_BREATH' ),
        ( 'Mephit, Steam Breath',                                            '_MEPHIT_STEAM_BREATH' ),
        ( 'Mighty Rage',                                                     '_EPIC_MIGHTY_RAGE' ),
        ( 'Mummy, Bolster Undead',                                           '_MUMMY_BOLSTER_UNDEAD' ),
        ( 'Nightmare, Smoke',                                                '819' ),
        ( 'Oath of Wrath',                                                   '809' ),
        ( 'Outsider Shape',                                                  '732' ),
        ( 'Outsider Shape: Azer Chieftain',                                  '733' ),
        ( 'Outsider Shape: Death Slaad Lord',                                '735' ),
        ( 'Outsider Shape: Rakshasa',                                        '734' ),
        ( 'Paralysis (Gelatinous Cube Poison)',                              '788' ),
        ( 'Party Dismount',                                                  'SPELL_HORSE_PARTY_DISMOUNT' ),
        ( 'Party Mount',                                                     'SPELL_HORSE_PARTY_MOUNT' ),
        ( 'Petrification Breath',                                            '_BREATH_PETRIFY' ),
        ( 'Petrification Touch',                                             '_TOUCH_PETRIFY' ),
        ( 'Player Tool 1',                                                   '830' ),
        ( 'Player Tool 2',                                                   '831' ),
        ( 'Player Tool 3',                                                   '832' ),
        ( 'Player Tool 4',                                                   '833' ),
        ( 'Player Tool 5',                                                   '834' ),
        ( 'Player Tool 6',                                                   '835' ),
        ( 'Player Tool 7',                                                   '836' ),
        ( 'Player Tool 8',                                                   '837' ),
        ( 'Player Tool 9',                                                   '838' ),
        ( 'Player Tool 10',                                                  '839' ),
        ( 'Power Stone',                                                     'SPELL_POWERSTONE' ),
        ( 'Protection Domain, Divine Protection',                            '_DIVINE_PROTECTION' ),
        ( 'Psionic Charm Monster',                                           '_CHARMMONSTER' ),
        ( 'Psionic Inertial Barrier',                                        '741' ),
        ( 'Psionic Mass Concussion',                                         '763' ),
        ( 'Psionic Mind Blast',                                              '_MINDBLAST' ),
        ( 'Psionic Mind Blast 10m Radius',                                   '713' ),
        ( 'Pulse, Ability Drain Charisma',                                   '_PULSE_ABILITY_DRAIN_CHARISMA' ),
        ( 'Pulse, Ability Drain Constitution',                               '_PULSE_ABILITY_DRAIN_CONSTITUTION' ),
        ( 'Pulse, Ability Drain Dexterity',                                  '_PULSE_ABILITY_DRAIN_DEXTERITY' ),
        ( 'Pulse, Ability Drain Intelligence',                               '_PULSE_ABILITY_DRAIN_INTELLIGENCE' ),
        ( 'Pulse, Ability Drain Strength',                                   '_PULSE_ABILITY_DRAIN_STRENGTH' ),
        ( 'Pulse, Ability Drain Wisdom',                                     '_PULSE_ABILITY_DRAIN_WISDOM' ),
        ( 'Pulse, Air Elemental Whirlwind',                                  '_PULSE_WHIRLWIND' ),
        ( 'Pulse, Cold',                                                     '_PULSE_COLD' ),
        ( 'Pulse, Death',                                                    '_PULSE_DEATH' ),
        ( 'Pulse, Disease',                                                  '_PULSE_DISEASE' ),
        ( 'Pulse, Fire',                                                     '_PULSE_FIRE' ),
        ( 'Pulse, Holy',                                                     '_PULSE_HOLY' ),
        ( 'Pulse, Level Drain',                                              '_PULSE_LEVEL_DRAIN' ),
        ( 'Pulse, Lightning',                                                '_PULSE_LIGHTNING' ),
        ( 'Pulse, Negative',                                                 '_PULSE_NEGATIVE' ),
        ( 'Pulse, Poison',                                                   '_PULSE_POISON' ),
        ( 'Pulse, Vrock Spores',                                             '_PULSE_SPORES' ),
        ( 'Pulse, Water Elemental Drown',                                    '_PULSE_DROWN' ),
        ( 'Rage (monster)',                                                  '_RAGE_3' ),
        ( 'Rage, Greater',                                                   '_RAGE_5' ),
        ( 'Rage, Improved',                                                  '_RAGE_4' ),
        ( 'Rallying Cry',                                                    '806' ),
        ( 'Remove Disease (Paladin)',                                        '_REMOVE_DISEASE' ),
        ( 'Restoration - Other',                                             '568' ),
        ( 'Rogue''s Cunning',                                                '_ROGUES_CUNNING' ),
        ( 'Seeker Arrow I',                                                  '_AA_SEEKER_ARROW_1' ),
        ( 'Seeker Arrow II',                                                 '_AA_SEEKER_ARROW_2' ),
        ( 'Shadow attack',                                                   '769' ),
        ( 'Shadow attack (shifter shapes)',                                  '802' ),
        ( 'Shadow Daze',                                                     'SPELL_SHADOW_DAZE' ),
        ( 'Shadow Evade',                                                    'SPELL_SHADOW_EVADE' ),
        ( 'Shadowblend',                                                     '757' ),
        ( 'Sleep (Harper Scout)',                                            '480' ),
        ( 'Smite Evil',                                                      '_SMITE_EVIL' ),
        ( 'Spellstaff',                                                      'SPELL_SPELLSTAFF' ),
        ( 'Strength Domain, Divine Strength',                                '_DIVINE_STRENGTH' ),
        ( 'Summon Animal Companion',                                         '_SUMMON_ANIMAL_COMPANION' ),
        ( 'Summon Baatezu',                                                  '701' ),
        ( 'Summon Celestial',                                                '_SUMMON_CELESTIAL' ),
        ( 'Summon Familiar',                                                 '_SUMMON_FAMILIAR' ),
        ( 'Summon Fiend (Blackguard)',                                       '_BG_FIENDISH_SERVANT' ),
        ( 'Summon Greater Undead (Pale Master)',                             '_PM_SUMMON_GREATER_UNDEAD' ),
        ( 'Summon Mephit',                                                   '_SUMMON_MEPHIT' ),
        ( 'Summon Mount',                                                    'SPELL_PALADIN_SUMMON_MOUNT' ),
        ( 'Summon Shadow (Shadowdancer)',                                    'SPELL_SUMMON_SHADOW' ),
        ( 'Summon Slaad',                                                    '_SUMMON_SLAAD' ),
        ( 'Summon Tanarri',                                                  '_SUMMON_TANARRI' ),
        ( 'Summon Undead (Pale Master)',                                     '_PM_SUMMON_UNDEAD' ),
        ( 'Tanglefoot Bag',                                                  'SPELL_GRENADE_TANGLE' ),
        ( 'Thunderstone',                                                    'SPELL_GRENADE_THUNDERSTONE' ),
        ( 'Trap: Arrow',                                                     'SPELL_TRAP_ARROW' ),
        ( 'Trap: Bolt',                                                      'SPELL_TRAP_BOLT' ),
        ( 'Trap: Dart',                                                      'SPELL_TRAP_DART' ),
        ( 'Trap: Shuriken',                                                  'SPELL_TRAP_SHURIKEN' ),
        ( 'Trickery Domain, Divine Trickery',                                '_DIVINE_TRICKERY' ),
        ( 'Troglodyte Stench',                                               '_TROGLODYTE_STENCH' ),
        ( 'Turn Undead',                                                     '_TURN_UNDEAD' ),
        ( 'Tymora''s Smile',                                                 'SPELL_TYMORAS_SMILE' ),
        ( 'Tyrant Fog Zombie Mist',                                          '_TYRANT_FOG_MIST' ),
        ( 'Undead Graft I',                                                  '_PM_UNDEAD_GRAFT_1' ),
        ( 'Undead Graft II',                                                 '_PM_UNDEAD_GRAFT_2' ),
        ( 'Undead Shape',                                                    '685' ),
        ( 'Undead Shape: Risen Lord',                                        '704' ),
        ( 'Undead Shape: Spectre',                                           '706' ),
        ( 'Undead Shape: Vampire',                                           '705' ),
        ( 'War Domain, Battle Mastery',                                      '_BATTLE_MASTERY' ),
        ( 'Whirlwind Attack',                                                '_WHIRLWIND' ),
        ( 'Wholeness of Body',                                               '_WHOLENESS_OF_BODY' ),
        ( 'Wild Shape, Badger',                                              '405' ),
        ( 'Wild Shape, Boar',                                                '404' ),
        ( 'Wild Shape, Brown Bear',                                          '401' ),
        ( 'Wild Shape, Panther',                                             '402' ),
        ( 'Wild Shape, Wolf',                                                '403' ),
        ( 'Wyrmling Breath, Acid',                                           '664' ),
        ( 'Wyrmling Breath, Cold',                                           '663' ),
        ( 'Wyrmling Breath, Fire',                                           '665' ),
        ( 'Wyrmling Breath, Gas',                                            '666' ),
        ( 'Wyrmling Breath, Lightning',                                      '667' ),
        // The trailing info row:
        ( nil, 'SPELLABILITY' ) );

    // The NWScript constants for "normal" tails.
    TAIL_TYPE_NORMAL: array[0..15] of StringPair =
      ( ( 'None',                               nil ),
        ( 'Bone',                               nil ),
        ( 'Devil',                              nil ),
        ( 'Dragon, black',                      '9' ),
        ( 'Dragon, blue',                       '10' ),
        ( 'Dragon, brass',                      '4' ),
        ( 'Dragon, bronze',                     '5' ),
        ( 'Dragon, copper',                     '6' ),
        ( 'Dragon, gold',                       '8' ),
        ( 'Dragon, green',                      '11' ),
        ( 'Dragon, red',                        '12' ),
        ( 'Dragon, silver',                     '7' ),
        ( 'Dragon, white',                      '13' ),
        ( 'Lizard',                             nil ),
        ( 'Null tail (loads horse animations)', '14' ),
        // The trailing info row:
        ( nil, 'CREATURE_TAIL_TYPE' )
      );

    // The NWScript constants for scaled creature "tails".
    // That's "scaled" as in different sizes, not as in lizards. :)
    TAIL_HORSE_START = 182;
    TAIL_HORSE_END   = 244;
    TAIL_NIGHTMARE_1 = 331;
    TAIL_NIGHTMARE_2 = 332;
    TAIL_NIGHTMARE_3 = 333;
    TAIL_TYPE_SCALED: array[0..475] of StringPair = (
        ( 'None',                                            'CREATURE_TAIL_TYPE_NONE' ),
        ( 'Null (loads horse animations)',                   '14' ),
        ( 'Allip',                                           '401' ),
        ( 'animated, chest',                                 '415' ),
        ( 'Aranea',                                          '473' ),
        ( 'arch, target',                                    '402' ),
        ( 'Asabi, Chieftain',                                '227' ),
        ( 'Asabi, Shaman',                                   '224' ),
        ( 'Asabi, Warrior',                                  '231' ),
        ( 'Azer, Female',                                    '83' ),
        ( 'Azer, Male',                                      '84' ),
        ( 'Badger',                                          '349' ),
        ( 'Badger, Dire',                                    '347' ),
        ( 'Balor',                                           '287' ),
        ( 'Bartender',                                       '111' ),
        ( 'Basilisk',                                        '447' ),
        ( 'Bat',                                             '348' ),
        ( 'Bat, Horror',                                     '278' ),
        ( 'Bear, Black',                                     '352' ),
        ( 'Bear, Brown',                                     '350' ),
        ( 'Bear, Dire',                                      '353' ),
        ( 'Bear, Kodiak',                                    '354' ),
        ( 'Bear, Polar',                                     '355' ),
        ( 'Beetle, Fire',                                    '406' ),
        ( 'Beetle, Slicer',                                  '407' ),
        ( 'Beetle, Stag',                                    '403' ),
        ( 'Beetle, Stink',                                   '408' ),
        ( 'Begger',                                          '112' ),
        ( 'Beholder',                                        '409' ),
        ( 'Beholder, Eyeball',                               '411' ),
        ( 'Beholder, GZhorb',                                '398' ),
        ( 'Beholder, Mage',                                  '412' ),
        ( 'Beholder, Mother',                                '410' ),
        ( 'Blood, Sailer',                                   '113' ),
        ( 'Boar',                                            '351' ),
        ( 'Boar, Dire',                                      '356' ),
        ( 'Bodak',                                           '249' ),
        ( 'Bugbear, A',                                      '199' ),
        ( 'Bugbear, B',                                      '200' ),
        ( 'Bugbear, Chieftain, A',                           '201' ),
        ( 'Bugbear, Chieftain, B',                           '202' ),
        ( 'Bugbear, Shaman, A',                              '203' ),
        ( 'Bugbear, Shaman, B',                              '204' ),
        ( 'Bulette',                                         '414' ),
        ( 'Caladnei',                                        '179' ),
        ( 'Cat, Cat, Dire',                                  '368' ),
        ( 'Cat, Cougar',                                     '366' ),
        ( 'Cat, Crag, Cat',                                  '367' ),
        ( 'Cat, Jaguar',                                     '369' ),
        ( 'Cat, Krenshar',                                   '370' ),
        ( 'Cat, Leopard',                                    '371' ),
        ( 'Cat, Lion',                                       '372' ),
        ( 'Cat, MPanther',                                   '374' ),
        ( 'Cat, Panther',                                    '373' ),
        ( 'Chicken',                                         '357' ),
        ( 'Cockatrice',                                      '416' ),
        ( 'Convict',                                         '114' ),
        ( 'Cow',                                             '361' ),
        ( 'Cult, Member',                                    '115' ),
        ( 'Curst, Swordsman',                                '417' ),
        ( 'Deep, Rothe',                                     '362' ),
        ( 'Deer',                                            '363' ),
        ( 'Deer, Stag',                                      '364' ),
        ( 'Demi, Lich',                                      '418' ),
        ( 'Devil',                                           '288' ),
        ( 'Dog',                                             '388' ),
        ( 'Dog, Blinkdog',                                   '386' ),
        ( 'Dog, Dire, Wolf',                                 '387' ),
        ( 'Dog, Fenhound',                                   '389' ),
        ( 'Dog, Hell, Hound',                                '390' ),
        ( 'Dog, Shadow, Mastif',                             '391' ),
        ( 'Dog, Winter, Wolf',                               '393' ),
        ( 'Dog, Wolf',                                       '392' ),
        ( 'Dog, Worg',                                       '394' ),
        ( 'Doom, Knight',                                    '250' ),
        ( 'Dracolich',                                       '321' ),
        ( 'Dragon, Black',                                   '322' ),
        ( 'Dragon, Blue',                                    '323' ),
        ( 'Dragon, Brass',                                   '324' ),
        ( 'Dragon, Bronze',                                  '325' ),
        ( 'Dragon, Copper',                                  '326' ),
        ( 'Dragon, Gold',                                    '327' ),
        ( 'Dragon, Green',                                   '328' ),
        ( 'Dragon, Mist',                                    '329' ),
        ( 'Dragon, Pris',                                    '330' ),
        ( 'Dragon, Red',                                     '331' ),
        ( 'Dragon, Shadow',                                  '332' ),
        ( 'Dragon, Silver',                                  '333' ),
        ( 'Dragon, White',                                   '334' ),
        ( 'Drider',                                          '289' ),
        ( 'Drider, Chief',                                   '291' ),
        ( 'Drider, Female',                                  '290' ),
        ( 'Drow, Cleric',                                    '94' ),
        ( 'Drow, Female, 1',                                 '95' ),
        ( 'Drow, Female, 2',                                 '96' ),
        ( 'Drow, Fighter',                                   '97' ),
        ( 'Drow, Matron',                                    '93' ),
        ( 'Drow, Slave',                                     '98' ),
        ( 'Drow, Warrior, 1',                                '99' ),
        ( 'Drow, Warrior, 2',                                '100' ),
        ( 'Drow, Warrior, 3',                                '101' ),
        ( 'Drow, Wizard',                                    '102' ),
        ( 'Druegar, Cleric',                                 '85' ),
        ( 'Druegar, Fighter',                                '86' ),
        ( 'Dryad',                                           '116' ),
        ( 'Duergar, Chief',                                  '87' ),
        ( 'Duergar, Slave',                                  '88' ),
        ( 'Dwarf, NPC, Female',                              '89' ),
        ( 'Dwarf, NPC, Male',                                '90' ),
        ( 'Elemental, Air',                                  '339' ),
        ( 'Elemental, Air, Elder',                           '340' ),
        ( 'Elemental, Earth',                                '341' ),
        ( 'Elemental, Earth, Elder',                         '342' ),
        ( 'Elemental, Fire',                                 '343' ),
        ( 'Elemental, Fire, Elder',                          '344' ),
        ( 'Elemental, Water',                                '345' ),
        ( 'Elemental, Water, Elder',                         '346' ),
        ( 'Elf, NPC, Female',                                '103' ),
        ( 'Elf, NPC, Male, 01',                              '104' ),
        ( 'Elf, NPC, Male, 02',                              '105' ),
        ( 'Ettercap',                                        '479' ),
        ( 'Ettin',                                           '292' ),
        ( 'Fairy',                                           '419' ),
        ( 'Falcon',                                          '378' ),
        ( 'Female, 01',                                      '117' ),
        ( 'Female, 02',                                      '118' ),
        ( 'Female, 03',                                      '119' ),
        ( 'Female, 04',                                      '120' ),
        ( 'Formian, Myrmarch',                               '293' ),
        ( 'Formian, Queen',                                  '294' ),
        ( 'Formian, Warrior',                                '295' ),
        ( 'Formian, Worker',                                 '296' ),
        ( 'Gargoyle',                                        '420' ),
        ( 'GelatinousCube',                                  '297' ),
        ( 'Ghast',                                           '251' ),
        ( 'Ghoul',                                           '252' ),
        ( 'Ghoul, Lord',                                     '253' ),
        ( 'Giant, Fire',                                     '300' ),
        ( 'Giant, Fire, Female',                             '301' ),
        ( 'Giant, Frost',                                    '302' ),
        ( 'Giant, Frost, Female',                            '303' ),
        ( 'Giant, Hill',                                     '298' ),
        ( 'Giant, Mountain',                                 '299' ),
        ( 'Gnoll, Warrior',                                  '195' ),
        ( 'Gnoll, Wiz',                                      '196' ),
        ( 'Gnome, NPC, Female',                              '106' ),
        ( 'Gnome, NPC, Male',                                '107' ),
        ( 'Goblin, A',                                       '208' ),
        ( 'Goblin, B',                                       '209' ),
        ( 'Goblin, Chief, A',                                '206' ),
        ( 'Goblin, Chief, B',                                '207' ),
        ( 'Goblin, Shaman, A',                               '210' ),
        ( 'Goblin, Shaman, B',                               '211' ),
        ( 'Golem, Adamantium',                               '283' ),
        ( 'Golem, Bone',                                     '335' ),
        ( 'Golem, Clay',                                     '336' ),
        ( 'Golem, Demonflesh',                               '284' ),
        ( 'Golem, Diamond',                                  '279' ),
        ( 'Golem, Emerald',                                  '280' ),
        ( 'Golem, Flesh',                                    '337' ),
        ( 'Golem, Iron',                                     '285' ),
        ( 'Golem, Mithril',                                  '286' ),
        ( 'Golem, Ruby',                                     '281' ),
        ( 'Golem, Stone',                                    '338' ),
        ( 'Gorgon',                                          '423' ),
        ( 'Gray, Ooze',                                      '424' ),
        ( 'Grey, Render',                                    '421' ),
        ( 'Gynosphinx',                                      '425' ),
        ( 'Hagatha',                                         '180' ),
        ( 'Halaster',                                        '181' ),
        ( 'Half-Orc, NPC, Female',                           '108' ),
        ( 'Half-Orc, NPC, Male, 01',                         '109' ),
        ( 'Half-Orc, NPC, Male, 02',                         '110' ),
        ( 'Halfling, NPC, Female',                           '81' ),
        ( 'Halfling, NPC, Male',                             '82' ),
        ( 'Harat',                                           '396' ),
        ( 'Harat, Small',                                    '397' ),
        ( 'Harpy',                                           '429' ),
        ( 'Helmed, Horror',                                  '255' ),
        ( 'Hobgoblin, Warrior',                              '197' ),
        ( 'Hobgoblin, Wizard',                               '198' ),
        ( 'Hook, Horror',                                    '431' ),
        ( 'Horse, Black',                                    '54' ),
        ( 'Horse, Black, chain barding',                     '59' ),
        ( 'Horse, Black, chain barding, packs',              '64' ),
        ( 'Horse, Black, leather barding',                   '57' ),
        ( 'Horse, Black, leather barding, packs',            '62' ),
        ( 'Horse, Black, purple barding',                    '60' ),
        ( 'Horse, Black, purple barding, packs',             '65' ),
        ( 'Horse, Black, red barding',                       '61' ),
        ( 'Horse, Black, red barding, packs',                '66' ),
        ( 'Horse, Black, saddle',                            '55' ),
        ( 'Horse, Black, saddle, packs',                     '56' ),
        ( 'Horse, Black, scale mail barding',                '58' ),
        ( 'Horse, Black, scale mail barding, packs',         '63' ),
        ( 'Horse, Gunpowder',                                '28' ),
        ( 'Horse, Gunpowder, chain barding',                 '33' ),
        ( 'Horse, Gunpowder, chain barding, packs',          '38' ),
        ( 'Horse, Gunpowder, leather barding',               '31' ),
        ( 'Horse, Gunpowder, leather barding, packs',        '36' ),
        ( 'Horse, Gunpowder, purple barding',                '34' ),
        ( 'Horse, Gunpowder, purple barding, packs',         '39' ),
        ( 'Horse, Gunpowder, red barding',                   '35' ),
        ( 'Horse, Gunpowder, red barding, packs',            '40' ),
        ( 'Horse, Gunpowder, saddle',                        '29' ),
        ( 'Horse, Gunpowder, saddle, packs',                 '30' ),
        ( 'Horse, Gunpowder, scale mail barding',            '32' ),
        ( 'Horse, Gunpowder, scale mail barding, packs',     '37' ),
        ( 'Horse, Jousting, Black and white cloth',          '72' ),
        ( 'Horse, Jousting, Black cloth',                    '78' ),
        ( 'Horse, Jousting, Blue and gold cloth',            '71' ),
        ( 'Horse, Jousting, Blue and pink cloth',            '76' ),
        ( 'Horse, Jousting, Cyan and white cloth',           '79' ),
        ( 'Horse, Jousting, Green cloth',                    '75' ),
        ( 'Horse, Jousting, Purple cloth',                   '70' ),
        ( 'Horse, Jousting, Red and black Striped cloth',    '74' ),
        ( 'Horse, Jousting, Red and gold brick cloth',       '77' ),
        ( 'Horse, Jousting, Red and yellow cloth',           '73' ),
        ( 'Horse, Jousting, White cloth',                    '80' ),
        ( 'Horse, Spotted',                                  '41' ),
        ( 'Horse, Spotted, chain barding',                   '46' ),
        ( 'Horse, Spotted, chain barding, packs',            '51' ),
        ( 'Horse, Spotted, leather barding',                 '44' ),
        ( 'Horse, Spotted, leather barding, packs',          '49' ),
        ( 'Horse, Spotted, purple barding',                  '47' ),
        ( 'Horse, Spotted, purple barding, packs',           '52' ),
        ( 'Horse, Spotted, red barding',                     '48' ),
        ( 'Horse, Spotted, red barding, packs',              '53' ),
        ( 'Horse, Spotted, saddle',                          '42' ),
        ( 'Horse, Spotted, saddle, packs',                   '43' ),
        ( 'Horse, Spotted, scale mail barding',              '45' ),
        ( 'Horse, Spotted, scale mail barding, packs',       '50' ),
        ( 'Horse, Walnut',                                   '15' ),
        ( 'Horse, Walnut, chain barding',                    '20' ),
        ( 'Horse, Walnut, chain barding, packs',             '25' ),
        ( 'Horse, Walnut, leather barding',                  '18' ),
        ( 'Horse, Walnut, leather barding, packs',           '23' ),
        ( 'Horse, Walnut, purple barding',                   '21' ),
        ( 'Horse, Walnut, purple barding, packs',            '26' ),
        ( 'Horse, Walnut, red barding',                      '22' ),
        ( 'Horse, Walnut, red barding, packs',               '27' ),
        ( 'Horse, Walnut, saddle',                           '16' ),
        ( 'Horse, Walnut, saddle, packs',                    '17' ),
        ( 'Horse, Walnut, scale mail barding',               '19' ),
        ( 'Horse, Walnut, scale mail barding, packs',        '24' ),
        ( 'House, Guard',                                    '121' ),
        ( 'Human, NPC, Female, 01',                          '122' ),
        ( 'Human, NPC, Female, 02',                          '123' ),
        ( 'Human, NPC, Female, 03',                          '124' ),
        ( 'Human, NPC, Female, 04',                          '125' ),
        ( 'Human, NPC, Female, 05',                          '126' ),
        ( 'Human, NPC, Female, 06',                          '127' ),
        ( 'Human, NPC, Female, 07',                          '128' ),
        ( 'Human, NPC, Female, 08',                          '129' ),
        ( 'Human, NPC, Female, 09',                          '130' ),
        ( 'Human, NPC, Female, 10',                          '131' ),
        ( 'Human, NPC, Female, 11',                          '132' ),
        ( 'Human, NPC, Female, 12',                          '133' ),
        ( 'Human, NPC, Male, 01',                            '134' ),
        ( 'Human, NPC, Male, 02',                            '135' ),
        ( 'Human, NPC, Male, 03',                            '136' ),
        ( 'Human, NPC, Male, 04',                            '137' ),
        ( 'Human, NPC, Male, 05',                            '138' ),
        ( 'Human, NPC, Male, 06',                            '139' ),
        ( 'Human, NPC, Male, 07',                            '140' ),
        ( 'Human, NPC, Male, 08',                            '141' ),
        ( 'Human, NPC, Male, 09',                            '142' ),
        ( 'Human, NPC, Male, 10',                            '143' ),
        ( 'Human, NPC, Male, 11',                            '144' ),
        ( 'Human, NPC, Male, 12',                            '145' ),
        ( 'Human, NPC, Male, 13',                            '146' ),
        ( 'Human, NPC, Male, 14',                            '147' ),
        ( 'Human, NPC, Male, 15',                            '148' ),
        ( 'Human, NPC, Male, 16',                            '149' ),
        ( 'Human, NPC, Male, 17',                            '150' ),
        ( 'Human, NPC, Male, 18',                            '151' ),
        ( 'Imp',                                             '433' ),
        ( 'Inn, Keeper',                                     '152' ),
        ( 'Intellect, Devourer',                             '446' ),
        ( 'Kid, Female',                                     '153' ),
        ( 'Kid, Male',                                       '154' ),
        ( 'Kobold, A',                                       '218' ),
        ( 'Kobold, B',                                       '219' ),
        ( 'Kobold, Chief, A',                                '220' ),
        ( 'Kobold, Chief, B',                                '221' ),
        ( 'Kobold, Shaman, A',                               '222' ),
        ( 'Kobold, Shaman, B',                               '223' ),
        ( 'Lantern, Archon',                                 '404' ),
        ( 'Lich',                                            '254' ),
        ( 'Lizardfolk, A',                                   '232' ),
        ( 'Lizardfolk, B',                                   '230' ),
        ( 'Lizardfolk, Shaman, A',                           '225' ),
        ( 'Lizardfolk, Shaman, B',                           '226' ),
        ( 'Lizardfolk, Warrior, A',                          '228' ),
        ( 'Lizardfolk, Warrior, B',                          '229' ),
        ( 'Lord, Antoine',                                   '182' ),
        ( 'Luskan, Guard',                                   '155' ),
        ( 'Maggris',                                         '395' ),
        ( 'Male, 01',                                        '156' ),
        ( 'Male, 02',                                        '157' ),
        ( 'Male, 03',                                        '158' ),
        ( 'Male, 04',                                        '159' ),
        ( 'Male, 05',                                        '160' ),
        ( 'Manticore',                                       '426' ),
        ( 'Masterius',                                       '183' ),
        ( 'Masterius, Full, Power',                          '184' ),
        ( 'Medusa',                                          '161' ),
        ( 'Mephisto, Big',                                   '399' ),
        ( 'Mephisto, Norm',                                  '400' ),
        ( 'Mephit, Air',                                     '434' ),
        ( 'Mephit, Dust',                                    '435' ),
        ( 'Mephit, Earth',                                   '436' ),
        ( 'Mephit, Fire',                                    '437' ),
        ( 'Mephit, Ice',                                     '438' ),
        ( 'Mephit, Magma',                                   '439' ),
        ( 'Mephit, Ooze',                                    '440' ),
        ( 'Mephit, Salt',                                    '441' ),
        ( 'Mephit, Steam',                                   '442' ),
        ( 'Mephit, Water',                                   '443' ),
        ( 'Mindflayer',                                      '448' ),
        ( 'Mindflayer, Alhoon',                              '449' ),
        ( 'Mindflayer2',                                     '450' ),
        ( 'Minogon',                                         '305' ),
        ( 'Minotaur',                                        '306' ),
        ( 'Minotaur, Chieftain',                             '304' ),
        ( 'Minotaur, Shaman',                                '307' ),
        ( 'Mohrg',                                           '256' ),
        ( 'Mummy, Common',                                   '257' ),
        ( 'Mummy, Fighter, 2',                               '258' ),
        ( 'Mummy, Greater',                                  '260' ),
        ( 'Mummy, Warrior',                                  '259' ),
        ( 'Nightmare',                                       '69' ),
        ( 'Nightmare, barding',                              '67' ),
        ( 'Nightmare, saddle',                               '68' ),
        ( 'NW, Militia, Member',                             '162' ),
        ( 'NWN, Aarin',                                      '185' ),
        ( 'NWN, Aribeth',                                    '186' ),
        ( 'NWN, Aribeth, Evil',                              '187' ),
        ( 'NWN, Haedraline',                                 '188' ),
        ( 'NWN, Maugrim',                                    '189' ),
        ( 'NWN, Morag',                                      '190' ),
        ( 'NWN, Nasher',                                     '191' ),
        ( 'NWN, Sedos',                                      '192' ),
        ( 'Nymph',                                           '163' ),
        ( 'objectBoat',                                      '413' ),
        ( 'Ochre, Jelly, Large',                             '451' ),
        ( 'Ochre, Jelly, Medium',                            '452' ),
        ( 'Ochre, Jelly, Small',                             '453' ),
        ( 'Ogre',                                            '308' ),
        ( 'Ogre, Chieftain',                                 '309' ),
        ( 'Ogre, ChieftainB',                                '311' ),
        ( 'Ogre, Elite',                                     '312' ),
        ( 'Ogre, Mage',                                      '310' ),
        ( 'Ogre, MageB',                                     '313' ),
        ( 'OgreB',                                           '314' ),
        ( 'Old, Man',                                        '164' ),
        ( 'Old, Woman',                                      '165' ),
        ( 'Orc, A',                                          '212' ),
        ( 'Orc, B',                                          '213' ),
        ( 'Orc, Chieftain, A',                               '214' ),
        ( 'Orc, Chieftain, B',                               '215' ),
        ( 'Orc, Shaman, A',                                  '216' ),
        ( 'Orc, Shaman, B',                                  '217' ),
        ( 'Ox',                                              '375' ),
        ( 'Parrot',                                          '376' ),
        ( 'PDK, Archer, Female',                             '166' ),
        ( 'PDK, Archer, Male',                               '167' ),
        ( 'PDK, Blade, Female',                              '168' ),
        ( 'PDK, Blade, Male',                                '169' ),
        ( 'Penguin',                                         '377' ),
        ( 'Plague, Victim',                                  '170' ),
        ( 'Prostitute, 01',                                  '171' ),
        ( 'Prostitute, 02',                                  '172' ),
        ( 'Quasit',                                          '432' ),
        ( 'Rakshasa, Bear, Male',                            '239' ),
        ( 'Rakshasa, Tiger, Female',                         '241' ),
        ( 'Rakshasa, Tiger, Male',                           '240' ),
        ( 'Rakshasa, Wolf, Male',                            '242' ),
        ( 'Rat',                                             '379' ),
        ( 'Rat, Dire',                                       '365' ),
        ( 'Raven',                                           '380' ),
        ( 'Sahuagin',                                        '243' ),
        ( 'Sahuagin, Cleric',                                '244' ),
        ( 'Sahuagin, Leader',                                '245' ),
        ( 'Satyr',                                           '246' ),
        ( 'Satyr, Archer',                                   '247' ),
        ( 'Satyr, Warrior',                                  '248' ),
        ( 'Sea, Hag',                                        '173' ),
        ( 'Seagull, Flying',                                 '381' ),
        ( 'Seagull, Walking',                                '382' ),
        ( 'Shadow',                                          '263' ),
        ( 'Shadow, Fiend',                                   '264' ),
        ( 'Shark, Goblin',                                   '383' ),
        ( 'Shark, Hammerhead',                               '384' ),
        ( 'Shark, Mako',                                     '385' ),
        ( 'Shield, Guardian',                                '422' ),
        ( 'Shop, Keeper',                                    '174' ),
        ( 'Skeletal, Devourer',                              '445' ),
        ( 'Skeleton, Chieftain',                             '266' ),
        ( 'Skeleton, Common',                                '267' ),
        ( 'Skeleton, Mage',                                  '265' ),
        ( 'Skeleton, Priest',                                '268' ),
        ( 'Skeleton, Warrior',                               '271' ),
        ( 'Skeleton, Warrior, 1',                            '269' ),
        ( 'Skeleton, Warrior, 2',                            '270' ),
        ( 'Slaad, Black',                                    '469' ),
        ( 'Slaad, Blue',                                     '464' ),
        ( 'Slaad, Death',                                    '465' ),
        ( 'Slaad, Gray',                                     '466' ),
        ( 'Slaad, Green',                                    '467' ),
        ( 'Slaad, Red',                                      '468' ),
        ( 'Slaad, White',                                    '470' ),
        ( 'Snake, Black, Cobra',                             '359' ),
        ( 'Snake, Cobra',                                    '358' ),
        ( 'Snake, Gold, Cobra',                              '360' ),
        ( 'Spectre',                                         '471' ),
        ( 'Sphinx',                                          '427' ),
        ( 'Spider, Demon',                                   '472' ),
        ( 'Spider, Dire',                                    '474' ),
        ( 'Spider, Giant',                                   '475' ),
        ( 'Spider, Phase',                                   '476' ),
        ( 'Spider, Sword',                                   '477' ),
        ( 'Spider, Wraith',                                  '478' ),
        ( 'Stinger',                                         '316' ),
        ( 'Stinger, Chieftain',                              '315' ),
        ( 'Stinger, Mage',                                   '317' ),
        ( 'Stinger, Warrior',                                '318' ),
        ( 'Succubus',                                        '175' ),
        ( 'Svirf, Female',                                   '91' ),
        ( 'Svirf, Male',                                     '92' ),
        ( 'Troglodyte',                                      '236' ),
        ( 'Troglodyte, Cleric',                              '237' ),
        ( 'Troglodyte, Warrior',                             '238' ),
        ( 'Troll',                                           '480' ),
        ( 'Troll, Chieftain',                                '481' ),
        ( 'Troll, Shaman',                                   '482' ),
        ( 'Umberhulk',                                       '483' ),
        ( 'Uthgard, Elk, Tribe',                             '176' ),
        ( 'Uthgard, Tiger, Tribe',                           '177' ),
        ( 'Vampire, Female',                                 '261' ),
        ( 'Vampire, Male',                                   '262' ),
        ( 'Vrock',                                           '430' ),
        ( 'Waitress',                                        '178' ),
        ( 'War, Devourer',                                   '444' ),
        ( 'Wereboar',                                        '319' ),
        ( 'Werecat',                                         '428' ),
        ( 'Wererat',                                         '484' ),
        ( 'Werewolf',                                        '485' ),
        ( 'Wight',                                           '272' ),
        ( 'Will, O, Wisp',                                   '405' ),
        ( 'Witch, King, Disguised',                          '193' ),
        ( 'Wraith',                                          '486' ),
        ( 'Wyrmling, Black',                                 '454' ),
        ( 'Wyrmling, Blue',                                  '455' ),
        ( 'Wyrmling, Brass',                                 '456' ),
        ( 'Wyrmling, Bronze',                                '457' ),
        ( 'Wyrmling, Copper',                                '458' ),
        ( 'Wyrmling, Gold',                                  '459' ),
        ( 'Wyrmling, Green',                                 '460' ),
        ( 'Wyrmling, Red',                                   '461' ),
        ( 'Wyrmling, Silver',                                '462' ),
        ( 'Wyrmling, White',                                 '463' ),
        ( 'Wyvern, Adult',                                   '487' ),
        ( 'Wyvern, Great',                                   '488' ),
        ( 'Wyvern, Juvenile',                                '489' ),
        ( 'Wyvern, Young',                                   '490' ),
        ( 'XP1, HeurodisLich',                               '194' ),
        ( 'Yuan, Ti',                                        '233' ),
        ( 'Yuan, Ti, Chieften',                              '234' ),
        ( 'Yuan, Ti, Wizard',                                '235' ),
        ( 'Zombie',                                          '273' ),
        ( 'Zombie, Rotting',                                 '274' ),
        ( 'Zombie, Tyrant, Fog',                             '277' ),
        ( 'Zombie, Warrior, 1',                              '275' ),
        ( 'Zombie, Warrior, 2',                              '276' ),
        // The trailing info row:
        ( nil, '' )
      );

    // NWScript constants for ambient music.
    TALKVOLUME: array[0..5] of pchar =
      ( '_SILENT_SHOUT',
        '_SHOUT',
        '_TALK',
        '_SILENT_TALK',
        '_WHISPER',
        // The next two would only be used if we were to cover the PC chat event.
        //'_PARTY',
        //'_TELL',
        // The trailing info row:
        'TALKVOLUME' );

    // NWScript constants for ambient music.
    TRACK: array[0..96] of StringPair =
      ( ( '(No Music Track)',                      '0' ),
        ( 'Aribeth Theme 1',                       '_THEME_ARIBETH1' ),
        ( 'Aribeth Theme 2',                       '_THEME_ARIBETH2' ),
        ( 'Boss Combat City ',                     '_BATTLE_CITYBOSS' ),
        ( 'Boss Combat Forest',                    '_BATTLE_FORESTBOSS' ),
        ( 'Boss Lizardfolk',                       '_BATTLE_LIZARDBOSS' ),
        ( 'City Combat 1',                         '_BATTLE_CITY1' ),
        ( 'City Combat 2',                         '_BATTLE_CITY2' ),
        ( 'City Combat 3',                         '_BATTLE_CITY3' ),
        ( 'City Docks Day',                        '_CITYDOCKDAY' ),
        ( 'City Docks Night',                      '_CITYDOCKNIGHT' ),
        ( 'City Marketplace ',                     '_CITYMARKET' ),
        ( 'City Night',                            '_CITYNIGHT' ),
        ( 'City Slum Day',                         '_CITYSLUMDAY' ),
        ( 'City Slum Night',                       '_CITYSLUMNIGHT' ),
        ( 'City Wealthy',                          '_CITYWEALTHY' ),
        ( 'Combat Aribeth',                        '_BATTLE_ARIBETH' ),
        ( 'Crypt 1',                               '_CRYPT1' ),
        ( 'Crypt 2',                               '_CRYPT2' ),
        ( 'Desert Combat',                         '_BATTLE_DESERT' ),
        ( 'Desert Day',                            '_DESERT_DAY' ),
        ( 'Desert Night',                          '_DESERT_NIGHT' ),
        ( 'Dragon Combat',                         '_BATTLE_DRAGON' ),
        ( 'Dungeon Combat 1',                      '_BATTLE_DUNGEON1' ),
        ( 'Dungeon Combat 2',                      '_BATTLE_DUNGEON2' ),
        ( 'Dungeon Combat 3',                      '_BATTLE_DUNGEON3' ),
        ( 'Evil Dungeon 1',                        '_EVILDUNGEON1' ),
        ( 'Evil Dungeon 2',                        '_EVILDUNGEON2' ),
        ( 'Evil Temple',                           '_TEMPLEEVIL' ),
        ( 'Fight! Fight!',                         '_BATTLE_WINTER' ),
        ( 'Final Boss Combat Source Stone',        '_BATTLE_ENDBOSS' ),
        ( 'Forest Combat 1',                       '_BATTLE_FOREST1' ),
        ( 'Forest Combat 2',                       '_BATTLE_FOREST2' ),
        ( 'Forest Day 1',                          '_FORESTDAY1' ),
        ( 'Forest Day 2',                          '_FORESTDAY2' ),
        ( 'Forest Night',                          '_FORESTNIGHT' ),
        ( 'Generic Castle Interior',               '_CASTLE' ),
        ( 'Generic Dungeon',                       '_DUNGEON1' ),
        ( 'Generic Store',                         '_STORE' ),
        ( 'Generic Wealthy House',                 '_RICHHOUSE' ),
        ( 'Good Temple',                           '_TEMPLEGOOD' ),
        ( 'Good Temple 2',                         '_TEMPLEGOOD2' ),
        ( 'Mines 1',                               '_MINES1' ),
        ( 'Mines 2',                               '_MINES2' ),
        ( 'NWN Chapter 1',                         '_THEME_CHAPTER1' ),
        ( 'NWN Chapter 2 ',                        '_THEME_CHAPTER2' ),
        ( 'NWN Chapter 3',                         '_THEME_CHAPTER3' ),
        ( 'NWN Chapter 4',                         '_THEME_CHAPTER4' ),
        ( 'NWN City Theme',                        '_THEME_NWN' ),
        ( 'PM - Infinite Dungeons',                '81' ),
        ( 'PM - Kingmaker Theme',                  '76' ),
        ( 'PM - Pirates Theme',                    '79' ),
        ( 'PM - Pirates Theme Variation',          '80' ),
        ( 'PM - ShadowGuard Theme',                '77' ),
        ( 'PM - Witch''s Wake Theme',              '78' ),
        ( 'PM - Wyvern Crown Armchair',            '90' ),
        ( 'PM - Wyvern Crown Battle',              '91' ),
        ( 'PM - Wyvern Crown Battle Chase',        '88' ),
        ( 'PM - Wyvern Crown Knighted',            '93' ),
        ( 'PM - Wyvern Crown Morfen',              '95' ),
        ( 'PM - Wyvern Crown Ogma',                '82' ),
        ( 'PM - Wyvern Crown Open Road',           '83' ),
        ( 'PM - Wyvern Crown Opening',             '94' ),
        ( 'PM - Wyvern Crown Rural',               '85' ),
        ( 'PM - Wyvern Crown Rural Guitar',        '86' ),
        ( 'PM - Wyvern Crown Smoke and Ash',       '84' ),
        ( 'PM - Wyvern Crown Solace',              '92' ),
        ( 'PM - Wyvern Crown Tears',               '87' ),
        ( 'PM - Wyvern Crown Theme',               '89' ),
        ( 'Rural Combat 1',                        '_BATTLE_RURAL1' ),
        ( 'Rural Day 1',                           '_RURALDAY1' ),
        ( 'Rural Day 2',                           '_RURALDAY2' ),
        ( 'Rural Night',                           '_RURALNIGHT' ),
        ( 'Sewer ',                                '_SEWER' ),
        ( 'Tavern 1',                              '_TAVERN1' ),
        ( 'Tavern 2',                              '_TAVERN2' ),
        ( 'Tavern 3',                              '_TAVERN3' ),
        ( 'Tavern 4',                              '_TAVERN4' ),
        ( 'Theme Aarin Gend',                      '_THEME_GEND' ),
        ( 'Theme Maugrim',                         '_THEME_MAUGRIM' ),
        ( 'Theme Morag',                           '_THEME_MORAG' ),
        ( 'Winter Day',                            '_WINTER_DAY' ),
        ( 'XP2 - Battle, Chapter 3',               '_HOTU_BATTLE_HELL' ),
        ( 'XP2 - Battle, Final',                   '_HOTU_BATTLE_BOSS2' ),
        ( 'XP2 - Battle, Large',                   '_HOTU_BATTLE_LARGE' ),
        ( 'XP2 - Battle, Matron',                  '_HOTU_BATTLE_BOSS1' ),
        ( 'XP2 - Battle, Medium',                  '_HOTU_BATTLE_MED' ),
        ( 'XP2 - Battle, Small',                   '_HOTU_BATTLE_SMALL' ),
        ( 'XP2 - Beholder Caves',                  '_HOTU_FIREPLANE' ),
        ( 'XP2 - Chapter 3',                       '_HOTU_HELLFROZEOVER' ),
        ( 'XP2 - Dracolich',                       '_HOTU_DRACOLICH' ),
        ( 'XP2 - Queen of the Shattered Mirror',   '_HOTU_QUEEN' ),
        ( 'XP2 - Rebel Camp',                      '_HOTU_REBELCAMP' ),
        ( 'XP2 - Theme',                           '_HOTU_THEME' ),
        ( 'XP2 - Undermountain',                   '_HOTU_UNDERMOUNTAIN' ),
        ( 'XP2 - Waterdeep',                       '_HOTU_WATERDEEP' ),
        // The trailing info row:
        ( nil, 'TRACK' )
      );

    // NWScript constants for non-beam visual effects that require a duration.
    VFX_DURATION: array[0..381] of StringPair = (
        ( 'No visual effect',                                   '_NONE' ),
        ( 'Duration: anti-light 10',                            '_DUR_ANTI_LIGHT_10' ),
        ( 'Duration: arrow, black 1',                           '654' ),
        ( 'Duration: arrow, black 2',                           '655' ),
        ( 'Duration: arrow, black 3',                           '656' ),
        ( 'Duration: arrow, black 4',                           '657' ),
        ( 'Duration: arrow, black 5',                           '658' ),
        ( 'Duration: arrow, blue 1',                            '659' ),
        ( 'Duration: arrow, blue 2',                            '660' ),
        ( 'Duration: arrow, blue 3',                            '661' ),
        ( 'Duration: arrow, blue 4',                            '662' ),
        ( 'Duration: arrow, blue 5',                            '663' ),
        ( 'Duration: arrow, red 1',                             '664' ),
        ( 'Duration: arrow, red 2',                             '665' ),
        ( 'Duration: arrow, red 3',                             '666' ),
        ( 'Duration: arrow, white 1',                           '646' ),
        ( 'Duration: arrow, white 2',                           '647' ),
        ( 'Duration: arrow, white 3',                           '648' ),
        ( 'Duration: arrow, white 4',                           '649' ),
        ( 'Duration: arrow, white 5',                           '650' ),
        ( 'Duration: arrow, white 6',                           '651' ),
        ( 'Duration: arrow, white 7',                           '652' ),
        ( 'Duration: arrow, white 8',                           '653' ),
        ( 'Duration: arrow, yellow 1',                          '667' ),
        ( 'Duration: arrow, yellow 2',                          '668' ),
        ( 'Duration: arrow, yellow 3',                          '669' ),
        ( 'Duration: arrow in back',                            '_DUR_ARROW_IN_BACK' ),
        ( 'Duration: arrow in chest, left',                     '_DUR_ARROW_IN_CHEST_LEFT' ),
        ( 'Duration: arrow in chest, right',                    '_DUR_ARROW_IN_CHEST_RIGHT' ),
        ( 'Duration: arrow in face',                            '_DUR_ARROW_IN_FACE' ),
        ( 'Duration: arrow in head',                            '_DUR_ARROW_IN_HEAD' ),
        ( 'Duration: arrow in sternum',                         '_DUR_ARROW_IN_STERNUM' ),
        ( 'Duration: arrow in temples',                         '_DUR_ARROW_IN_TEMPLES' ),
        ( 'Duration: aura blue',                                '_DUR_AURA_BLUE' ),
        ( 'Duration: aura blue, dark',                          '_DUR_AURA_BLUE_DARK' ),
        ( 'Duration: aura blue, light',                         '_DUR_AURA_BLUE_LIGHT' ),
        ( 'Duration: aura brown',                               '_DUR_AURA_BROWN' ),
        ( 'Duration: aura cold',                                '_DUR_AURA_COLD' ),
        ( 'Duration: aura cyan',                                '_DUR_AURA_CYAN' ),
        ( 'Duration: aura disease',                             '_DUR_AURA_DISEASE' ),
        ( 'Duration: aura dragon fear',                         '_DUR_AURA_DRAGON_FEAR' ),
        ( 'Duration: aura fear',                                '_IMP_AURA_FEAR' ),
        ( 'Duration: aura fire',                                '_DUR_AURA_FIRE' ),
        ( 'Duration: aura green',                               '_DUR_AURA_GREEN' ),
        ( 'Duration: aura green, dark',                         '_DUR_AURA_GREEN_DARK' ),
        ( 'Duration: aura green, light',                        '_DUR_AURA_GREEN_LIGHT' ),
        ( 'Duration: aura holy',                                '_IMP_AURA_HOLY' ),
        ( 'Duration: aura magenta',                             '_DUR_AURA_MAGENTA' ),
        ( 'Duration: aura negative energy',                     '_IMP_AURA_NEGATIVE_ENERGY' ),
        ( 'Duration: aura odd',                                 '_DUR_AURA_ODD' ),
        ( 'Duration: aura orange',                              '_DUR_AURA_ORANGE' ),
        ( 'Duration: aura poison',                              '_DUR_AURA_POISON' ),
        ( 'Duration: aura pulse blue/black',                    '_DUR_AURA_PULSE_BLUE_BLACK' ),
        ( 'Duration: aura pulse blue/green',                    '_DUR_AURA_PULSE_BLUE_GREEN' ),
        ( 'Duration: aura pulse blue/white',                    '_DUR_AURA_PULSE_BLUE_WHITE' ),
        ( 'Duration: aura pulse blue/yellow',                   '_DUR_AURA_PULSE_BLUE_YELLOW' ),
        ( 'Duration: aura pulse brown/black',                   '_DUR_AURA_PULSE_BROWN_BLACK' ),
        ( 'Duration: aura pulse brown/white',                   '_DUR_AURA_PULSE_BROWN_WHITE' ),
        ( 'Duration: aura pulse cyan/black',                    '_DUR_AURA_PULSE_CYAN_BLACK' ),
        ( 'Duration: aura pulse cyan/blue',                     '_DUR_AURA_PULSE_CYAN_BLUE' ),
        ( 'Duration: aura pulse cyan/green',                    '_DUR_AURA_PULSE_CYAN_GREEN' ),
        ( 'Duration: aura pulse cyan/red',                      '_DUR_AURA_PULSE_CYAN_RED' ),
        ( 'Duration: aura pulse cyan/white',                    '_DUR_AURA_PULSE_CYAN_WHITE' ),
        ( 'Duration: aura pulse cyan/yellow',                   '_DUR_AURA_PULSE_CYAN_YELLOW' ),
        ( 'Duration: aura pulse green/black',                   '_DUR_AURA_PULSE_GREEN_BLACK' ),
        ( 'Duration: aura pulse green/white',                   '_DUR_AURA_PULSE_GREEN_WHITE' ),
        ( 'Duration: aura pulse green/yellow',                  '_DUR_AURA_PULSE_GREEN_YELLOW' ),
        ( 'Duration: aura pulse grey/black',                    '_DUR_AURA_PULSE_GREY_BLACK' ),
        ( 'Duration: aura pulse grey/white',                    '_DUR_AURA_PULSE_GREY_WHITE' ),
        ( 'Duration: aura pulse magenta/black',                 '_DUR_AURA_PULSE_MAGENTA_BLACK' ),
        ( 'Duration: aura pulse magenta/blue',                  '_DUR_AURA_PULSE_MAGENTA_BLUE' ),
        ( 'Duration: aura pulse magenta/green',                 '_DUR_AURA_PULSE_MAGENTA_GREEN' ),
        ( 'Duration: aura pulse magenta/red',                   '_DUR_AURA_PULSE_MAGENTA_RED' ),
        ( 'Duration: aura pulse magenta/white',                 '_DUR_AURA_PULSE_MAGENTA_WHITE' ),
        ( 'Duration: aura pulse magenta/yellow',                '_DUR_AURA_PULSE_MAGENTA_YELLOW' ),
        ( 'Duration: aura pulse orange/black',                  '_DUR_AURA_PULSE_ORANGE_BLACK' ),
        ( 'Duration: aura pulse orange/white',                  '_DUR_AURA_PULSE_ORANGE_WHITE' ),
        ( 'Duration: aura pulse purple/black',                  '_DUR_AURA_PULSE_PURPLE_BLACK' ),
        ( 'Duration: aura pulse purple/white',                  '_DUR_AURA_PULSE_PURPLE_WHITE' ),
        ( 'Duration: aura pulse red/black',                     '_DUR_AURA_PULSE_RED_BLACK' ),
        ( 'Duration: aura pulse red/blue',                      '_DUR_AURA_PULSE_RED_BLUE' ),
        ( 'Duration: aura pulse red/green',                     '_DUR_AURA_PULSE_RED_GREEN' ),
        ( 'Duration: aura pulse red/orange',                    '_DUR_AURA_PULSE_RED_ORANGE' ),
        ( 'Duration: aura pulse red/white',                     '_DUR_AURA_PULSE_RED_WHITE' ),
        ( 'Duration: aura pulse red/yellow',                    '_DUR_AURA_PULSE_RED_YELLOW' ),
        ( 'Duration: aura pulse yellow/black',                  '_DUR_AURA_PULSE_YELLOW_BLACK' ),
        ( 'Duration: aura pulse yellow/orange',                 '_DUR_AURA_PULSE_YELLOW_ORANGE' ),
        ( 'Duration: aura pulse yellow/white',                  '_DUR_AURA_PULSE_YELLOW_WHITE' ),
        ( 'Duration: aura purple',                              '_DUR_AURA_PURPLE' ),
        ( 'Duration: aura red',                                 '_DUR_AURA_RED' ),
        ( 'Duration: aura red, dark',                           '_DUR_AURA_RED_DARK' ),
        ( 'Duration: aura red, light',                          '_DUR_AURA_RED_LIGHT' ),
        ( 'Duration: aura silence',                             '_DUR_AURA_SILENCE' ),
        ( 'Duration: aura unearthly',                           '_IMP_AURA_UNEARTHLY' ),
        ( 'Duration: aura white',                               '_DUR_AURA_WHITE' ),
        ( 'Duration: aura yellow',                              '_DUR_AURA_YELLOW' ),
        ( 'Duration: aura yellow, dark',                        '_DUR_AURA_YELLOW_DARK' ),
        ( 'Duration: aura yellow, light',                       '_DUR_AURA_YELLOW_LIGHT' ),
        ( 'Duration: bard song',                                '_DUR_BARD_SONG' ),
        ( 'Duration: bard song (silent)',                       '468' ),
        ( 'Duration: bard song, evil',                          '507' ),
        ( 'Duration: Bigby''s clenched fist',                   '_DUR_BIGBYS_CLENCHED_FIST' ),
        ( 'Duration: Bigby''s crushing hand',                   '_DUR_BIGBYS_CRUSHING_HAND' ),
        ( 'Duration: Bigby''s grasping hand',                   '_DUR_BIGBYS_GRASPING_HAND' ),
        ( 'Duration: Bigby''s interposing hand',                '_DUR_BIGBYS_INTERPOSING_HAND' ),
        ( 'Duration: blackout',                                 '_DUR_BLACKOUT' ),
        ( 'Duration: blind',                                    '_DUR_BLIND' ),
        ( 'Duration: blindvision',                              '_DUR_BLINDVISION' ),
        ( 'Duration: blur',                                     '_DUR_BLUR' ),
        ( 'Duration: bubbles',                                  '_DUR_BUBBLES' ),
        ( 'Duration: caltrops',                                 '_DUR_CALTROPS' ),
        ( 'Duration: cessate negative',                         '_DUR_CESSATE_NEGATIVE' ),
        ( 'Duration: cessate neutral',                          '_DUR_CESSATE_NEUTRAL' ),
        ( 'Duration: cessate positive',                         '_DUR_CESSATE_POSITIVE' ),
        ( 'Duration: cutscene invisibility',                    '_DUR_CUTSCENE_INVISIBILITY' ),
        ( 'Duration: darkness',                                 '_DUR_DARKNESS' ),
        ( 'Duration: darkvision',                               '_DUR_DARKVISION' ),
        ( 'Duration: death armor',                              '_DUR_DEATH_ARMOR' ),
        ( 'Duration: DLA shield map',                           '619' ),
        ( 'Duration: elemental shield',                         '_DUR_ELEMENTAL_SHIELD' ),
        ( 'Duration: entangle',                                 '_DUR_ENTANGLE' ),
        ( 'Duration: ethereal visage',                          '_DUR_ETHEREAL_VISAGE' ),
        ( 'Duration: flag, blue',                               '_DUR_FLAG_BLUE' ),
        ( 'Duration: flag, gold',                               '_DUR_FLAG_GOLD_FIXED' ),
        ( 'Duration: flag, purple',                             '_DUR_FLAG_PURPLE_FIXED' ),
        ( 'Duration: flag, red',                                '_DUR_FLAG_RED' ),
        ( 'Duration: flies',                                    '_DUR_FLIES' ),
        ( 'Duration: freedom of movement',                      '_DUR_FREEDOM_OF_MOVEMENT' ),
        ( 'Duration: freeze animation',                         '_DUR_FREEZE_ANIMATION' ),
        ( 'Duration: ghost smoke',                              '_DUR_GHOST_SMOKE' ),
        ( 'Duration: ghost smoke 2',                            '_DUR_GHOST_SMOKE_2' ),
        ( 'Duration: ghost transparent',                        '_DUR_GHOST_TRANSPARENT' ),
        ( 'Duration: ghostly pulse',                            '_DUR_GHOSTLY_PULSE' ),
        ( 'Duration: ghostly visage',                           '_DUR_GHOSTLY_VISAGE' ),
        ( 'Duration: ghostly visage (no sound)',                '_DUR_GHOSTLY_VISAGE_NO_SOUND' ),
        ( 'Duration: globe, minor',                             '_DUR_GLOBE_MINOR' ),
        ( 'Duration: globe of invulnerability',                 '_DUR_GLOBE_INVULNERABILITY' ),
        ( 'Duration: glow blue',                                '_DUR_GLOW_BLUE' ),
        ( 'Duration: glow brown',                               '_DUR_GLOW_BROWN' ),
        ( 'Duration: glow green',                               '_DUR_GLOW_GREEN' ),
        ( 'Duration: glow grey',                                '_DUR_GLOW_GREY' ),
        ( 'Duration: glow light blue',                          '_DUR_GLOW_LIGHT_BLUE' ),
        ( 'Duration: glow light brown',                         '_DUR_GLOW_LIGHT_BROWN' ),
        ( 'Duration: glow light green',                         '_DUR_GLOW_LIGHT_GREEN' ),
        ( 'Duration: glow light orange',                        '_DUR_GLOW_LIGHT_ORANGE' ),
        ( 'Duration: glow light purple',                        '_DUR_GLOW_LIGHT_PURPLE' ),
        ( 'Duration: glow light red',                           '_DUR_GLOW_LIGHT_RED' ),
        ( 'Duration: glow light yellow',                        '_DUR_GLOW_LIGHT_YELLOW' ),
        ( 'Duration: glow orange',                              '_DUR_GLOW_ORANGE' ),
        ( 'Duration: glow purple',                              '_DUR_GLOW_PURPLE' ),
        ( 'Duration: glow red',                                 '_DUR_GLOW_RED' ),
        ( 'Duration: glow white',                               '_DUR_GLOW_WHITE' ),
        ( 'Duration: glow yellow',                              '_DUR_GLOW_YELLOW' ),
        ( 'Duration: glyph of warding',                         '_DUR_GLYPH_OF_WARDING' ),
        ( 'Duration: iceskin',                                  '_DUR_ICESKIN' ),
        ( 'Duration: inferno',                                  '_DUR_INFERNO' ),
        ( 'Duration: inferno (no sound)',                       '_DUR_INFERNO_NO_SOUND' ),
        ( 'Duration: inferno chest',                            '_DUR_INFERNO_CHEST' ),
        ( 'Duration: invisibility',                             '_DUR_INVISIBILITY' ),
        ( 'Duration: iounstone',                                '_DUR_IOUNSTONE' ),
        ( 'Duration: iounstone blue',                           '_DUR_IOUNSTONE_BLUE' ),
        ( 'Duration: iounstone green',                          '_DUR_IOUNSTONE_GREEN' ),
        ( 'Duration: iounstone red',                            '_DUR_IOUNSTONE_RED' ),
        ( 'Duration: iounstone yellow',                         '_DUR_IOUNSTONE_YELLOW' ),
        ( 'Duration: leaves',                                   '132' ),
        ( 'Duration: light',                                    '_DUR_LIGHT' ),
        ( 'Duration: light, blue 5',                            '_DUR_LIGHT_BLUE_5' ),
        ( 'Duration: light, blue 10',                           '_DUR_LIGHT_BLUE_10' ),
        ( 'Duration: light, blue 15',                           '_DUR_LIGHT_BLUE_15' ),
        ( 'Duration: light, blue 20',                           '_DUR_LIGHT_BLUE_20' ),
        ( 'Duration: light, grey 5',                            '_DUR_LIGHT_GREY_5' ),
        ( 'Duration: light, grey 10',                           '_DUR_LIGHT_GREY_10' ),
        ( 'Duration: light, grey 15',                           '_DUR_LIGHT_GREY_15' ),
        ( 'Duration: light, grey 20',                           '_DUR_LIGHT_GREY_20' ),
        ( 'Duration: light, orange 5',                          '_DUR_LIGHT_ORANGE_5' ),
        ( 'Duration: light, orange 10',                         '_DUR_LIGHT_ORANGE_10' ),
        ( 'Duration: light, orange 15',                         '_DUR_LIGHT_ORANGE_15' ),
        ( 'Duration: light, orange 20',                         '_DUR_LIGHT_ORANGE_20' ),
        ( 'Duration: light, purple 5',                          '_DUR_LIGHT_PURPLE_5' ),
        ( 'Duration: light, purple 10',                         '_DUR_LIGHT_PURPLE_10' ),
        ( 'Duration: light, purple 15',                         '_DUR_LIGHT_PURPLE_15' ),
        ( 'Duration: light, purple 20',                         '_DUR_LIGHT_PURPLE_20' ),
        ( 'Duration: light, red 5',                             '_DUR_LIGHT_RED_5' ),
        ( 'Duration: light, red 10',                            '_DUR_LIGHT_RED_10' ),
        ( 'Duration: light, red 15',                            '_DUR_LIGHT_RED_15' ),
        ( 'Duration: light, red 20',                            '_DUR_LIGHT_RED_20' ),
        ( 'Duration: light, white 5',                           '_DUR_LIGHT_WHITE_5' ),
        ( 'Duration: light, white 10',                          '_DUR_LIGHT_WHITE_10' ),
        ( 'Duration: light, white 15',                          '_DUR_LIGHT_WHITE_15' ),
        ( 'Duration: light, white 20',                          '_DUR_LIGHT_WHITE_20' ),
        ( 'Duration: light, yellow 5',                          '_DUR_LIGHT_YELLOW_5' ),
        ( 'Duration: light, yellow 10',                         '_DUR_LIGHT_YELLOW_10' ),
        ( 'Duration: light, yellow 15',                         '_DUR_LIGHT_YELLOW_15' ),
        ( 'Duration: light, yellow 20',                         '_DUR_LIGHT_YELLOW_20' ),
        ( 'Duration: low-light vision',                         '_DUR_LOWLIGHTVISION' ),
        ( 'Duration: magic resistance',                         '_DUR_MAGIC_RESISTANCE' ),
        ( 'Duration: magical sight',                            '_DUR_MAGICAL_SIGHT' ),
        ( 'Duration: mind-affecting disabled',                  '_DUR_MIND_AFFECTING_DISABLED' ),
        ( 'Duration: mind-affecting dominated',                 '_DUR_MIND_AFFECTING_DOMINATED' ),
        ( 'Duration: mind-affecting fear',                      '_DUR_MIND_AFFECTING_FEAR' ),
        ( 'Duration: mind-affecting negative',                  '_DUR_MIND_AFFECTING_NEGATIVE' ),
        ( 'Duration: mind-affecting positive',                  '_DUR_MIND_AFFECTING_POSITIVE' ),
        ( 'Duration: paralyze/hold',                            '_DUR_PARALYZE_HOLD' ),
        ( 'Duration: paralyzed',                                '_DUR_PARALYZED' ),
        ( 'Duration: PDK fear',                                 '_DUR_PDK_FEAR' ),
        ( 'Duration: petrify',                                  '_DUR_PETRIFY' ),
        ( 'Duration: pixiedust',                                '_DUR_PIXIEDUST' ),
        ( 'Duration: prot acid shield',                         '448' ),
        ( 'Duration: prot barkskin',                            '_DUR_PROT_BARKSKIN' ),
        ( 'Duration: prot epic armor',                          '_DUR_PROT_EPIC_ARMOR' ),
        ( 'Duration: prot epic armor 2',                        '_DUR_PROT_EPIC_ARMOR_2' ),
        ( 'Duration: prot greater stoneskin',                   '_DUR_PROT_GREATER_STONESKIN' ),
        ( 'Duration: prot premonition',                         '_DUR_PROT_PREMONITION' ),
        ( 'Duration: prot shadow armor',                        '_DUR_PROT_SHADOW_ARMOR' ),
        ( 'Duration: prot stoneskin',                           '_DUR_PROT_STONESKIN' ),
        ( 'Duration: protection from elements',                 '_DUR_PROTECTION_ELEMENTS' ),
        ( 'Duration: protection from evil, major',              '_DUR_PROTECTION_EVIL_MAJOR' ),
        ( 'Duration: protection from evil, minor',              '_DUR_PROTECTION_EVIL_MINOR' ),
        ( 'Duration: protection from good, major',              '_DUR_PROTECTION_GOOD_MAJOR' ),
        ( 'Duration: protection from good, minor',              '_DUR_PROTECTION_GOOD_MINOR' ),
        ( 'Duration: quill in chest',                           '_DUR_QUILL_IN_CHEST' ),
        ( 'Duration: sanctuary',                                '_DUR_SANCTUARY' ),
        ( 'Duration: smoke',                                    '_DUR_SMOKE' ),
        ( 'Duration: spellturning',                             '_DUR_SPELLTURNING' ),
        ( 'Duration: stonehold',                                '_DUR_STONEHOLD' ),
        ( 'Duration: tentacle',                                 '_DUR_TENTACLE' ),
        ( 'Duration: ultravision',                              '_DUR_ULTRAVISION' ),
        ( 'Duration: unsupported animal cage',                  '509' ),
        ( 'Duration: unsupported cage',                         '508' ),
        ( 'Duration: unsupported flame, large',                 '510' ),
        ( 'Duration: web',                                      '_DUR_WEB' ),
        ( 'Duration: web mass',                                 '_DUR_WEB_MASS' ),
        ( 'Eyes: blue dwarf female',                            '327' ),
        ( 'Eyes: blue dwarf male',                              '326' ),
        ( 'Eyes: blue elf female',                              '329' ),
        ( 'Eyes: blue elf male',                                '328' ),
        ( 'Eyes: blue gnome female',                            '331' ),
        ( 'Eyes: blue gnome male',                              '330' ),
        ( 'Eyes: blue half-orc female',                         '335' ),
        ( 'Eyes: blue half-orc male',                           '334' ),
        ( 'Eyes: blue halfling female',                         '333' ),
        ( 'Eyes: blue halfling male',                           '332' ),
        ( 'Eyes: blue human/half-elf female',                   '325' ),
        ( 'Eyes: blue human/half-elf male',                     '324' ),
        ( 'Eyes: blue troglodyte',                              '336' ),
        ( 'Eyes: cyan dwarf female',                            '_EYES_CYN_DWARF_FEMALE' ),
        ( 'Eyes: cyan dwarf male',                              '_EYES_CYN_DWARF_MALE' ),
        ( 'Eyes: cyan elf female',                              '_EYES_CYN_ELF_FEMALE' ),
        ( 'Eyes: cyan elf male',                                '_EYES_CYN_ELF_MALE' ),
        ( 'Eyes: cyan gnome female',                            '_EYES_CYN_GNOME_FEMALE' ),
        ( 'Eyes: cyan gnome male',                              '_EYES_CYN_GNOME_MALE' ),
        ( 'Eyes: cyan half-orc female',                         '_EYES_CYN_HALFORC_FEMALE' ),
        ( 'Eyes: cyan half-orc male',                           '_EYES_CYN_HALFORC_MALE' ),
        ( 'Eyes: cyan halfling female',                         '_EYES_CYN_HALFLING_FEMALE' ),
        ( 'Eyes: cyan halfling male',                           '_EYES_CYN_HALFLING_MALE' ),
        ( 'Eyes: cyan human/half-elf female',                   '_EYES_CYN_HUMAN_FEMALE' ),
        ( 'Eyes: cyan human/half-elf male',                     '_EYES_CYN_HUMAN_MALE' ),
        ( 'Eyes: cyan troglodyte',                              '_EYES_CYN_TROGLODYTE' ),
        ( 'Eyes: green dwarf female',                           '_EYES_GREEN_DWARF_FEMALE' ),
        ( 'Eyes: green dwarf male',                             '_EYES_GREEN_DWARF_MALE' ),
        ( 'Eyes: green elf female',                             '_EYES_GREEN_ELF_FEMALE' ),
        ( 'Eyes: green elf male',                               '_EYES_GREEN_ELF_MALE' ),
        ( 'Eyes: green gnome female',                           '_EYES_GREEN_GNOME_FEMALE' ),
        ( 'Eyes: green gnome male',                             '_EYES_GREEN_GNOME_MALE' ),
        ( 'Eyes: green half-orc female',                        '_EYES_GREEN_HALFORC_FEMALE' ),
        ( 'Eyes: green half-orc male',                          '_EYES_GREEN_HALFORC_MALE' ),
        ( 'Eyes: green halfling female',                        '_EYES_GREEN_HALFLING_FEMALE' ),
        ( 'Eyes: green halfling male',                          '_EYES_GREEN_HALFLING_MALE' ),
        ( 'Eyes: green human/half-elf female',                  '_EYES_GREEN_HUMAN_FEMALE' ),
        ( 'Eyes: green human/half-elf male',                    '_EYES_GREEN_HUMAN_MALE' ),
        ( 'Eyes: green troglodyte',                             '_EYES_GREEN_TROGLODYTE' ),
        ( 'Eyes: orange dwarf female',                          '_EYES_ORG_DWARF_FEMALE' ),
        ( 'Eyes: orange dwarf male',                            '_EYES_ORG_DWARF_MALE' ),
        ( 'Eyes: orange elf female',                            '_EYES_ORG_ELF_FEMALE' ),
        ( 'Eyes: orange elf male',                              '_EYES_ORG_ELF_MALE' ),
        ( 'Eyes: orange gnome female',                          '_EYES_ORG_GNOME_FEMALE' ),
        ( 'Eyes: orange gnome male',                            '_EYES_ORG_GNOME_MALE' ),
        ( 'Eyes: orange half-orc female',                       '_EYES_ORG_HALFORC_FEMALE' ),
        ( 'Eyes: orange half-orc male',                         '_EYES_ORG_HALFORC_MALE' ),
        ( 'Eyes: orange halfling female',                       '_EYES_ORG_HALFLING_FEMALE' ),
        ( 'Eyes: orange halfling male',                         '_EYES_ORG_HALFLING_MALE' ),
        ( 'Eyes: orange human/half-elf female',                 '_EYES_ORG_HUMAN_FEMALE' ),
        ( 'Eyes: orange human/half-elf male',                   '_EYES_ORG_HUMAN_MALE' ),
        ( 'Eyes: orange troglodyte',                            '_EYES_ORG_TROGLODYTE' ),
        ( 'Eyes: purple dwarf female',                          '_EYES_PUR_DWARF_FEMALE' ),
        ( 'Eyes: purple dwarf male',                            '_EYES_PUR_DWARF_MALE' ),
        ( 'Eyes: purple elf female',                            '_EYES_PUR_ELF_FEMALE' ),
        ( 'Eyes: purple elf male',                              '_EYES_PUR_ELF_MALE' ),
        ( 'Eyes: purple gnome female',                          '_EYES_PUR_GNOME_FEMALE' ),
        ( 'Eyes: purple gnome male',                            '_EYES_PUR_GNOME_MALE' ),
        ( 'Eyes: purple half-orc female',                       '_EYES_PUR_HALFORC_FEMALE' ),
        ( 'Eyes: purple half-orc male',                         '_EYES_PUR_HALFORC_MALE' ),
        ( 'Eyes: purple halfling female',                       '_EYES_PUR_HALFLING_FEMALE' ),
        ( 'Eyes: purple halfling male',                         '_EYES_PUR_HALFLING_MALE' ),
        ( 'Eyes: purple human/half-elf female',                 '_EYES_PUR_HUMAN_FEMALE' ),
        ( 'Eyes: purple human/half-elf male',                   '_EYES_PUR_HUMAN_MALE' ),
        ( 'Eyes: purple troglodyte',                            '_EYES_PUR_TROGLODYTE' ),
        ( 'Eyes: red flame dwarf female',                       '_EYES_RED_FLAME_DWARF_FEMALE' ),
        ( 'Eyes: red flame dwarf male',                         '_EYES_RED_FLAME_DWARF_MALE' ),
        ( 'Eyes: red flame elf female',                         '_EYES_RED_FLAME_ELF_FEMALE' ),
        ( 'Eyes: red flame elf male',                           '_EYES_RED_FLAME_ELF_MALE' ),
        ( 'Eyes: red flame gnome female',                       '_EYES_RED_FLAME_GNOME_FEMALE' ),
        ( 'Eyes: red flame gnome male',                         '_EYES_RED_FLAME_GNOME_MALE' ),
        ( 'Eyes: red flame half-orc female',                    '_EYES_RED_FLAME_HALFORC_FEMALE' ),
        ( 'Eyes: red flame half-orc male',                      '_EYES_RED_FLAME_HALFORC_MALE' ),
        ( 'Eyes: red flame halfling female',                    '_EYES_RED_FLAME_HALFLING_FEMALE' ),
        ( 'Eyes: red flame halfling male',                      '_EYES_RED_FLAME_HALFLING_MALE' ),
        ( 'Eyes: red flame human/half-elf female',              '_EYES_RED_FLAME_HUMAN_FEMALE' ),
        ( 'Eyes: red flame human/half-elf male',                '_EYES_RED_FLAME_HUMAN_MALE' ),
        ( 'Eyes: red flame troglodyte',                         '_EYES_RED_FLAME_TROGLODYTE' ),
        ( 'Eyes: white dwarf female',                           '_EYES_WHT_DWARF_FEMALE' ),
        ( 'Eyes: white dwarf male',                             '_EYES_WHT_DWARF_MALE' ),
        ( 'Eyes: white elf female',                             '_EYES_WHT_ELF_FEMALE' ),
        ( 'Eyes: white elf male',                               '_EYES_WHT_ELF_MALE' ),
        ( 'Eyes: white gnome female',                           '_EYES_WHT_GNOME_FEMALE' ),
        ( 'Eyes: white gnome male',                             '_EYES_WHT_GNOME_MALE' ),
        ( 'Eyes: white half-orc female',                        '_EYES_WHT_HALFORC_FEMALE' ),
        ( 'Eyes: white half-orc male',                          '_EYES_WHT_HALFORC_MALE' ),
        ( 'Eyes: white halfling female',                        '_EYES_WHT_HALFLING_FEMALE' ),
        ( 'Eyes: white halfling male',                          '_EYES_WHT_HALFLING_MALE' ),
        ( 'Eyes: white human/half-elf female',                  '_EYES_WHT_HUMAN_FEMALE' ),
        ( 'Eyes: white human/half-elf male',                    '_EYES_WHT_HUMAN_MALE' ),
        ( 'Eyes: white troglodyte',                             '_EYES_WHT_TROGLODYTE' ),
        ( 'Eyes: yellow dwarf female',                          '_EYES_YEL_DWARF_FEMALE' ),
        ( 'Eyes: yellow dwarf male',                            '_EYES_YEL_DWARF_MALE' ),
        ( 'Eyes: yellow elf female',                            '_EYES_YEL_ELF_FEMALE' ),
        ( 'Eyes: yellow elf male',                              '_EYES_YEL_ELF_MALE' ),
        ( 'Eyes: yellow gnome female',                          '_EYES_YEL_GNOME_FEMALE' ),
        ( 'Eyes: yellow gnome male',                            '_EYES_YEL_GNOME_MALE' ),
        ( 'Eyes: yellow half-orc female',                       '_EYES_YEL_HALFORC_FEMALE' ),
        ( 'Eyes: yellow half-orc male',                         '_EYES_YEL_HALFORC_MALE' ),
        ( 'Eyes: yellow halfling female',                       '_EYES_YEL_HALFLING_FEMALE' ),
        ( 'Eyes: yellow halfling male',                         '_EYES_YEL_HALFLING_MALE' ),
        ( 'Eyes: yellow human/half-elf female',                 '_EYES_YEL_HUMAN_FEMALE' ),
        ( 'Eyes: yellow human/half-elf male',                   '_EYES_YEL_HUMAN_MALE' ),
        ( 'Eyes: yellow troglodyte',                            '_EYES_YEL_TROGLODYTE' ),
        ( 'Scene: black tile',                                  '506' ),
        ( 'Scene: building',                                    '449' ),
        ( 'Scene: burned rubble 1',                             '450' ),
        ( 'Scene: burned rubble 2',                             '454' ),
        ( 'Scene: burning half house',                          '451' ),
        ( 'Scene: evil castle wall',                            '443' ),
        ( 'Scene: formian 1',                                   '404' ),
        ( 'Scene: formian 2',                                   '405' ),
        ( 'Scene: gazebo',                                      '457' ),
        ( 'Scene: grass',                                       '402' ),
        ( 'Scene: ice',                                         '426' ),
        ( 'Scene: ice, clear',                                  '442' ),
        ( 'Scene: lava 1',                                      '349' ),
        ( 'Scene: lava 2',                                      '350' ),
        ( 'Scene: market 1',                                    '455' ),
        ( 'Scene: market 2',                                    '456' ),
        ( 'Scene: MF ant hill',                                 '441' ),
        ( 'Scene: MF bricks w/ hanging light',                  '436' ),
        ( 'Scene: MF cave interior',                            '435' ),
        ( 'Scene: MF caravan wagon',                            '439' ),
        ( 'Scene: MF dirt pile',                                '434' ),
        ( 'Scene: MF graveyard',                                '440' ),
        ( 'Scene: MF groundcover 1',                            '429' ),
        ( 'Scene: MF groundcover 2',                            '430' ),
        ( 'Scene: MF house',                                    '438' ),
        ( 'Scene: MF market stall',                             '432' ),
        ( 'Scene: MF pillar',                                   '427' ),
        ( 'Scene: MF ruins',                                    '433' ),
        ( 'Scene: MF water (below ground level)',               '437' ),
        ( 'Scene: MF waterfall',                                '428' ),
        ( 'Scene: MF waterfall 2',                              '431' ),
        ( 'Scene: pit trap',                                    '406' ),
        ( 'Scene: prison floor',                                '511' ),
        ( 'Scene: ruined arch',                                 '452' ),
        ( 'Scene: solid arch',                                  '453' ),
        ( 'Scene: temple',                                      '348' ),
        ( 'Scene: tilt rail',                                   '642' ),
        ( 'Scene: tilt rail, small',                            '643' ),
        ( 'Scene: tilt rail end',                               '640' ),
        ( 'Scene: tilt rail end, small',                        '641' ),
        ( 'Scene: tower',                                       '347' ),
        ( 'Scene: wagon',                                       '458' ),
        ( 'Scene: water',                                       '401' ),
        ( 'Scene: weird',                                       '323' ),
        ( 'Scene: well',                                        '358' ),
        // The trailing info row:
        ( nil, 'VFX' )
      );

    // NWScript constants for instantaneously-appled, non-projectile visual effects.
    VFX_IMPACT: array[0..229] of StringPair = (
        ( 'No visual effect',                                   '_NONE' ),
        ( 'Common: blood crt green',                            '_COM_BLOOD_CRT_GREEN' ),
        ( 'Common: blood crt green head',                       '492' ),
        ( 'Common: blood crt red',                              '_COM_BLOOD_CRT_RED' ),
        ( 'Common: blood crt red head',                         '491' ),
        ( 'Common: blood crt wimp',                             '_COM_BLOOD_CRT_WIMP' ),
        ( 'Common: blood crt wimp green',                       '301' ),
        ( 'Common: blood crt wimp yellow',                      '298' ),
        ( 'Common: blood crt yellow',                           '_COM_BLOOD_CRT_YELLOW' ),
        ( 'Common: blood crt yellow head',                      '493' ),
        ( 'Common: blood lrg green',                            '_COM_BLOOD_LRG_GREEN' ),
        ( 'Common: blood lrg red',                              '_COM_BLOOD_LRG_RED' ),
        ( 'Common: blood lrg wimp',                             '_COM_BLOOD_LRG_WIMP' ),
        ( 'Common: blood lrg wimp green',                       '300' ),
        ( 'Common: blood lrg wimp yellow',                      '297' ),
        ( 'Common: blood lrg yellow',                           '_COM_BLOOD_LRG_YELLOW' ),
        ( 'Common: blood reg green',                            '_COM_BLOOD_REG_GREEN' ),
        ( 'Common: blood reg red',                              '_COM_BLOOD_REG_RED' ),
        ( 'Common: blood reg wimp',                             '_COM_BLOOD_REG_WIMP' ),
        ( 'Common: blood reg wimp green',                       '299' ),
        ( 'Common: blood reg wimp yellow',                      '296' ),
        ( 'Common: blood reg yellow',                           '_COM_BLOOD_REG_YELLOW' ),
        ( 'Common: blood spark large',                          '_COM_BLOOD_SPARK_LARGE' ),
        ( 'Common: blood spark medium',                         '_COM_BLOOD_SPARK_MEDIUM' ),
        ( 'Common: blood spark small',                          '_COM_BLOOD_SPARK_SMALL' ),
        ( 'Common: chunk bone medium',                          '_COM_CHUNK_BONE_MEDIUM' ),
        ( 'Common: chunk green medium',                         '_COM_CHUNK_GREEN_MEDIUM' ),
        ( 'Common: chunk green small',                          '_COM_CHUNK_GREEN_SMALL' ),
        ( 'Common: chunk red ballista',                         '_COM_CHUNK_RED_BALLISTA' ),
        ( 'Common: chunk red large',                            '_COM_CHUNK_RED_LARGE' ),
        ( 'Common: chunk red medium',                           '_COM_CHUNK_RED_MEDIUM' ),
        ( 'Common: chunk red small',                            '_COM_CHUNK_RED_SMALL' ),
        ( 'Common: chunk stone medium',                         '_COM_CHUNK_STONE_MEDIUM' ),
        ( 'Common: chunk stone small',                          '_COM_CHUNK_STONE_SMALL' ),
        ( 'Common: chunk yellow medium',                        '_COM_CHUNK_YELLOW_MEDIUM' ),
        ( 'Common: chunk yellow small',                         '_COM_CHUNK_YELLOW_SMALL' ),
        ( 'Common: hit acid',                                   '_COM_HIT_ACID' ),
        ( 'Common: hit divine',                                 '_COM_HIT_DIVINE' ),
        ( 'Common: hit electrical',                             '_COM_HIT_ELECTRICAL' ),
        ( 'Common: hit fire',                                   '_COM_HIT_FIRE' ),
        ( 'Common: hit frost',                                  '_COM_HIT_FROST' ),
        ( 'Common: hit negative',                               '_COM_HIT_NEGATIVE' ),
        ( 'Common: hit sonic',                                  '_COM_HIT_SONIC' ),
        ( 'Common: sparks parry',                               '_COM_SPARKS_PARRY' ),
        ( 'Common: special blue/red',                           '_COM_SPECIAL_BLUE_RED' ),
        ( 'Common: special pink/orange',                        '_COM_SPECIAL_PINK_ORANGE' ),
        ( 'Common: special red/orange',                         '_COM_SPECIAL_RED_ORANGE' ),
        ( 'Common: special red/white',                          '_COM_SPECIAL_RED_WHITE' ),
        ( 'Common: special white/blue',                         '_COM_SPECIAL_WHITE_BLUE' ),
        ( 'Common: special white/orange',                       '_COM_SPECIAL_WHITE_ORANGE' ),
        ( 'Common: unload model',                               '_COM_UNLOAD_MODEL' ),
        ( 'Conjure: fire',                                      '467' ),
        ( 'Conjure: mind',                                      '466' ),
        ( 'Fire-and-forget: blind/deaf',                        '_FNF_BLINDDEAF' ),
        ( 'Fire-and-forget: deck',                              '_FNF_DECK' ),
        ( 'Fire-and-forget: demon hand',                        '_FNF_DEMON_HAND' ),
        ( 'Fire-and-forget: dispel',                            '_FNF_DISPEL' ),
        ( 'Fire-and-forget: dispel, disjunction',               '_FNF_DISPEL_DISJUNCTION' ),
        ( 'Fire-and-forget: dispel, greater',                   '_FNF_DISPEL_GREATER' ),
        ( 'Fire-and-forget: dragon breath, ground',             '494' ),
        ( 'Fire-and-forget: electric explosion',                '_FNF_ELECTRIC_EXPLOSION' ),
        ( 'Fire-and-forget: fireball',                          '_FNF_FIREBALL' ),
        ( 'Fire-and-forget: firestorm',                         '_FNF_FIRESTORM' ),
        ( 'Fire-and-forget: gas explosion acid',                '_FNF_GAS_EXPLOSION_ACID' ),
        ( 'Fire-and-forget: gas explosion evil',                '_FNF_GAS_EXPLOSION_EVIL' ),
        ( 'Fire-and-forget: gas explosion fire',                '_FNF_GAS_EXPLOSION_FIRE' ),
        ( 'Fire-and-forget: gas explosion grease',              '_FNF_GAS_EXPLOSION_GREASE' ),
        ( 'Fire-and-forget: gas explosion mind',                '_FNF_GAS_EXPLOSION_MIND' ),
        ( 'Fire-and-forget: gas explosion nature',              '_FNF_GAS_EXPLOSION_NATURE' ),
        ( 'Fire-and-forget: greater ruin',                      '_FNF_GREATER_RUIN' ),
        ( 'Fire-and-forget: hellball',                          '464' ),
        ( 'Fire-and-forget: highlight flash white',             '294' ),
        ( 'Fire-and-forget: horrid wilting',                    '_FNF_HORRID_WILTING' ),
        ( 'Fire-and-forget: howl mind',                         '_FNF_HOWL_MIND' ),
        ( 'Fire-and-forget: howl odd',                          '_FNF_HOWL_ODD' ),
        ( 'Fire-and-forget: howl war cry',                      '_FNF_HOWL_WAR_CRY' ),
        ( 'Fire-and-forget: howl war cry, female',              '_FNF_HOWL_WAR_CRY_FEMALE' ),
        ( 'Fire-and-forget: icestorm',                          '_FNF_ICESTORM' ),
        ( 'Fire-and-forget: implosion',                         '_FNF_IMPLOSION' ),
        ( 'Fire-and-forget: LOS evil 10',                       '_FNF_LOS_EVIL_10' ),
        ( 'Fire-and-forget: LOS evil 20',                       '_FNF_LOS_EVIL_20' ),
        ( 'Fire-and-forget: LOS evil 30',                       '_FNF_LOS_EVIL_30' ),
        ( 'Fire-and-forget: LOS holy 10',                       '_FNF_LOS_HOLY_10' ),
        ( 'Fire-and-forget: LOS holy 20',                       '_FNF_LOS_HOLY_20' ),
        ( 'Fire-and-forget: LOS holy 30',                       '_FNF_LOS_HOLY_30' ),
        ( 'Fire-and-forget: LOS normal 10',                     '_FNF_LOS_NORMAL_10' ),
        ( 'Fire-and-forget: LOS normal 20',                     '_FNF_LOS_NORMAL_20' ),
        ( 'Fire-and-forget: LOS normal 30',                     '_FNF_LOS_NORMAL_30' ),
        ( 'Fire-and-forget: meteor swarm',                      '_FNF_METEOR_SWARM' ),
        ( 'Fire-and-forget: mystical explosion',                '_FNF_MYSTICAL_EXPLOSION' ),
        ( 'Fire-and-forget: nature''s balance',                 '_FNF_NATURES_BALANCE' ),
        ( 'Fire-and-forget: power word: kill',                  '_FNF_PWKILL' ),
        ( 'Fire-and-forget: power word: stun',                  '_FNF_PWSTUN' ),
        ( 'Fire-and-forget: screen bump',                       '_FNF_SCREEN_BUMP' ),
        ( 'Fire-and-forget: screen shake',                      '_FNF_SCREEN_SHAKE' ),
        ( 'Fire-and-forget: screen shake 2',                    '356' ),
        ( 'Fire-and-forget: smoke puff',                        '_FNF_SMOKE_PUFF' ),
        ( 'Fire-and-forget: sound burst',                       '_FNF_SOUND_BURST' ),
        ( 'Fire-and-forget: sound burst (silent)',              '_FNF_SOUND_BURST_SILENT' ),
        ( 'Fire-and-forget: spell fail, hand',                  '293' ),
        ( 'Fire-and-forget: spell fail, head',                  '292' ),
        ( 'Fire-and-forget: strike holy',                       '_FNF_STRIKE_HOLY' ),
        ( 'Fire-and-forget: summon celestial',                  '_FNF_SUMMON_CELESTIAL' ),
        ( 'Fire-and-forget: summon dragon',                     '_FNF_SUMMONDRAGON' ),
        ( 'Fire-and-forget: summon epic undead',                '_FNF_SUMMON_EPIC_UNDEAD' ),
        ( 'Fire-and-forget: summon gate',                       '_FNF_SUMMON_GATE' ),
        ( 'Fire-and-forget: summon monster 1',                  '_FNF_SUMMON_MONSTER_1' ),
        ( 'Fire-and-forget: summon monster 2',                  '_FNF_SUMMON_MONSTER_2' ),
        ( 'Fire-and-forget: summon monster 3',                  '_FNF_SUMMON_MONSTER_3' ),
        ( 'Fire-and-forget: summon undead',                     '_FNF_SUMMON_UNDEAD' ),
        ( 'Fire-and-forget: sunbeam',                           '_FNF_SUNBEAM' ),
        ( 'Fire-and-forget: swinging blade',                    '_FNF_SWINGING_BLADE' ),
        ( 'Fire-and-forget: teleport in',                       '471' ),
        ( 'Fire-and-forget: teleport out',                      '472' ),
        ( 'Fire-and-forget: time stop',                         '_FNF_TIME_STOP' ),
        ( 'Fire-and-forget: undead dragon',                     '_FNF_UNDEAD_DRAGON' ),
        ( 'Fire-and-forget: wail of the banshees',              '_FNF_WAIL_O_BANSHEES' ),
        ( 'Fire-and-forget: weird',                             '_FNF_WEIRD' ),
        ( 'Fire-and-forget: word',                              '_FNF_WORD' ),
        ( 'Impact: AC bonus',                                   '_IMP_AC_BONUS' ),
        ( 'Impact: acid l',                                     '_IMP_ACID_L' ),
        ( 'Impact: acid s',                                     '_IMP_ACID_S' ),
        ( 'Impact: Bigby''s forceful hand',                     '_IMP_BIGBYS_FORCEFUL_HAND' ),
        ( 'Impact: blind/deaf m',                               '_IMP_BLIND_DEAF_M' ),
        ( 'Impact: breach',                                     '_IMP_BREACH' ),
        ( 'Impact: charm',                                      '_IMP_CHARM' ),
        ( 'Impact: clouds',                                     '133' ),
        ( 'Impact: cone of cold, head',                         '490' ),
        ( 'Impact: confusion s',                                '_IMP_CONFUSION_S' ),
        ( 'Impact: dazed s',                                    '_IMP_DAZED_S' ),
        ( 'Impact: death',                                      '_IMP_DEATH' ),
        ( 'Impact: death l',                                    '_IMP_DEATH_L' ),
        ( 'Impact: death ward',                                 '_IMP_DEATH_WARD' ),
        ( 'Impact: destruction',                                '_IMP_DESTRUCTION' ),
        ( 'Impact: destruction, low',                           '302' ),
        ( 'Impact: disease s',                                  '_IMP_DISEASE_S' ),
        ( 'Impact: dispel',                                     '_IMP_DISPEL' ),
        ( 'Impact: divine strike fire',                         '_IMP_DIVINE_STRIKE_FIRE' ),
        ( 'Impact: divine strike holy',                         '_IMP_DIVINE_STRIKE_HOLY' ),
        ( 'Impact: dominate s',                                 '_IMP_DOMINATE_S' ),
        ( 'Impact: doom',                                       '_IMP_DOOM' ),
        ( 'Impact: dust explosion',                             '_IMP_DUST_EXPLOSION' ),
        ( 'Impact: elemental protection',                       '_IMP_ELEMENTAL_PROTECTION' ),
        ( 'Impact: evil help',                                  '_IMP_EVIL_HELP' ),
        ( 'Impact: flame m',                                    '_IMP_FLAME_M' ),
        ( 'Impact: flame s',                                    '_IMP_FLAME_S' ),
        ( 'Impact: fortitude saving throw use',                 '_IMP_FORTITUDE_SAVING_THROW_USE' ),
        ( 'Impact: frost l',                                    '_IMP_FROST_L' ),
        ( 'Impact: frost s',                                    '_IMP_FROST_S' ),
        ( 'Impact: globe use',                                  '_IMP_GLOBE_USE' ),
        ( 'Impact: good help',                                  '_IMP_GOOD_HELP' ),
        ( 'Impact: harm',                                       '_IMP_HARM' ),
        ( 'Impact: haste',                                      '_IMP_HASTE' ),
        ( 'Impact: head acid',                                  '_IMP_HEAD_ACID' ),
        ( 'Impact: head cold',                                  '_IMP_HEAD_COLD' ),
        ( 'Impact: head electricity',                           '_IMP_HEAD_ELECTRICITY' ),
        ( 'Impact: head evil',                                  '_IMP_HEAD_EVIL' ),
        ( 'Impact: head fire',                                  '_IMP_HEAD_FIRE' ),
        ( 'Impact: head heal',                                  '_IMP_HEAD_HEAL' ),
        ( 'Impact: head holy',                                  '_IMP_HEAD_HOLY' ),
        ( 'Impact: head mind',                                  '_IMP_HEAD_MIND' ),
        ( 'Impact: head nature',                                '_IMP_HEAD_NATURE' ),
        ( 'Impact: head odd',                                   '_IMP_HEAD_ODD' ),
        ( 'Impact: head sonic',                                 '_IMP_HEAD_SONIC' ),
        ( 'Impact: healing g',                                  '_IMP_HEALING_G' ),
        ( 'Impact: healing l',                                  '_IMP_HEALING_L' ),
        ( 'Impact: healing m',                                  '_IMP_HEALING_M' ),
        ( 'Impact: healing s',                                  '_IMP_HEALING_S' ),
        ( 'Impact: healing x',                                  '_IMP_HEALING_X' ),
        ( 'Impact: holy aid',                                   '_IMP_HOLY_AID' ),
        ( 'Impact: improve ability score',                      '_IMP_IMPROVE_ABILITY_SCORE' ),
        ( 'Impact: knock',                                      '_IMP_KNOCK' ),
        ( 'Impact: lance shatter A',                            '620' ),
        ( 'Impact: lance shatter B',                            '621' ),
        ( 'Impact: lance shatter C',                            '622' ),
        ( 'Impact: lightning m',                                '_IMP_LIGHTNING_M' ),
        ( 'Impact: lightning s',                                '_IMP_LIGHTNING_S' ),
        ( 'Impact: magblue',                                    '_IMP_MAGBLUE' ),
        ( 'Impact: magic protection',                           '_IMP_MAGIC_PROTECTION' ),
        ( 'Impact: magic resistance use',                       '_IMP_MAGIC_RESISTANCE_USE' ),
        ( 'Impact: magical vision',                             '_IMP_MAGICAL_VISION' ),
        ( 'Impact: negative energy',                            '_IMP_NEGATIVE_ENERGY' ),
        ( 'Impact: nightmare head hit',                         '_IMP_NIGHTMARE_HEAD_HIT' ),
        ( 'Impact: PDK final stand',                            '_IMP_PDK_FINAL_STAND' ),
        ( 'Impact: PDK generic head hit',                       '_IMP_PDK_GENERIC_HEAD_HIT' ),
        ( 'Impact: PDK generic pulse',                          '_IMP_PDK_GENERIC_PULSE' ),
        ( 'Impact: PDK heroic shield',                          '_IMP_PDK_HEROIC_SHIELD' ),
        ( 'Impact: PDK inspire courage',                        '_IMP_PDK_INSPIRE_COURAGE' ),
        ( 'Impact: PDK oath',                                   '_IMP_PDK_OATH' ),
        ( 'Impact: PDK rallying cry',                           '_IMP_PDK_RALLYING_CRY' ),
        ( 'Impact: PDK wrath',                                  '_IMP_PDK_WRATH' ),
        ( 'Impact: poison s',                                   '_IMP_POISON_S' ),
        ( 'Impact: polymorph',                                  '_IMP_POLYMORPH' ),
        ( 'Impact: pulse bomb',                                 '469' ),
        ( 'Impact: pulse cold',                                 '_IMP_PULSE_COLD' ),
        ( 'Impact: pulse fire',                                 '_IMP_PULSE_FIRE' ),
        ( 'Impact: pulse holy',                                 '_IMP_PULSE_HOLY' ),
        ( 'Impact: pulse holy (silent)',                        '462' ),
        ( 'Impact: pulse nature',                               '_IMP_PULSE_NATURE' ),
        ( 'Impact: pulse negative',                             '_IMP_PULSE_NEGATIVE' ),
        ( 'Impact: pulse water',                                '_IMP_PULSE_WATER' ),
        ( 'Impact: pulse wind',                                 '_IMP_PULSE_WIND' ),
        ( 'Impact: raise dead',                                 '_IMP_RAISE_DEAD' ),
        ( 'Impact: reduce ability score',                       '_IMP_REDUCE_ABILITY_SCORE' ),
        ( 'Impact: reflex save throw use',                      '_IMP_REFLEX_SAVE_THROW_USE' ),
        ( 'Impact: remove condition',                           '_IMP_REMOVE_CONDITION' ),
        ( 'Impact: restoration',                                '_IMP_RESTORATION' ),
        ( 'Impact: restoration, greater',                       '_IMP_RESTORATION_GREATER' ),
        ( 'Impact: restoration, lesser',                        '_IMP_RESTORATION_LESSER' ),
        ( 'Impact: rock explode 1',                             '135' ),
        ( 'Impact: rock explode 2',                             '136' ),
        ( 'Impact: rocks up',                                   '137' ),
        ( 'Impact: silence',                                    '_IMP_SILENCE' ),
        ( 'Impact: silence (no sound)',                         '470' ),
        ( 'Impact: sleep',                                      '_IMP_SLEEP' ),
        ( 'Impact: slow',                                       '_IMP_SLOW' ),
        ( 'Impact: sonic',                                      '_IMP_SONIC' ),
        ( 'Impact: spell mantle use',                           '_IMP_SPELL_MANTLE_USE' ),
        ( 'Impact: spike trap',                                 '_IMP_SPIKE_TRAP' ),
        ( 'Impact: starburst green',                            '_IMP_STARBURST_GREEN' ),
        ( 'Impact: starburst red',                              '_IMP_STARBURST_RED' ),
        ( 'Impact: stun',                                       '_IMP_STUN' ),
        ( 'Impact: sunstrike',                                  '_IMP_SUNSTRIKE' ),
        ( 'Impact: super heroism',                              '_IMP_SUPER_HEROISM' ),
        ( 'Impact: tornado',                                    '_IMP_TORNADO' ),
        ( 'Impact: unsummon',                                   '_IMP_UNSUMMON' ),
        ( 'Impact: wallspike',                                  '_IMP_WALLSPIKE' ),
        ( 'Impact: will saving throw use',                      '_IMP_WILL_SAVING_THROW_USE' ),
        ( 'Impact: wind',                                       '134' ),
        // The trailing info row:
        ( nil, 'VFX' ) );

    // NWScript constants for quick chat.
    VOICE_CHAT: array[0..49] of pchar =
      ( '_ATTACK',
        '_GATTACK1',        // ("Attack grunt 1")
        '_GATTACK2',        // ("Attack grunt 2")
        '_GATTACK3',        // ("Attack grunt 3")
        '_BADIDEA',
        '_BATTLECRY1',
        '_BATTLECRY2',
        '_BATTLECRY3',
        '_BORED',
        '_CANDO',
        '_CANTDO',
        '_CHEER',
        '_CUSS',
        '_DEATH',
        '_NEARDEATH',       // ("Dying")
        '_ENCUMBERED',
        '_ENEMIES',
        '_FLEE',
        '_FOLLOWME',
        '_HIDE',            // ("Go stealthy")
        '_GOODIDEA',
        '_GOODBYE',
        '_GROUP',
        '_GUARDME',
        '_HEALME',
        '_HELLO',
        '_HELP',
        '_HOLD',
        '_LAUGH',
        '_LOOKHERE',
        '_MOVEOVER',
        '_NO',
        '_PAIN1',
        '_PAIN2',
        '_PAIN3',
        '_PICKLOCK',
        '_POISONED',
        '_REST',
        '_SEARCH',
        '_SELECTED',
        '_TALKTOME',        // ("Something to say")
        '_SPELLFAILED',
        '_STOP',
        '_TASKCOMPLETE',
        '_TAUNT',
        '_THANKS',
        '_THREATEN',
        '_WEAPONSUCKS',
        '_YES',
        // The trailing info row:
        'VOICE_CHAT' );

    // NWScript constants for wings.
    WING_TYPE: array[0..38] of StringPair = (
        ( 'None',                    nil ),
        ( 'Angel',                   nil ),
        ( 'Backpack',                '79' ),
        ( 'Backpack, bedroll',       '80' ),
        ( 'Bat',                     nil ),
        ( 'Bird',                    nil ),
        ( 'Butterfly',               nil ),
        ( 'Demon',                   nil ),
        ( 'Dragon',                  nil ),
        ( 'Dragon wing, black',      '65' ),
        ( 'Dragon wing, black 2',    '75' ),
        ( 'Dragon wing, blue',       '67' ),
        ( 'Dragon wing, blue 2',     '77' ),
        ( 'Dragon wing, brass',      '59' ),
        ( 'Dragon wing, brass 2',    '69' ),
        ( 'Dragon wing, bronze',     '60' ),
        ( 'Dragon wing, bronze 2',   '70' ),
        ( 'Dragon wing, copper',     '61' ),
        ( 'Dragon wing, copper 2',   '71' ),
        ( 'Dragon wing, gold',       '63' ),
        ( 'Dragon wing, gold 2',     '73' ),
        ( 'Dragon wing, green',      '66' ),
        ( 'Dragon wing, green 2',    '76' ),
        ( 'Dragon wing, red',        '68' ),
        ( 'Dragon wing, red 2',      '78' ),
        ( 'Dragon wing, silver',     '62' ),
        ( 'Dragon wing, silver 2',   '72' ),
        ( 'Dragon wing, white',      '64' ),
        ( 'Dragon wing, white 2',    '74' ),
        ( 'Greatsword',              '89' ),
        ( 'Quiver',                  '81' ),
        ( 'Quiver, empty',           '82' ),
        ( 'Scabbard',                '83' ),
        ( 'Scabbard A',              '85' ),
        ( 'Scabbard A, empty',       '86' ),
        ( 'Scabbard B',              '87' ),
        ( 'Scabbard B, empty',       '88' ),
        ( 'Scabbard, empty',         '84' ),
        // The trailing info row:
        ( nil, 'CREATURE_WING_TYPE' )
      );


// -----------------------------------------------------------------------------
implementation

uses
    nwn; // Very limited usage (WillBeAssigned()), but used nonetheless.

const
    // The positions of data in StringPair and StringTriple.
    CONSTANT_DISPLAY = 0;
    CONSTANT_SCRIPT  = 1;
    CONSTANT_INFO    = 2;


// Replaces the contents of Destination with the contents of Source.
// This will do nothing (so the current selection is maintained) if the
// Destination already contains Source. (Well, if the first item matches up,
// which should be good enough in practice.)
procedure LoadConstants(Destination: TStrings; const Source: array of pchar);
var
    index: integer;
begin
    // Abort if already loaded.
    if Destination.Count > 0 then
        if Destination[0] = Source[0] then
            exit;

    // Allow these changes to be batched up.
    Destination.BeginUpdate();
    try
        // Empty the old contents.
        Destination.Clear();
        // Ensure space has been allocated.
        if Destination.Capacity < High(Source) then
            Destination.Capacity := High(Source);
        // Load the new contents.
        for index := 0 to High(Source)-1 do
            Destination.Append(Source[index]);
    finally
        // End the batched changes.
        Destination.EndUpdate();
    end;
end;


// Replaces the contents of Destination with the "pretty names" from Source.
// This will do nothing (so the current selection is maintained) if the
// Destination already contains Source. (Well, if the first item matches up,
// which should be good enough in practice.)
procedure LoadConstants(Destination: TStrings; const Source: array of StringPair);
var
    index: integer;
begin
    // Abort if already loaded.
    if Destination.Count > 0 then
        if Destination[0] = Source[0][CONSTANT_DISPLAY] then
            exit;

    // Allow these changes to be batched up.
    Destination.BeginUpdate();
    try
        // Empty the old contents.
        Destination.Clear();
        // Ensure space has been allocated.
        if Destination.Capacity < High(Source) then
            Destination.Capacity := High(Source);
        // Load the new contents, skipping the extra row at the end.
        for index := 0 to High(Source)-1 do
            Destination.Append(Source[index][CONSTANT_DISPLAY]);
    finally
        // End the batched changes.
        Destination.EndUpdate();
    end;
end;


// Replaces the contents of Destination with the "pretty names" from Source.
// This will do nothing (so the current selection is maintained) if the
// Destination already contains Source. (Well, if the first item matches up,
// which should be good enough in practice.)
procedure LoadConstants(Destination: TStrings; const Source: array of StringTriple);
var
    index: integer;
begin
    // Abort if already loaded.
    if Destination.Count > 0 then
        if Destination[0] = Source[0][CONSTANT_DISPLAY] then
            exit;

    // Allow these changes to be batched up.
    Destination.BeginUpdate();
    try
        // Empty the old contents.
        Destination.Clear();
        // Ensure space has been allocated.
        if Destination.Capacity < High(Source) then
            Destination.Capacity := High(Source);
        // Load the new contents, skipping the extra row at the end.
        for index := 0 to High(Source)-1 do
            Destination.Append(Source[index][CONSTANT_DISPLAY]);
    finally
        // End the batched changes.
        Destination.EndUpdate();
    end;
end;


// Returns the NWScript symbolic constant for the entry in List with index Index.
function SymConst(const List: array of pchar; Index: integer): shortstring;
begin
    if Index < 0 then
        result := '-1'
    else if List[High(List)] = nil then
        result := List[index]
    else
        result := NameToConstant(List[High(List)], List[Index]);
end;


// Returns the NWScript symbolic constant for the entry in List with index Index.
function SymConst(const List: array of StringPair; Index: integer): shortstring;
var
    sPrefix, sSymbol: pchar;
begin
    if Index < 0 then begin
        result := '-1';
        exit;
    end;

    sSymbol := List[Index][CONSTANT_SCRIPT];
    sPrefix := List[High(List)][CONSTANT_SCRIPT];

    // Generate the symbol?
    if sSymbol = nil then
        result := NameToConstant(sPrefix, List[Index][CONSTANT_DISPLAY])
    // Abbreviated symbol?
    else if sSymbol = '_' then
        result := shortstring(sPrefix)
    else if sSymbol[0] = '_' then
        result := shortstring(sPrefix) + shortstring(sSymbol)
    // Take the symbol literally.
    else
        result := shortstring(sSymbol);
end;


// Returns the NWScript symbolic constant for the entry in List with index Index.
function SymConst(const List: array of StringTriple; Index: integer): shortstring;
var
    sPrefix, sSymbol: pchar;
begin
    if Index < 0 then begin
        result := '-1';
        exit;
    end;

    sSymbol := List[Index][CONSTANT_SCRIPT];
    sPrefix := List[High(List)][CONSTANT_SCRIPT];

    // Generate the symbol?
    if sSymbol = nil then
        result := NameToConstant(sPrefix, List[Index][CONSTANT_DISPLAY])
    // Abbreviated symbol?
    else if sSymbol = '_' then
        result := shortstring(sPrefix)
    else if sSymbol[0] = '_' then
        result := shortstring(sPrefix) + shortstring(sSymbol)
    // Take the symbol literally.
    else
        result := shortstring(sSymbol);
end;


// Converts a NWScript symbolic constant (presumably read from an existing script)
// to an index into the Generator's list of constants.
// Returns -1 on no match.
function SymbolToIndex(const sSymbol: shortstring; const List: array of StringPair): integer;
begin
    // Scan the constants for a match.
    result := High(List) - 1; // Skip the trailing info row.
    while (result > 0)  and  (sSymbol <> SymConst(List, result)) do
        Dec(result);

    // If no match, return -1.
    if sSymbol <> SymConst(List, result) then
        result := -1;
end;


// Returns the text to be displayed as the name of the indicated symbolic constant.
// (So other units do not have to know the array structure.)
function ConstDisplay(const List: array of StringPair;   Index: integer): shortstring; inline;
begin
    result := List[Index][CONSTANT_DISPLAY];
end;

// Returns the text to be displayed as the name of the indicated symbolic constant.
// (So other units do not have to know the array structure.)
function ConstDisplay(const List: array of StringTriple; Index: integer): shortstring; inline;
begin
    result := List[Index][CONSTANT_DISPLAY];
end;


// Returns the extra info assoicated with the indicated symbolic constant.
// (So other units do not have to know the array structure.)
function ConstInfo(const List: array of StringTriple; Index: integer): pchar; inline;
begin
    result := List[Index][CONSTANT_INFO];
end;


// Converts a "pretty name" to a NWScript symbolic constant.
// Specifically:
//  The following is done to sName before prepending it with sPrefix + '_':
//  spaces become underscores,
//  letters become uppercase,
//  digits are preserved,
//  plus sign becomes 'PLUS_',
//  minus sign becomes 'MINUS_',
//  percent sign becomes '_PERCENT', and
//  other characters are ignored.
function NameToConstant(const sPrefix: pchar; const sName: shortstring): shortstring;
var
    i, iPlus: integer;
    sConverted: shortstring;
begin
    // Convert the name part.
    SetLength(sConverted, Length(sName));
    iPlus := 0; // Tracks extra characters added.
    for i := 1 to Length(sName) do
        case sName[i] of
            ' ':      sConverted[i+iPlus] := '_';
            'a'..'z': sConverted[i+iPlus] := char(ord(sName[i]) + ord('A')-ord('a'));
            'A'..'Z': sConverted[i+iPlus] := sName[i];
            '0'..'9': sConverted[i+iPlus] := sName[i];

            '+': begin
                      SetLength(sConverted, Length(sConverted)+4);
                      sConverted[i+iPlus+0] := 'P';
                      sConverted[i+iPlus+1] := 'L';
                      sConverted[i+iPlus+2] := 'U';
                      sConverted[i+iPlus+3] := 'S';
                      sConverted[i+iPlus+4] := '_';
                      iPlus += 4;
                  end;
            '-': begin
                      SetLength(sConverted, Length(sConverted)+5);
                      sConverted[i+iPlus+0] := 'M';
                      sConverted[i+iPlus+1] := 'I';
                      sConverted[i+iPlus+2] := 'N';
                      sConverted[i+iPlus+3] := 'U';
                      sConverted[i+iPlus+4] := 'S';
                      sConverted[i+iPlus+5] := '_';
                      iPlus += 5;
                  end;

            '%': begin
                      SetLength(sConverted, Length(sConverted)+7);
                      sConverted[i+iPlus+0] := '_';
                      sConverted[i+iPlus+1] := 'P';
                      sConverted[i+iPlus+2] := 'E';
                      sConverted[i+iPlus+3] := 'R';
                      sConverted[i+iPlus+4] := 'C';
                      sConverted[i+iPlus+5] := 'E';
                      sConverted[i+iPlus+6] := 'N';
                      sConverted[i+iPlus+7] := 'T';
                      iPlus += 7;
                  end;

            else // Skipped
                  begin
                      SetLength(sConverted, Length(sConverted)-1);
                      iPlus -= 1;
                  end;
        end;//case

    result := sPrefix + '_' + sConverted;
end;


// Converts a "pretty name" to a NWScript command.
// Specifically: removes everything but letters and digits, then prepends sPrefix.
function NameToCommand(const sPrefix: pchar; const sName: shortstring): shortstring;
var
    iName, iConv: integer;
    sConverted:   shortstring;
begin
    // Initial (over-)estimate of length.
    SetLength(sConverted, Length(sName));

    // Remove unwanted characters.
    iConv := 0;
    for iName := 1 to Length(sName) do
        if ( ('a' <= sName[iName]) and (sName[iName] <= 'z') ) or
           ( ('A' <= sName[iName]) and (sName[iName] <= 'Z') ) or
           ( ('0' <= sName[iName]) and (sName[iName] <= '9') ) then
        begin
            Inc(iConv);
            sConverted[iConv] := sName[iName];
        end;
    // Correct the length.
    SetLength(sConverted, iConv);

    result := sPrefix + sConverted;
end;


// -------------------------------------
// Handling the PC/actor/spawn/tagged/etc. selections:


// Returns an enumerate indicating which radio button was selected.
// nil can be passed as a parameter, and the result if no supplied buttons
// are selected is E_CHOOSE_Other.
// bAllowMacro controls whether or not OBJECT_SELF is allowed instead of oSelf.
function GetChosenObject(RadioOwner, RadioPC, RadioActivator, RadioTargeted,
                         RadioTagged, RadioActor, RadioSpawn: TRadioButton;
                         bAllowMacro: boolean=TRUE) : TObjectEnum;
begin
         if (RadioPC <> nil)        and RadioPC.Checked        then result := E_CHOOSE_PC
    else if (RadioActivator <> nil) and RadioActivator.Checked then result := E_CHOOSE_Activator
    else if (RadioTargeted <> nil)  and RadioTargeted.Checked  then result := E_CHOOSE_ActTarget
    else if (RadioTagged <> nil)    and RadioTagged.Checked    then result := E_CHOOSE_Tagged
    else if (RadioActor <> nil)     and RadioActor.Checked     then result := E_CHOOSE_Actor
    else if (RadioSpawn <> nil)     and RadioSpawn.Checked     then result := E_CHOOSE_Spawn
    else if (RadioOwner <> nil)     and RadioOwner.Checked then
    begin
        if not bAllowMacro or Tlilac.WillBeAssigned()          then result := E_CHOOSE_Self
                                                               else result := E_CHOOSE_Owner;
    end
    else
        result := E_CHOOSE_Other;
end;


// Returns text (for use in comments) describing the object indicated by eWhich.
// TagText is used if a tagged object is indicated.
// If bReflexive is true, then 'ourself' is used instead of 'us'.
function ObjectDesc(eWhich: TObjectEnum; const sTagText: shortstring;
                    bReflexive: boolean=false; const sAlt: shortstring='') : shortstring;
begin
    case eWhich of
        E_CHOOSE_PC:        result := 'the PC';
        E_CHOOSE_Activator: result := 'the item activator';
        E_CHOOSE_ActTarget: result := 'the activation target';
        E_CHOOSE_Tagged:    result := '"'+sTagText+'"';
        E_CHOOSE_Actor:     result := '"'+Tlilac.last_actor+'"';
        E_CHOOSE_Spawn:     result := 'the spawn';
        E_CHOOSE_Owner,
        E_CHOOSE_Self:      result := BoolToStr(bReflexive, 'ourself', 'us');
        else                result := sAlt;
    end;
end;


// Returns the variable name corresponding to eWhich, possibly converted to a
// location.
// sAlt is the variable name for E_CHOOSE_Other.
// I have not yet used the case of E_CHOOSE_Other and a location, so the behavior
// in that case is officially undefined until I see what would be most convenient.
// (Meaning it can be changed without hurting anything yet.)
function ObjectVar(eWhich: TObjectEnum; const sAlt: shortstring=''; bLocation: boolean=FALSE) : shortstring;
const
    var_list: array[TObjectEnum] of pchar =
          ( s_OBJECT_SELF,  // E_CHOOSE_Owner
            s_oSelf,        // E_CHOOSE_Self
            s_oPC,          // E_CHOOSE_PC
            s_oActivator,   // E_CHOOSE_Activator
            s_oActTarget,   // E_CHOOSE_ActTarget
            s_oTarget,      // E_CHOOSE_Tagged
            s_oActor,       // E_CHOOSE_Actor
            s_oSpawn,       // E_CHOOSE_Spawn
            nil             // E_CHOOSE_Other (unused)
          );
begin
    if eWhich = E_CHOOSE_Other then
        result := sAlt
    else
        result := shortstring(var_list[eWhich]);

    if bLocation then begin
        // The activation target does not really require an object.
        if eWhich = E_CHOOSE_ActTarget then
            result := s_lActTarget
        else
            result := s_GetLocation + result+')';
    end;
end;


// -------------------------------------
// More generic-ish utilities:


// Overload to avoid converting to ansistring.
function BoolToStr(B: boolean; const TrueS, FalseS: shortstring): shortstring; inline;
begin
    if B then
        Result := TrueS
    else
        BoolToStr := FalseS;
end;


// Chops nLeft characters off the left of the string and nRight characters off
// the right, then returns the result.
function ChopBoth(const sString: shortstring; nLeft, nRight: integer): shortstring; inline;
begin
    result := Copy(sString, 1 + nLeft, Length(sString) - nLeft - nRight);
end;


// Not needed yet:
//// Chops nCount characters off the left of the string and returns the result.
//function ChopLeft(const sString: shortstring; nCount: integer): shortstring; inline;
//begin
//    result := Copy(sString, 1 + nCount, Length(sString) - nCount);
//end;


// Not needed yet:
//// Chops nCount characters off the right of the string and returns the result.
//function ChopRight(const sString: shortstring; nCount: integer): shortstring; inline;
//begin
//    result := Copy(sString, 1, Length(sString) - nCount);
//end;


// Returns the last character in a string.
// Optimized under the assumption that sString is not ''.
// This is for those times when the string has a long name, making writing this
// out explicitly somewhat of a pain.
function LastChar(const sString: shortstring): char; inline;
begin
    result := sString[Length(sString)];
end;


// Converts double quotes in the provided string to single quotes (so the
// string can be quoted in NWScript).
function QuoteSwap(const InString: shortstring): shortstring;
var
    index: integer;
begin
    // Could use the following, but a direct implementation may be more efficient.
    //result := StringReplace(InString, '"', '''', [rfReplaceAll]);

    SetLength(result, Length(InString));
    for index := 1 to Length(InString) do
        if InString[index] = '"' then
            result[index] := ''''
        else
            result[index] := InString[index];
end;


// Returns a string of spaces of the specified length.
function Spaces(how_long: integer): shortstring;
var
    i: integer;
begin
    SetLength(result, how_long);
    for i := 1 to how_long do
        result[i] := ' ';
end;


// Returns TRUE if sPrefix is the beginning of sString.
// nStart can be used to specify a later starting position.
// (e.g. StartsWith('wxyz', 'xy', 2) returns true.
function StartsWith(const sString, sPrefix: shortstring; nStart: integer=1): boolean; inline;
begin
    result :=  sPrefix = copy(sString, nStart, Length(sPrefix));
end;


end.

